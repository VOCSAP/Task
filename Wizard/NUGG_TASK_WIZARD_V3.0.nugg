<?xml version="1.0" encoding="utf-8"?>
<nugget name="TASK_WIZARD_V3">
 <CLAS CLSNAME="ZCL_TASK_WIZARD" VERSION="1" LANGU="F" DESCRIPT="Tâche - Assistant utilisation Cadriciel" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" MSG_ID="ZTASK" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <implementing CLSNAME="ZCL_TASK_WIZARD" REFCLSNAME="IF_WB_PROGRAM" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations
*&amp;---------------------------------------------------------------------*


*----------------------------------------------------------------------*
*       CLASS LCL_CONVERT DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_convert DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Formatage pour application Template
    CLASS-METHODS : boolean_convert_to_string
      IMPORTING
                iv_value        TYPE xsdboolean
      RETURNING VALUE(rv_value) TYPE string.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


*-- Privée
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


ENDCLASS.             &quot;lcl_CONVERT DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_CONVERT IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_convert IMPLEMENTATION.

  METHOD boolean_convert_to_string.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Transforme Booléan en Littéral
    &quot; -----------------------------------------------------------

    &quot; Convertis le Booléen dans sa version littérale
    rv_value = SWITCH string( iv_value
      WHEN abap_true THEN &apos;ABAP_TRUE&apos;                       &quot;#EC NOTEXT
      ELSE &apos;ABAP_FALSE&apos;                                     &quot;#EC NOTEXT
    ).

  ENDMETHOD.


ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_source_code DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_source_code DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

    TYPES :
      BEGIN OF ty_source_code_check,
        subrc     TYPE sy-subrc,
        message   TYPE string,
        line      TYPE i,
        word      TYPE string,
        t_warning TYPE tab_rslinlmsg,
      END OF   ty_source_code_check.

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Programme - Création
    CLASS-METHODS repid_create
      IMPORTING
                !is_program_trdir    TYPE trdir
                !iv_program_title    TYPE clike OPTIONAL
                !iv_mainprogram_name TYPE sy-repid OPTIONAL
                !iv_program_corrnum  TYPE e070-trkorr OPTIONAL
                !iv_program_ordernum TYPE e070-trkorr OPTIONAL
                !iv_program_devclass TYPE tdevc-devclass OPTIONAL
      RETURNING VALUE(rs_return)     TYPE bapiret2.

    &quot; Code Source - Récupération
    CLASS-METHODS source_code_get
      IMPORTING
                !iv_repid             TYPE sy-repid
      RETURNING VALUE(rt_source_code) TYPE stringtab.

    &quot; Code Source - Modification
    CLASS-METHODS source_code_set
      IMPORTING
        !iv_repid       TYPE sy-repid
        !it_source_code TYPE stringtab.

    &quot; Code Source - Contrôle
    CLASS-METHODS source_code_check
      IMPORTING
                !iv_repid       TYPE sy-repid
                !iv_include     TYPE sy-repid OPTIONAL
                !it_source_code TYPE stringtab
      RETURNING VALUE(rs_check) TYPE lcl_source_code=&gt;ty_source_code_check.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


*-- Privée
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


ENDCLASS.             &quot;lcl_source_code DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_source_code IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_source_code IMPLEMENTATION.

  METHOD repid_create.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_program_trdir TYPE trdir.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_program_corrnum  TYPE e070-trkorr,
      lv_program_ordernum TYPE e070-trkorr,
      lv_program_devclass TYPE tdevc-devclass.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Création du Programme
    &quot; -----------------------------------------------------------

    &quot; Initialisation données locale
    ls_program_trdir    = is_program_trdir.
    lv_program_corrnum  = iv_program_corrnum.
    lv_program_ordernum = iv_program_ordernum.
    lv_program_devclass = iv_program_devclass.

    &quot; Création du Programme avec les paramètres spécifiés
    CALL FUNCTION &apos;RS_EDTR_ATTR_ADD&apos;
      EXPORTING
        program_name          = is_program_trdir-name
        program_title         = CONV rs38m-repti( iv_program_title )
        with_trdir_entry      = abap_true
        suppress_dialog       = abap_true
        activate_immediately  = abap_false
        type_switch_allowed   = abap_true
        mainprogram_name      = iv_mainprogram_name
      CHANGING
        program_trdir         = ls_program_trdir
        program_corrnum       = lv_program_corrnum
        program_ordernum      = lv_program_ordernum
        program_devclass      = lv_program_devclass
      EXCEPTIONS
        program_name_missing  = 1
        program_exists        = 2
        wrong_parameter_value = 3
        action_cancelled      = 4
        OTHERS                = 5.
    IF sy-subrc NE 0.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Initialisation données de retour
      rs_return-id         = sy-msgid.
      rs_return-type       = sy-msgty.
      rs_return-number     = sy-msgno.
      rs_return-message_v1 = sy-msgv1.
      rs_return-message_v2 = sy-msgv2.
      rs_return-message_v3 = sy-msgv3.
      rs_return-message_v4 = sy-msgv4.

    ENDIF.

  ENDMETHOD.

  METHOD source_code_get.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Récupération du Code Source
    &quot; -----------------------------------------------------------

    &quot; Récupération du Code Source
    READ REPORT iv_repid INTO rt_source_code.

  ENDMETHOD.

  METHOD source_code_set.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
          lt_source_code TYPE stringtab.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Mise en Forme du Code Source
    &quot; -----------------------------------------------------------

    &quot; Application du Pretty Printer
    CALL FUNCTION &apos;PRETTY_PRINTER&apos;
      EXPORTING
        inctoo             = abap_false
      TABLES
        otext              = it_source_code
        ntext              = lt_source_code
      EXCEPTIONS
        include_enqueued   = 1
        include_readerror  = 2
        include_writeerror = 3
        enqueue_table_full = 4.

    &quot; -----------------------------------------------------------
    &quot; Modification du Code Source du Programme
    &quot; -----------------------------------------------------------

    IF sy-subrc EQ 0.
      &quot; Modification du Code Source (Pretty Printer)
      INSERT REPORT iv_repid FROM lt_source_code.

    ELSE.
      &quot; Modification du Code Source (Sans mise en forme)
      INSERT REPORT iv_repid FROM it_source_code.

    ENDIF.

  ENDMETHOD.

  METHOD source_code_check.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Contrôle du Code Source
    &quot; -----------------------------------------------------------

    &quot; Contrôle le code à injecter
    IF iv_include IS INITIAL.
      &quot; Contrôle Programme Principal
      SYNTAX-CHECK FOR it_source_code MESSAGE rs_check-message      LINE rs_check-line
                                         WORD rs_check-word           ID &apos;MSG&apos; &quot;#EC NOTEXT
                                        TABLE rs_check-t_warning PROGRAM iv_repid.

    ELSE.
      &quot; Contrôle Include
      SYNTAX-CHECK FOR it_source_code MESSAGE rs_check-message      LINE rs_check-line
                                         WORD rs_check-word           ID &apos;MSG&apos; &quot;#EC NOTEXT
                                        TABLE rs_check-t_warning PROGRAM iv_repid
                                    REPLACING iv_include.

    ENDIF.

    &quot; Retourne code retour
    rs_check-subrc = sy-subrc.

  ENDMETHOD.

ENDCLASS.

*----------------------------------------------------------------------*
*       CLASS lcx_injector DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcx_injector DEFINITION
                         INHERITING FROM cx_dynamic_check
                                    FINAL CREATE PUBLIC .

*-- Publique
  PUBLIC SECTION.

    INTERFACES if_t100_message .

    METHODS constructor
      IMPORTING
        !textid   LIKE if_t100_message=&gt;t100key OPTIONAL
        !previous LIKE previous OPTIONAL .


ENDCLASS.             &quot;lcx_injector DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcx_injector IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcx_injector IMPLEMENTATION.

  METHOD constructor.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    CALL METHOD super-&gt;constructor
      EXPORTING
        previous = previous.
    CLEAR me-&gt;textid.
    IF textid IS INITIAL.
      if_t100_message~t100key = if_t100_message=&gt;default_textid.
    ELSE.
      if_t100_message~t100key = textid.
    ENDIF.

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_injector DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_injector DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        !is_task_wizard_data TYPE ztec_s_task_wizard_data
      RAISING
        lcx_injector.

    &quot; Traitement Principal
    METHODS main
      RAISING
        lcx_injector.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


*-- Privée
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

    TYPES :
      BEGIN OF ty_template_anchor_detail,
        header     TYPE stringtab,
        header_set TYPE xsdboolean,
        body       TYPE stringtab,
        end        TYPE stringtab,
      END OF   ty_template_anchor_detail.

    TYPES :
      BEGIN OF ty_template_anchor_function,
        at_eot      TYPE ty_template_anchor_detail,
        before_task TYPE ty_template_anchor_detail,
      END OF   ty_template_anchor_function.

    TYPES :
      BEGIN OF ty_template_anchor_method_det,
        classname  TYPE      ty_template_anchor_detail,
        methodname TYPE       ty_template_anchor_detail,
      END OF   ty_template_anchor_method_det.

    TYPES :
      BEGIN OF ty_template_anchor_method,
        at_eot      TYPE ty_template_anchor_method_det,
        before_task TYPE ty_template_anchor_method_det,
      END OF   ty_template_anchor_method.

    TYPES :
      BEGIN OF ty_template_anchor,
        method   TYPE ty_template_anchor_method,
        function TYPE ty_template_anchor_function,
      END OF   ty_template_anchor.

    TYPES :
      BEGIN OF ty_classname_list,
        event     TYPE string,
        classname TYPE string,
      END OF   ty_classname_list.

    TYPES : ty_t_classname_list TYPE SORTED TABLE OF ty_classname_list
            WITH UNIQUE KEY primary_key COMPONENTS event classname.

    TYPES :
      BEGIN OF ty_source_code,
        t_target_repid                 TYPE stringtab,
        t_target_incl_framework        TYPE stringtab,
        t_target_incl_selscreen        TYPE stringtab,
        t_template_task                TYPE stringtab,
        t_template_framework           TYPE stringtab,
        t_template_selscreen           TYPE stringtab,
        t_template_wizard_include_sign TYPE stringtab,
      END OF   ty_source_code.

    TYPES :
      BEGIN OF ty_transport_request,
        corrnum  TYPE e070-trkorr,
        ordernum TYPE e070-trkorr,
        devclass TYPE tadir-devclass,
        t_e071k  TYPE e071k_t,
        t_ko200  TYPE skwf_ko200s,
        t_tadir  TYPE scts_tadir,
      END OF   ty_transport_request.

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Injection du Template dans le programme Cible
    METHODS template_task_inject
      RETURNING VALUE(rv_subrc) TYPE sy-subrc.

    &quot; Template - Application
    METHODS template_apply.

    &quot; Template - Contrôle Code Source
    METHODS template_source_code_check
      EXPORTING
                ev_include_used TYPE xsdboolean
      RETURNING VALUE(rs_check) TYPE lcl_source_code=&gt;ty_source_code_check.

    &quot; Template - Injection
    METHODS template_source_code_inject.

    &quot; Création de l&apos;Include
    METHODS include_task_create
      IMPORTING
                iv_include_name       TYPE sy-repid
                iv_include_title      TYPE clike
      RETURNING VALUE(rt_source_code) TYPE stringtab.

    &quot; Ajout de l&apos;Include dans le Template
    METHODS template_task_include_add
      IMPORTING
        iv_include TYPE sy-repid.

    &quot; Ajout du Template du Cadriciel
    METHODS template_task_add
      CHANGING ct_source_code TYPE stringtab.

    &quot; Ajout du Template d&apos;Ecran de sélection
    METHODS template_selscreen_add
      CHANGING ct_source_code TYPE stringtab.

    &quot; Ajout du Template Modification Ecran de sélection
    METHODS template_selscreen_output_add
      CHANGING ct_source_code TYPE stringtab.

    &quot; Récupération du Template de Tâche
    METHODS template_task_get
      RAISING lcx_injector.

    &quot; Template - Modification attribut
    METHODS template_task_attribute_set.

    &quot; Template - Attributs - Génération - Modification
    METHODS template_task_attr_wizard_set.

    &quot; Template - Attributs - Configuration - Modification
    METHODS template_task_attr_config_set.

    &quot; Récupération Template
    METHODS template_get_by_anchor
      IMPORTING
                iv_anchor_beg      TYPE clike
                iv_anchor_end      TYPE clike
      RETURNING VALUE(rt_template) TYPE stringtab
      RAISING   lcx_injector.

    &quot; Modification Template Handler
    METHODS template_handler_task_set.

    &quot; Template - Ajout traitement sur Evènement
    METHODS template_handler_add
      IMPORTING
        iv_event             TYPE clike
        is_task_call_process TYPE ztec_s_task_call_process.

    &quot; Template - Anchor - Chargement
    METHODS template_anchor_load.

    &quot; Template - Anchor - Chargement - Méthode
    METHODS template_anchor_load_method.

    &quot; Template - Anchor - Chargement - MF
    METHODS template_anchor_load_function.

    &quot; Template - Anchor - Nettoyage
    METHODS template_anchor_clean.

    &quot; Ordre de Transport - Création
    METHODS transport_request_create
      IMPORTING
        iv_repid    TYPE sy-repid
        iv_creation TYPE xsdboolean OPTIONAL.

    &quot; Ordre de Transport - Ajout
    METHODS transport_request_add
      IMPORTING
        iv_repid    TYPE sy-repid
        iv_creation TYPE xsdboolean.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

* Constantes

    &quot; Template :
    CONSTANTS : mc_template_classname TYPE string VALUE &apos;LCL_TASK_TEMPLATE&apos;. &quot;#EC NOTEXT

    &quot; Evènement :
    CONSTANTS : mc_event_at_eot      TYPE string VALUE &apos;AT_EOT&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_event_before_task TYPE string VALUE &apos;BEFORE_TASK&apos;. &quot;#EC NOTEXT

    &quot; Anchor Variable - Implémentation :
    CONSTANTS : mc_anchor_grfc               TYPE string VALUE &apos;#grfc#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_datum              TYPE string VALUE &apos;#DATUM#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_uname              TYPE string VALUE &apos;#UNAME#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_grfc_r             TYPE string VALUE &apos;#grfc_r#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_task_max           TYPE string VALUE &apos;#task_max#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_task_trace         TYPE string VALUE &apos;#task_trace#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_compress_l         TYPE string VALUE &apos;#compress_l#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_compress_g         TYPE string VALUE &apos;#compress_g#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_compress_activ     TYPE string VALUE &apos;#compress_activ#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_shm_management     TYPE string VALUE &apos;#shm_management#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_use_server_default TYPE string VALUE &apos;#use_server_default#&apos;. &quot;#EC NOTEXT

    &quot; Anchor Méthode / Traitement :
    CONSTANTS : mc_anchor_at_eot               TYPE string VALUE &apos;ANCHOR-AT_EOT&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_before_task          TYPE string VALUE &apos;ANCHOR-BEFORE_TASK&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_task_beg    TYPE string VALUE &apos;#ANCHOR-TASK_TEMPLATE-BEG#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_task_end    TYPE string VALUE &apos;#ANCHOR-TASK_TEMPLATE-END#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_sign_beg    TYPE string VALUE &apos;#ANCHOR-WIZARD_SIGN-INCLUDE-BEG#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_sign_end    TYPE string VALUE &apos;#ANCHOR-WIZARD_SIGN-INCLUDE-END#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_selscre_beg TYPE string VALUE &apos;#ANCHOR-SELECTION-SCREEN-BEG#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_selscre_end TYPE string VALUE &apos;#ANCHOR-SELECTION-SCREEN-END#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_outputd_beg TYPE string VALUE &apos;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-DEF-BEG#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_outputd_end TYPE string VALUE &apos;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-DEF-END#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_outputi_beg TYPE string VALUE &apos;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-IMPL-BEG#&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_anchor_template_outputi_end TYPE string VALUE &apos;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-IMPL-END#&apos;. &quot;#EC NOTEXT

*	Déclaration d&apos;attributs
    DATA : ms_source_code TYPE ty_source_code.
    DATA : mv_repid_target TYPE sy-repid.
    DATA : mt_classname_list TYPE ty_t_classname_list.
    DATA : mv_task_classname TYPE string.
    DATA : ms_template_anchor TYPE ty_template_anchor.
    DATA : ms_task_wizard_data TYPE ztec_s_task_wizard_data.
    DATA : ms_transport_request TYPE ty_transport_request.
    DATA : mt_task_call_process TYPE ztec_t_task_call_process.

ENDCLASS.             &quot;lcl_injector DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_injector IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_injector IMPLEMENTATION.

  METHOD constructor.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_textid TYPE scx_t100key.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Contrôle
    &quot; -----------------------------------------------------------

    IF is_task_wizard_data-target_repid IS INITIAL
    OR is_task_wizard_data-task_template_repid IS INITIAL.
      &quot; Pas de programme
      RAISE EXCEPTION TYPE lcx_injector.

    ELSEIF is_task_wizard_data-target_repid(1)        NE &apos;Z&apos; &quot;#EC NOTEXT
        OR is_task_wizard_data-task_template_repid(1) NE &apos;Z&apos;. &quot;#EC NOTEXT
      &quot; Pas un programme spécifique
      RAISE EXCEPTION TYPE lcx_injector.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Initialisation Attributs
    &quot; -----------------------------------------------------------

    me-&gt;mv_repid_target        = is_task_wizard_data-target_repid.
    me-&gt;ms_task_wizard_data    = is_task_wizard_data.
    me-&gt;mt_task_call_process[] = is_task_wizard_data-t_task_call_process[].

    &quot; -----------------------------------------------------------
    &quot; Récupération du Template de Tâche
    &quot; -----------------------------------------------------------

    &quot; Récupération du Code Source du Programme courant
    me-&gt;template_task_get( ).

    &quot; -----------------------------------------------------------
    &quot; Modification des Attributs du Template
    &quot; -----------------------------------------------------------

    &quot; Modification des variables
    me-&gt;template_task_attribute_set( ).

  ENDMETHOD.

  METHOD main.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_textid            TYPE scx_t100key,
      ls_code_source_check TYPE lcl_source_code=&gt;ty_source_code_check.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Modification Template Traitement Handler
    &quot; -----------------------------------------------------------

    &quot; Modification Template Handler
    me-&gt;template_handler_task_set( ).

    &quot; -----------------------------------------------------------
    &quot; Suppression des références d&apos;ancrage du Template
    &quot; -----------------------------------------------------------

    &quot; Nettoyage du Template
    me-&gt;template_anchor_clean( ).

    &quot; -----------------------------------------------------------
    &quot; Injection du Template
    &quot; -----------------------------------------------------------

    &quot; Pousse le Template dans le programme cible
    IF NOT me-&gt;template_task_inject( ) IS INITIAL.
      &quot; Une erreur de syntaxe est présente
      &quot;&quot;  --&gt; Lève une Exception
      ls_textid-msgno = 304.                                &quot;#EC NOTEXT
      ls_textid-msgid = &apos;BRAINOLAPAPI&apos;.                     &quot;#EC NOTEXT
      RAISE EXCEPTION TYPE lcx_injector
        EXPORTING
          textid = ls_textid.

    ENDIF.

  ENDMETHOD.

  METHOD template_handler_task_set.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Modifie le Template des Handler
    &quot; -----------------------------------------------------------

    LOOP AT me-&gt;mt_task_call_process ASSIGNING FIELD-SYMBOL(&lt;lfs_s_task_call_process&gt;).

      IF  &lt;lfs_s_task_call_process&gt;-class_name  IS INITIAL
      AND &lt;lfs_s_task_call_process&gt;-method_name IS INITIAL
      AND &lt;lfs_s_task_call_process&gt;-function_name IS INITIAL.
        &quot; Aucun Traitement
        &quot;&quot;  --&gt; Passe à l&apos;itération suivante
        CONTINUE.

      ENDIF.

      &quot; -----------------------------------------------------------
      &quot; Modification Template Traitement AT_EOT
      &quot; -----------------------------------------------------------

      &quot; Ajout Template Evènement - AT_EOT
      me-&gt;template_handler_add(
        iv_event             = mc_event_at_eot
        is_task_call_process = &lt;lfs_s_task_call_process&gt;
      ).

      &quot; Ajout Template Evènement - BEFORE_TASK
      me-&gt;template_handler_add(
        iv_event             = mc_event_before_task
        is_task_call_process = &lt;lfs_s_task_call_process&gt;
      ).

    ENDLOOP.

  ENDMETHOD.

  METHOD template_anchor_load.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Charge les Templates liées aux Anchors Méthode
    &quot; -----------------------------------------------------------

    me-&gt;template_anchor_load_method( ).

    &quot; -----------------------------------------------------------
    &quot; Charge les Templates liées aux Anchors MF
    &quot; -----------------------------------------------------------

    me-&gt;template_anchor_load_function( ).

  ENDMETHOD.

  METHOD template_anchor_load_method.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Charge les Templates liées aux Anchors Méthode - CLASSNAME
    &quot; -----------------------------------------------------------

    &quot; BEFORE_TASK &amp; AT_EOT - CLASSNAME - classname
    me-&gt;ms_template_anchor-method-before_task-classname-header
      = me-&gt;ms_template_anchor-method-at_eot-classname-header
      = VALUE stringtab(
      ( |&quot; -----------------------------------------------------------| ) &quot;#EC NOTEXT
      ( |&quot; Traitement sur Méthode Statique| )
      ( |&quot; -----------------------------------------------------------| ) &quot;#EC NOTEXT
      ( )
      ( |&quot; Suivant la Classe appelée| )                     &quot;#EC NOTEXT
      ( |CASE is_task_call_process-class_name.| )           &quot;#EC NOTEXT
      ( )
    ).

    &quot; Ajout Anchor pour positionner les Classes
    APPEND |//ANCHOR-AT_EOT-CLASSLIST|      TO ms_template_anchor-method-at_eot-classname-header. &quot;#EC NOTEXT
    APPEND |//ANCHOR-BEFORE_TASK-CLASSLIST| TO me-&gt;ms_template_anchor-method-before_task-classname-header. &quot;#EC NOTEXT

    &quot; BEFORE_TASK &amp; AT_EOT - CLASSNAME - Corps
    me-&gt;ms_template_anchor-method-before_task-classname-body
      = me-&gt;ms_template_anchor-method-at_eot-classname-body
      = VALUE stringtab(
      ( |WHEN &apos;&lt;&amp;CLASSNAME&amp;&gt;&apos;. &quot;#EC NOTEXT| )               &quot;#EC NOTEXT
      ( | &quot;Classe &lt;&amp;CLASSNAME&amp;&gt; | )
      ( |&quot;&quot;  --&gt; Suivant la méthode appelée| )              &quot;#EC NOTEXT
      ( |CASE is_task_call_process-method_name.| )          &quot;#EC NOTEXT
      ( )
    ).

    &quot; Ajout Anchor pour positionner les Méthodes de Classes
    APPEND |//ANCHOR-AT_EOT-&lt;&amp;CLASSNAME&amp;&gt;-METHODLIST|      TO me-&gt;ms_template_anchor-method-at_eot-classname-body. &quot;#EC NOTEXT
    APPEND |//ANCHOR-BEFORE_TASK-&lt;&amp;CLASSNAME&amp;&gt;-METHODLIST| TO me-&gt;ms_template_anchor-method-before_task-classname-body. &quot;#EC NOTEXT

    &quot; BEFORE_TASK &amp; AT_EOT - CLASSNAME - Fin
    me-&gt;ms_template_anchor-method-before_task-classname-end
      = me-&gt;ms_template_anchor-method-at_eot-classname-end
      = VALUE stringtab(
      ( |WHEN OTHERS.| )                                    &quot;#EC NOTEXT
      ( | &quot; Autre classe| )                                 &quot;#EC NOTEXT
      ( )
      ( |ENDCASE.| )                                        &quot;#EC NOTEXT
      ( )
    ).

    &quot; -----------------------------------------------------------
    &quot; Charge les Templates liées aux Anchors Méthode - METHODNAME
    &quot; -----------------------------------------------------------

    &quot; BEFORE_TASK &amp; AT_EOT - METHODNAME - Corps
    me-&gt;ms_template_anchor-method-before_task-methodname-body
      = me-&gt;ms_template_anchor-method-at_eot-methodname-body
      = VALUE stringtab(
      ( |WHEN &apos;&lt;&amp;PROCESS&amp;&gt;&apos;. &quot;#EC NOTEXT| )                 &quot;#EC NOTEXT
      ( |&quot;&quot;  --&gt; Traitement sur Méthode &lt;&amp;PROCESS&amp;&gt;| )      &quot;#EC NOTEXT
      ( |&quot;ToDo | )                                          &quot;#EC NOTEXT
      ( )
    ).

    &quot; BEFORE_TASK &amp; AT_EOT - METHODNAME - Fin
    me-&gt;ms_template_anchor-method-before_task-methodname-end
      = me-&gt;ms_template_anchor-method-at_eot-methodname-end
      = VALUE stringtab(
      ( |WHEN OTHERS.| )                                    &quot;#EC NOTEXT
      ( | &quot; Autre méthode| )                                &quot;#EC NOTEXT
      ( )
      ( |ENDCASE.| )                                        &quot;#EC NOTEXT
      ( )
    ).

  ENDMETHOD.

  METHOD template_anchor_load_function.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Charge les Templates liées aux Anchors MF - AT_EOT
    &quot; -----------------------------------------------------------

    &quot; BEFORE_TASK &amp; AT_EOT - Entête
    me-&gt;ms_template_anchor-function-before_task-header = me-&gt;ms_template_anchor-function-at_eot-header
      = VALUE stringtab(
      ( |&quot; -----------------------------------------------------------| ) &quot;#EC NOTEXT
      ( |&quot; Traitement sur Module Fonction| )                &quot;#EC NOTEXT
      ( |&quot; -----------------------------------------------------------| ) &quot;#EC NOTEXT
      ( )
      ( |&quot; Suivant le MF appelé| )                          &quot;#EC NOTEXT
      ( |CASE is_task_call_process-function_name.| )        &quot;#EC NOTEXT
      ( )
    ).

    &quot; Ajout Anchor pour positionner les MF
    APPEND |//ANCHOR-AT_EOT-FUNCTIONLIST|      TO me-&gt;ms_template_anchor-function-at_eot-header. &quot;#EC NOTEXT
    APPEND |//ANCHOR-BEFORE_TASK-FUNCTIONLIST| TO me-&gt;ms_template_anchor-function-before_task-header. &quot;#EC NOTEXT

    &quot; BEFORE_TASK &amp; AT_EOT - Corps
    me-&gt;ms_template_anchor-function-before_task-body = me-&gt;ms_template_anchor-function-at_eot-body
      = VALUE stringtab(
      ( |WHEN &apos;&lt;&amp;PROCESS&amp;&gt;&apos;. &quot;#EC NOTEXT| )                 &quot;#EC NOTEXT
      ( |&quot;&quot;  --&gt; Traitement sur MF &lt;&amp;PROCESS&amp;&gt;| )           &quot;#EC NOTEXT
      ( |&quot;ToDo | )                                          &quot;#EC NOTEXT
      ( )
    ).

    &quot; BEFORE_TASK &amp; AT_EOT - Fin
    me-&gt;ms_template_anchor-function-before_task-end = me-&gt;ms_template_anchor-function-at_eot-end
      = VALUE stringtab(
      ( |WHEN OTHERS.| )                                    &quot;#EC NOTEXT
      ( | &quot; Autre cas| )                                    &quot;#EC NOTEXT
      ( )
      ( |ENDCASE.| )                                        &quot;#EC NOTEXT
      ( )
    ).

  ENDMETHOD.

  METHOD template_anchor_clean.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Suppression des ancrages liées au Template Evènement
    &quot; -----------------------------------------------------------

    &quot; Recherche position de tous les Anchor AT_EOT
    FIND ALL OCCURRENCES OF mc_anchor_at_eot IN TABLE me-&gt;ms_source_code-t_template_task
                                              RESULTS DATA(lt_results).
    IF sy-subrc EQ 0.
      &quot; Suppression des Anchors
      SORT lt_results BY line DESCENDING.
      LOOP AT lt_results ASSIGNING FIELD-SYMBOL(&lt;lfs_s_results&gt;).

        DELETE me-&gt;ms_source_code-t_template_task INDEX &lt;lfs_s_results&gt;-line.

      ENDLOOP.

    ENDIF.

    &quot; Recherche position de tous les Anchor BEFORE_TASK
    FIND ALL OCCURRENCES OF mc_anchor_before_task IN TABLE me-&gt;ms_source_code-t_template_task
                                                   RESULTS lt_results.
    IF sy-subrc EQ 0.
      &quot; Suppression des Anchors
      SORT lt_results BY line DESCENDING.
      LOOP AT lt_results ASSIGNING &lt;lfs_s_results&gt;.

        DELETE me-&gt;ms_source_code-t_template_task INDEX &lt;lfs_s_results&gt;-line.

      ENDLOOP.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Suppression des ancrages liées au Template Ecran de Sélection
    &quot; -----------------------------------------------------------

    &quot; Recherche Anchor Définition - Début
    FIND mc_anchor_template_outputd_beg IN TABLE me-&gt;ms_source_code-t_template_task
                                      MATCH LINE DATA(lv_line_def_beg).
    IF sy-subrc EQ 0.
      &quot; Recherche Anchor Définition - Fin
      FIND mc_anchor_template_outputd_end IN TABLE me-&gt;ms_source_code-t_template_task
                                        MATCH LINE DATA(lv_line_def_end).

    ENDIF.

    &quot; Recherche Anchor Implémentation - Début
    FIND mc_anchor_template_outputi_beg IN TABLE me-&gt;ms_source_code-t_template_task
                                      MATCH LINE DATA(lv_line_impl_beg).
    IF sy-subrc EQ 0.
      &quot; Recherche Anchor Implémentation - Fin
      FIND mc_anchor_template_outputi_end IN TABLE me-&gt;ms_source_code-t_template_task
                                         MATCH LINE DATA(lv_line_impl_end).

    ENDIF.

    IF me-&gt;ms_task_wizard_data-target_selscreen_add EQ abap_true.
      &quot; Ajout à l&apos;Ecran de Sélection
      IF NOT lv_line_impl_end IS INITIAL AND NOT lv_line_impl_beg IS INITIAL.
        &quot;&quot;  --&gt; Suppression des Anchor de l&apos;Implémentation
        DELETE me-&gt;ms_source_code-t_template_task INDEX : lv_line_impl_end, lv_line_impl_beg.

      ENDIF.

      IF NOT lv_line_def_end IS INITIAL AND NOT lv_line_def_beg IS INITIAL.
        &quot;&quot;  --&gt; Suppression des Anchor de la Définition
        DELETE me-&gt;ms_source_code-t_template_task INDEX : lv_line_def_end, lv_line_def_beg.

      ENDIF.

    ELSE.
      &quot; Non ajouté à l&apos;Ecran de Sélection
      IF NOT lv_line_impl_end IS INITIAL AND NOT lv_line_impl_beg IS INITIAL.
        &quot;&quot;  --&gt; Suppression de l&apos;Implémentation
        DELETE me-&gt;ms_source_code-t_template_task FROM lv_line_impl_beg TO lv_line_impl_end.

      ENDIF.

      IF NOT lv_line_def_end IS INITIAL AND NOT lv_line_def_beg IS INITIAL.
        &quot;&quot;  --&gt; Suppression de la Définition
        DELETE me-&gt;ms_source_code-t_template_task FROM lv_line_def_beg TO lv_line_def_end.

      ENDIF.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Suppression des ancrages liées à la Signature
    &quot; -----------------------------------------------------------

    IF me-&gt;ms_task_wizard_data-target_framework_incl_use EQ abap_true.
      &quot; Recherche position de début
      CLEAR : lv_line_def_end, lv_line_def_beg.
      FIND mc_anchor_template_sign_beg IN TABLE me-&gt;ms_source_code-t_target_incl_framework
                                     MATCH LINE lv_line_def_beg.
      IF sy-subrc EQ 0.
        &quot; Recherche position de Fin
        FIND mc_anchor_template_sign_beg IN TABLE me-&gt;ms_source_code-t_target_incl_framework
                                       MATCH LINE lv_line_def_end.

      ENDIF.
      IF NOT lv_line_def_end IS INITIAL AND NOT lv_line_def_beg IS INITIAL.
        &quot;&quot;  --&gt; Suppression de l&apos;Implémentation
        DELETE me-&gt;ms_source_code-t_target_incl_framework FROM lv_line_def_beg TO lv_line_def_end.

      ENDIF.

    ENDIF.

    IF  me-&gt;ms_task_wizard_data-target_selscreen_add      EQ abap_true
    AND me-&gt;ms_task_wizard_data-target_selscreen_incl_use EQ abap_true.
      &quot; Recherche position de début
      CLEAR : lv_line_def_end, lv_line_def_beg.
      FIND mc_anchor_template_sign_beg IN TABLE me-&gt;ms_source_code-t_target_incl_selscreen
                                     MATCH LINE lv_line_def_beg.
      IF sy-subrc EQ 0.
        &quot; Recherche position de Fin
        FIND mc_anchor_template_sign_beg IN TABLE me-&gt;ms_source_code-t_target_incl_selscreen
                                       MATCH LINE lv_line_def_end.

      ENDIF.
      IF NOT lv_line_def_end IS INITIAL AND NOT lv_line_def_beg IS INITIAL.
        &quot;&quot;  --&gt; Suppression de l&apos;Implémentation
        DELETE me-&gt;ms_source_code-t_target_incl_selscreen FROM lv_line_def_beg TO lv_line_def_end.

      ENDIF.

    ENDIF.

  ENDMETHOD.

  METHOD template_task_get.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_textid TYPE scx_t100key.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    CLEAR : me-&gt;ms_source_code.

    &quot; -----------------------------------------------------------
    &quot; Récupération du Code Source du Programme Cadre
    &quot; -----------------------------------------------------------

    &quot; Récupération du Code Source du Programme Cadre
    me-&gt;ms_source_code-t_target_repid = lcl_source_code=&gt;source_code_get( me-&gt;ms_task_wizard_data-target_repid ).
    IF me-&gt;ms_source_code-t_target_repid[] IS INITIAL.
      &quot; Source non trouvée
      &quot;&quot;  --&gt; Lève une Exception
      ls_textid-msgid = zif_task_constant=&gt;mc_message_class_id.
      ls_textid-msgno = 606.
      ls_textid-attr1 = me-&gt;ms_task_wizard_data-target_repid.
      RAISE EXCEPTION TYPE lcx_injector
        EXPORTING
          textid = ls_textid.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Récupération du Code Source du Template
    &quot; -----------------------------------------------------------

    &quot; Récupération du Code Source du Programme Template
    me-&gt;ms_source_code-t_template_framework = lcl_source_code=&gt;source_code_get( me-&gt;ms_task_wizard_data-task_template_repid ).
    IF me-&gt;ms_source_code-t_template_framework[] IS INITIAL.
      &quot; Source non trouvée
      &quot;&quot;  --&gt; Lève une Exception
      ls_textid-msgid = zif_task_constant=&gt;mc_message_class_id.
      ls_textid-msgno = 606.
      ls_textid-attr1 = me-&gt;ms_task_wizard_data-task_template_repid.
      RAISE EXCEPTION TYPE lcx_injector
        EXPORTING
          textid = ls_textid.

    ENDIF.

    IF  me-&gt;ms_task_wizard_data-target_selscreen_add      EQ abap_true
    AND me-&gt;ms_task_wizard_data-target_selscreen_incl_use EQ abap_true.
      &quot; Ajout dans l&apos;Ecran de Sélection et Utilisation Include
      IF me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_change EQ abap_true.
        &quot; Modification de l&apos;Include spécifié
        &quot;&quot;  --&gt; Récupération du Code Source de l&apos;Include pour l&apos;Ecran de Sélection
        me-&gt;ms_source_code-t_target_incl_selscreen = lcl_source_code=&gt;source_code_get(
          me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
        ).

      ELSE.
        &quot; Création de l&apos;Include spécifié
        &quot;&quot;  --&gt; Création de l&apos;Include
        me-&gt;ms_source_code-t_target_incl_selscreen = me-&gt;include_task_create(
          iv_include_name  = me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
          iv_include_title = me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
        ).

      ENDIF.

      &quot;&quot;  --&gt; Ajout de l&apos;Include dans le Programme principal
      me-&gt;template_task_include_add( me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name ).

    ENDIF.

    IF me-&gt;ms_task_wizard_data-target_framework_incl_use EQ abap_true.
      &quot; Utilisation d&apos;un Include pour le Cadriciel
      IF me-&gt;ms_task_wizard_data-target_framework_incl_data-include_change EQ abap_true.
        &quot; Modification de l&apos;Include spécifié
        &quot;&quot;  --&gt; Récupération du Code Source de l&apos;Include pour le Cadriciel
        me-&gt;ms_source_code-t_target_incl_framework = lcl_source_code=&gt;source_code_get(
          me-&gt;ms_task_wizard_data-target_framework_incl_data-include_name
        ).

      ELSE.
        &quot; Création de l&apos;Include spécifié
        &quot;&quot;  --&gt; Création de l&apos;Include
        me-&gt;ms_source_code-t_target_incl_framework = me-&gt;include_task_create(
          iv_include_name  = me-&gt;ms_task_wizard_data-target_framework_incl_data-include_name
          iv_include_title = me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
        ).

      ENDIF.

      &quot;&quot;  --&gt; Ajout de l&apos;Include dans le Programme principal
      me-&gt;template_task_include_add( me-&gt;ms_task_wizard_data-target_framework_incl_data-include_name ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Récupération du Template du Cadriciel de Tâche
    &quot; -----------------------------------------------------------

    &quot; Retourne le Template du Cadriciel de Tâche
    me-&gt;ms_source_code-t_template_task = me-&gt;template_get_by_anchor(
      iv_anchor_beg = mc_anchor_template_task_beg
      iv_anchor_end = mc_anchor_template_task_end
    ).

    &quot; -----------------------------------------------------------
    &quot; Récupération du Template d&apos;Ecran de sélection
    &quot; -----------------------------------------------------------

    &quot; Retourne le Template d&apos;Ecran de sélection
    me-&gt;ms_source_code-t_template_selscreen = me-&gt;template_get_by_anchor(
      iv_anchor_beg = mc_anchor_template_selscre_beg
      iv_anchor_end = mc_anchor_template_selscre_end
    ).

    &quot; -----------------------------------------------------------
    &quot; Récupération du Template de Signature
    &quot; -----------------------------------------------------------

    &quot; Retourne le Template de Signature
    me-&gt;ms_source_code-t_template_wizard_include_sign = me-&gt;template_get_by_anchor(
      iv_anchor_beg = mc_anchor_template_sign_beg
      iv_anchor_end = mc_anchor_template_sign_end
    ).

    &quot; -----------------------------------------------------------
    &quot; Charge les Templates MF et Méthode
    &quot; -----------------------------------------------------------

    me-&gt;template_anchor_load( ).

  ENDMETHOD.

  METHOD template_get_by_anchor.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_textid TYPE scx_t100key.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Isole Position début et fin du Template recherché
    &quot; -----------------------------------------------------------

    &quot; Détermine position du template de Tâche (1er et dernière ligne)
    FIND iv_anchor_beg IN TABLE me-&gt;ms_source_code-t_template_framework MATCH LINE DATA(lv_line_beg). &quot;#EC NOTEXT
    FIND iv_anchor_end IN TABLE me-&gt;ms_source_code-t_template_framework MATCH LINE DATA(lv_line_end). &quot;#EC NOTEXT
    IF lv_line_end IS INITIAL OR lv_line_beg IS INITIAL.
      &quot; Source non trouvée
      &quot;&quot;  --&gt; Lève une Exception
      ls_textid-msgid = zif_task_constant=&gt;mc_message_class_id.
      ls_textid-msgno = 605.
      ls_textid-attr1 = iv_anchor_beg.
      ls_textid-attr2 = iv_anchor_end.
      RAISE EXCEPTION TYPE lcx_injector
        EXPORTING
          textid = ls_textid.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Isole le Template d&apos;Ecran de sélection
    &quot; -----------------------------------------------------------

    &quot; Retourne le Template Ecran de sélection
    rt_template = VALUE stringtab(
      FOR i = lv_line_beg + 1 UNTIL i &gt; lv_line_end - 1 &quot;Se positionne après l&apos;Anchor de début et avant celui de fin
        ( me-&gt;ms_source_code-t_template_framework[ i ] )
    ).

  ENDMETHOD.

  METHOD template_task_attribute_set.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Modification des attributs de génération du Template
    &quot; -----------------------------------------------------------

    &quot; Initialisation des Attributs de Génération
    me-&gt;template_task_attr_wizard_set( ).

    &quot; -----------------------------------------------------------
    &quot; Modification des attributs de génération du Template
    &quot; -----------------------------------------------------------

    &quot; Initialisation des Attributs de Configuration
    me-&gt;template_task_attr_config_set( ).

  ENDMETHOD.

  METHOD template_task_attr_wizard_set.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_attribute               TYPE string,
      lv_template_task_classname TYPE string.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Modification des attributs de génération du Template
    &quot; -----------------------------------------------------------

    FIND mc_anchor_uname IN TABLE me-&gt;ms_source_code-t_template_task MATCH LINE DATA(lv_line).
    IF sy-subrc EQ 0.
      ASSIGN me-&gt;ms_source_code-t_template_task[ lv_line ] TO FIELD-SYMBOL(&lt;lfs_s_template_task&gt;).
      IF sy-subrc EQ 0.
        &quot; Modification Attribut
        lv_attribute = |{ sy-datum DATE = USER }|.
        REPLACE mc_anchor_datum WITH lv_attribute INTO &lt;lfs_s_template_task&gt;.
        REPLACE mc_anchor_uname WITH sy-uname INTO &lt;lfs_s_template_task&gt;.

      ENDIF.

    ENDIF.

    &quot; Modification Nom de la Classe
    CLEAR : me-&gt;mv_task_classname.
    IF me-&gt;ms_task_wizard_data-task_class_replace IS INITIAL.
      &quot; Pas de nom
      &quot;&quot;  --&gt; Utilisation nom générique
      me-&gt;mv_task_classname = mc_template_classname.

    ELSEIF strlen( me-&gt;ms_task_wizard_data-task_class_replace ) GT 4
       AND |{ me-&gt;ms_task_wizard_data-task_class_replace(4) CASE = UPPER }|  EQ &apos;LCL_&apos;. &quot;#EC NOTEXT
      &quot; Indicatif classe locale renseignée
      &quot;&quot;  --&gt; Utilisation du nom
      me-&gt;mv_task_classname = me-&gt;ms_task_wizard_data-task_class_replace.

    ELSE.
      &quot; Nom inférieur à 4 caractère
      &quot;&quot;  --&gt; Ajout de l&apos;Indicatif classe locale
      me-&gt;mv_task_classname = |LCL_{ me-&gt;ms_task_wizard_data-task_class_replace }|. &quot;#EC NOTEXT

    ENDIF.
    IF  NOT me-&gt;mv_task_classname IS INITIAL
    AND me-&gt;mv_task_classname NE mc_template_classname.
      &quot; Remplace le Nom générique par le nom fourni
      lv_template_task_classname = mc_template_classname.
      REPLACE ALL OCCURRENCES OF lv_template_task_classname IN TABLE me-&gt;ms_source_code-t_template_task
                                                                WITH me-&gt;mv_task_classname.
      lv_template_task_classname = |{ lv_template_task_classname CASE = LOWER }|.
      REPLACE ALL OCCURRENCES OF lv_template_task_classname IN TABLE me-&gt;ms_source_code-t_template_task
                                                                WITH me-&gt;mv_task_classname.

    ENDIF.

  ENDMETHOD.

  METHOD template_task_attr_config_set.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

    TYPES :
      BEGIN OF lty_template_task_config,
        anchor  TYPE string,
        value   TYPE string,
        default TYPE string,
        all     TYPE xsdboolean,
      END OF   lty_template_task_config.

    TYPES : lty_t_template_task_config TYPE STANDARD TABLE OF lty_template_task_config
           WITH NON-UNIQUE KEY primary_key COMPONENTS anchor.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
          lt_configuration TYPE lty_t_template_task_config.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_default_value  TYPE string,
      lv_default_anchor TYPE string.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation de la Configuration à appliquer
    &quot; -----------------------------------------------------------

    IF me-&gt;ms_task_wizard_data-target_selscreen_add EQ abap_true.
      &quot; Utilisation de l&apos;Ecran de Sélection
      &quot;&quot;  --&gt; Initialisation variables portant sur les élèments de l&apos;Ecran de Sélection
      lt_configuration = VALUE #(
        (
          anchor  = mc_anchor_grfc
          value   = &apos;P_GRFC&apos;                                &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-grfc
        )
        (
          anchor  = mc_anchor_grfc_r
          value   = &apos;P_GRFC_R&apos;                              &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-server_user
        )
        (
          anchor  = mc_anchor_task_max
          value   = &apos;P_NTASK&apos;                               &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-task_max
        )
        (
          anchor  = mc_anchor_task_trace
          value   = &apos;P_TTRACE&apos;                              &quot;#EC NOTEXT
          all     = abap_true
          default = me-&gt;ms_task_wizard_data-trace_activ

        )
        (
          anchor  = mc_anchor_compress_l
          value   = &apos;P_TCOMPG&apos;                              &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-compress_mode-data_compress_global
        )
        (
          anchor  = mc_anchor_compress_g
          value   = &apos;P_TCOMPL&apos;                              &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-compress_mode-data_compress_line_by_line
        )
        (
          anchor  = mc_anchor_shm_management
          value   = &apos;P_TSHM&apos;                                &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-shm_management
        )
        (
          anchor  = mc_anchor_compress_activ
          value   = &apos;P_TCOMP&apos;                               &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-compress_activ
        )
        (
          anchor  = mc_anchor_use_server_default
          value   = &apos;P_DGRFC&apos;                               &quot;#EC NOTEXT
          default = me-&gt;ms_task_wizard_data-server_default
        )
      ).

    ELSE.
      &quot; Pas d&apos;utilisation de l&apos;Ecran de Sélection
      &quot;&quot;  --&gt; Initialisation variables portant sur les choix de l&apos;utilisateur
      lt_configuration = VALUE #(
        (
          anchor = mc_anchor_grfc
          value  = |&apos;{ me-&gt;ms_task_wizard_data-grfc }&apos;|     &quot;#EC NOTEXT
        )
        (
          anchor = mc_anchor_task_max
          value  = |&apos;{ me-&gt;ms_task_wizard_data-task_max }&apos;| &quot;#EC NOTEXT
        )
        (
          anchor = mc_anchor_task_trace
          value  = lcl_convert=&gt;boolean_convert_to_string( me-&gt;ms_task_wizard_data-trace_activ )
          all    = abap_true

        )
        (
          anchor = mc_anchor_compress_l
          value  = lcl_convert=&gt;boolean_convert_to_string( me-&gt;ms_task_wizard_data-compress_mode-data_compress_line_by_line )
        )
        (
          anchor = mc_anchor_compress_g
          value  = lcl_convert=&gt;boolean_convert_to_string( me-&gt;ms_task_wizard_data-compress_mode-data_compress_global )
        )
        (
          anchor = mc_anchor_shm_management
          value  = lcl_convert=&gt;boolean_convert_to_string( me-&gt;ms_task_wizard_data-shm_management )
        )
        (
          anchor = mc_anchor_compress_activ
          value  = lcl_convert=&gt;boolean_convert_to_string( me-&gt;ms_task_wizard_data-compress_activ )
        )
        (
          anchor = mc_anchor_use_server_default
          value  = lcl_convert=&gt;boolean_convert_to_string( me-&gt;ms_task_wizard_data-server_default )
        )
      ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Application de la Configuration
    &quot; -----------------------------------------------------------

    LOOP AT lt_configuration ASSIGNING FIELD-SYMBOL(&lt;lfs_s_configuration&gt;).

      CLEAR : lv_default_anchor, lv_default_value.

      IF &lt;lfs_s_configuration&gt;-all EQ abap_true.
        &quot; Sur toutes les occurences
        REPLACE ALL OCCURRENCES OF &lt;lfs_s_configuration&gt;-anchor
                          IN TABLE me-&gt;ms_source_code-t_template_task
                              WITH &lt;lfs_s_configuration&gt;-value.

      ELSE.
        &quot; Sur une seule occurence
        REPLACE &lt;lfs_s_configuration&gt;-anchor IN TABLE me-&gt;ms_source_code-t_template_task
                                                 WITH &lt;lfs_s_configuration&gt;-value.

      ENDIF.

      IF me-&gt;ms_task_wizard_data-target_selscreen_add EQ abap_true.
        &quot; Ecran de Sélection ajouté
        &quot;&quot;  --&gt; Application de la valeur par défaut
        lv_default_anchor = |#{ &lt;lfs_s_configuration&gt;-value CASE = LOWER }_default#|. &quot;#EC NOTEXT
        IF NOT &lt;lfs_s_configuration&gt;-default IS INITIAL.
          lv_default_value = |DEFAULT &apos;{ &lt;lfs_s_configuration&gt;-default }&apos;|. &quot;#EC NOTEXT

        ENDIF.

        &quot;&quot;  --&gt; Remplace l&apos;Anchor par sa valeur
        REPLACE lv_default_anchor IN TABLE me-&gt;ms_source_code-t_template_selscreen
                                      WITH lv_default_value.

      ENDIF.

    ENDLOOP.

  ENDMETHOD.

  METHOD template_handler_add.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
          lt_template TYPE stringtab.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_classname_list TYPE ty_classname_list.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_component TYPE string.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
    FIELD-SYMBOLS :
      &lt;lfs_process&gt;         TYPE clike,
      &lt;lfs_template_anchor&gt; TYPE ty_template_anchor_detail.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    IF  NOT is_task_call_process-class_name  IS INITIAL
    AND NOT is_task_call_process-method_name IS INITIAL.
      &quot; Traitement sur Méthode Statique
      &quot;&quot;  --&gt; Initialisation Nom composant correspondant
      lv_component = |me-&gt;ms_template_anchor-method-{ iv_event }-classname|. &quot;#EC NOTEXT

      &quot;&quot;  --&gt; Initialisation pointeur sur Nom de la Méthode
      ASSIGN is_task_call_process-method_name TO &lt;lfs_process&gt;.

    ELSEIF NOT is_task_call_process-function_name IS INITIAL.
      &quot; Traitement sur Module Fonction
      &quot;&quot;  --&gt; Initialisation pointeur sur AT_EOT - MF
      lv_component = |me-&gt;ms_template_anchor-function-{ iv_event }|. &quot;#EC NOTEXT

      &quot;&quot;  --&gt; Initialisation pointeur sur Nom du MF
      ASSIGN is_task_call_process-function_name TO &lt;lfs_process&gt;.

    ELSE.
      &quot; Aucun appel
      RETURN.

    ENDIF.

    &quot; Initialisation pointeur données Template
    ASSIGN (lv_component) TO &lt;lfs_template_anchor&gt;.
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

    IF &lt;lfs_template_anchor&gt;-header_set NE abap_true.
      &quot; -----------------------------------------------------------
      &quot; Ajout de l&apos;entête
      &quot; -----------------------------------------------------------

      &quot; Recherche position de l&apos;Anchor correspondant à l&apos;évènement
      FIND |#ANCHOR-{ iv_event }#| IN TABLE me-&gt;ms_source_code-t_template_task MATCH LINE DATA(lv_line). &quot;#EC NOTEXT
      IF sy-subrc NE 0.
        &quot; Aucune correspondance
        &quot;&quot;  --&gt; Arrêt du traitement
        RETURN.

      ENDIF.

      &quot; Ajout de l&apos;entête et fin à partir la position trouvée
      INSERT LINES OF &lt;lfs_template_anchor&gt;-end    INTO me-&gt;ms_source_code-t_template_task INDEX lv_line.
      INSERT LINES OF &lt;lfs_template_anchor&gt;-header INTO me-&gt;ms_source_code-t_template_task INDEX lv_line.

      &quot; Initialisation Indicateur entête généré
      &lt;lfs_template_anchor&gt;-header_set = abap_true.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Ajout du Corps
    &quot; -----------------------------------------------------------

    IF NOT is_task_call_process-class_name IS INITIAL.
      &quot; Ajout du Corps de la Classe
      &quot;&quot;  --&gt; Recherche si Classe a déjà été ajoutée
      READ TABLE me-&gt;mt_classname_list WITH TABLE KEY event     = iv_event
                                                      classname = is_task_call_process-class_name
                                         TRANSPORTING NO FIELDS.
      IF sy-subrc NE 0.
        &quot; Classe non ajoutée
        &quot;&quot;  --&gt; Recherche position de l&apos;Anchor
        FIND |//ANCHOR-{ iv_event }-CLASSLIST| IN TABLE me-&gt;ms_source_code-t_template_task MATCH LINE lv_line. &quot;#EC NOTEXT
        IF sy-subrc NE 0.
          &quot; Pas de correspondance
          &quot;&quot;  --&gt; Arrêt du traitement
          RETURN.

        ENDIF.

        &quot;&quot;  --&gt; Initialisation du Corps de la Classe
        lt_template[] = me-&gt;ms_template_anchor-method-at_eot-classname-body[].
        REPLACE ALL OCCURRENCES OF &apos;&lt;&amp;CLASSNAME&amp;&gt;&apos; IN TABLE lt_template WITH is_task_call_process-class_name. &quot;#EC NOTEXT

        &quot;&quot;  --&gt; Ajout dans le Template
        INSERT LINES OF me-&gt;ms_template_anchor-method-at_eot-methodname-end INTO me-&gt;ms_source_code-t_template_task INDEX lv_line.
        INSERT LINES OF lt_template INTO me-&gt;ms_source_code-t_template_task INDEX lv_line.

        &quot;&quot;  --&gt; Ajout dans de la classe dans la liste
        ls_classname_list-event     = iv_event.
        ls_classname_list-classname = is_task_call_process-class_name.
        INSERT ls_classname_list INTO TABLE me-&gt;mt_classname_list.

      ENDIF.

      &quot; Initialisation pointeur sur Template Méthode
      ASSIGN me-&gt;ms_template_anchor-method-at_eot-methodname TO &lt;lfs_template_anchor&gt;.

    ENDIF.

    IF NOT is_task_call_process-method_name IS INITIAL.
      &quot; Récupération position Anchor Liste des Méthodes de la Classe
      FIND |//ANCHOR-{ iv_event }-{ is_task_call_process-class_name }-METHODLIST| &quot;#EC NOTEXT
        IN TABLE me-&gt;ms_source_code-t_template_task MATCH LINE lv_line.

    ELSEIF NOT is_task_call_process-function_name IS INITIAL.
      &quot; Récupération position Anchor Liste des MFs
      FIND |//ANCHOR-{ iv_event }-FUNCTIONLIST|             &quot;#EC NOTEXT
        IN TABLE me-&gt;ms_source_code-t_template_task MATCH LINE lv_line.

    ELSE.
      &quot; Autre
      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

    &quot; Initialisation du Corps
    lt_template[] = &lt;lfs_template_anchor&gt;-body[].

    &quot; Modification de la Variable de Traitement
    REPLACE &apos;&lt;&amp;PROCESS&amp;&gt;&apos; IN TABLE lt_template WITH &lt;lfs_process&gt;. &quot;#EC NOTEXT

    &quot; Ajout dans le Template
    INSERT LINES OF lt_template INTO me-&gt;ms_source_code-t_template_task INDEX lv_line.

  ENDMETHOD.

  METHOD include_task_create.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_program_trdir TYPE trdir.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_program_corrnum  TYPE e070-trkorr,
      lv_program_ordernum TYPE e070-trkorr.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des données
    &quot; -----------------------------------------------------------

    &quot; Initialisation données
    ls_program_trdir-name    = iv_include_name.
    ls_program_trdir-varcl   = abap_true.
    ls_program_trdir-subc    = &apos;I&apos;.                         &quot;#EC NOTEXT
    ls_program_trdir-cnam    = ls_program_trdir-unam = sy-uname.
    ls_program_trdir-cdat    = ls_program_trdir-udat = sy-datum.
    ls_program_trdir-vern    = |{ &apos;1&apos; ALPHA = IN }|.        &quot;#EC NOTEXT
    ls_program_trdir-levl    = &apos;740&apos;.                       &quot;#EC NOTEXT
    ls_program_trdir-rmand   = sy-mandt.
    ls_program_trdir-rload   = sy-langu.
    ls_program_trdir-uccheck = abap_true.

    IF me-&gt;ms_transport_request-devclass IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Détermination Package à utilisé
      &quot; -----------------------------------------------------------

      &quot; Récupération Package du Programme Cadre
      SELECT SINGLE devclass
               FROM tadir
              WHERE obj_name EQ @me-&gt;ms_task_wizard_data-target_repid
               INTO @me-&gt;ms_transport_request-devclass.

    ENDIF.

    IF me-&gt;ms_transport_request-devclass NE &apos;$TMP&apos;.         &quot;#EC NOTEXT
      &quot; -----------------------------------------------------------
      &quot; Détermination de l&apos;Ordre de Transport à utiliser
      &quot; -----------------------------------------------------------

      &quot; Récupération de l&apos;OT modifiable courant sur le Programme Cadre
      SELECT SINGLE task~trkorr, order~strkorr
               FROM e071           AS task
         INNER JOIN e070           AS order
                 ON order~trkorr   EQ task~trkorr
              WHERE task~obj_name  EQ @me-&gt;ms_task_wizard_data-target_repid
                AND order~trstatus EQ &apos;D&apos;                   &quot;#EC NOTEXT
               INTO (@me-&gt;ms_transport_request-corrnum, @me-&gt;ms_transport_request-ordernum).
      IF sy-subrc NE 0.
        &quot; Aucun OT ouvert sur cet objet
        &quot;&quot;  --&gt; Création d&apos;un nouvel OT
        me-&gt;transport_request_create( me-&gt;ms_task_wizard_data-target_repid ).

      ENDIF.

      &quot; Ajout de l&apos;Include dans l&apos;OT
      me-&gt;transport_request_add(
          iv_repid    = iv_include_name
          iv_creation = abap_true
      ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Création de l&apos;Include
    &quot; -----------------------------------------------------------

    &quot; Création de l&apos;Include
    DATA(ls_return) = lcl_source_code=&gt;repid_create(
        is_program_trdir    = ls_program_trdir
        iv_program_title    = iv_include_title
        iv_program_corrnum  = me-&gt;ms_transport_request-corrnum
        iv_program_ordernum = me-&gt;ms_transport_request-ordernum
        iv_program_devclass = me-&gt;ms_transport_request-devclass
        iv_mainprogram_name = me-&gt;ms_task_wizard_data-target_repid
    ).

    &quot; -----------------------------------------------------------
    &quot; Récupération du Code Source
    &quot; -----------------------------------------------------------

    &quot; Récupération du Code Source
    rt_source_code = lcl_source_code=&gt;source_code_get( iv_include_name ).

    &quot; Ajout Template Génération
    APPEND LINES OF me-&gt;ms_source_code-t_template_wizard_include_sign TO rt_source_code.

  ENDMETHOD.

  METHOD template_task_include_add.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Recherche si l&apos;Include est déjà déclaré
    &quot; -----------------------------------------------------------

    &quot; Recherche présence de l&apos;Include dans le Programme Cadre
    FIND REGEX |(^\\s*INCLUDE[: \\s]*{ iv_include })| IN TABLE me-&gt;ms_source_code-t_target_repid.
    IF sy-subrc EQ 0.
      &quot; Include déjà présent dans le Programme Cadre
      &quot;&quot;  --&gt; arrêt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Ajout de l&apos;Include dans Programme Cadre
    &quot; -----------------------------------------------------------

    &quot; Ajout de l&apos;Include dans le Programme Cadre
    APPEND |INCLUDE { iv_include }. &quot;{ &apos;Ajouté par l&apos;&apos;Assistant&apos;(i01) } | TO me-&gt;ms_source_code-t_target_repid.

  ENDMETHOD.

  METHOD template_selscreen_add.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_line_inject TYPE i.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Recherche présence de l&apos;écran de sélection existant
    &quot; -----------------------------------------------------------

    &quot; ToDo : Rechercher emplacement Ecran de Sélection
    &quot; ToDo : Si non trouvée rechercher dans les Includes Z* du Prg. /!\

*    &quot; Recherche présence de Block
*    FIND &apos;SELECTION-SCREEN BEGIN OF BLOCK&apos; IN TABLE ct_source_code &quot;#EC NOTEXT
*                                            RESULTS DATA(lt_results).
*    IF sy-subrc NE 0.
*      &quot; Pas de Block trouvé
*      &quot;&quot;  --&gt; Recherche présence d&apos;Onglet
*      FIND &apos;SELECTION-SCREEN BEGIN OF TABBED BLOCK&apos; IN TABLE ct_source_code &quot;#EC NOTEXT
*                                                     RESULTS lt_results.
*
*    ENDIF.
*    IF sy-subrc NE 0.
*      &quot; Pas d&apos;Onglet trouvé
*      &quot;&quot;  --&gt; Recherche présence de Ligne
*      FIND &apos;SELECTION-SCREEN BEGIN OF LINE&apos; IN TABLE ct_source_code &quot;#EC NOTEXT
*                                             RESULTS lt_results.
*
*    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Ajout du Template de l&apos;Ecran de Sélection
    &quot; -----------------------------------------------------------

    &quot; Ajout de l&apos;Ecran de Sélection
    IF lv_line_inject IS INITIAL.
      &quot; Pas de ligne précise déterminée
      &quot;&quot;  --&gt; Ajout à la fin
      APPEND LINES OF me-&gt;ms_source_code-t_template_selscreen TO ct_source_code.

    ELSE.
      &quot; Ligne d&apos;Ajout défini
      &quot;&quot;  --&gt; Insert au bon endroit
      INSERT LINES OF me-&gt;ms_source_code-t_template_selscreen INTO ct_source_code INDEX lv_line_inject.

    ENDIF.

  ENDMETHOD.

  METHOD template_task_add.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Contrôle présence autre instance généré
    &quot; -----------------------------------------------------------

    &quot; ToDo : Contrôler présence précédente génération de Tâche

    &quot; -----------------------------------------------------------
    &quot; Détermination de l&apos;Emplacement d&apos;Injection
    &quot; -----------------------------------------------------------

    &quot; ToDo : Se positionner au bon endroit

    &quot; -----------------------------------------------------------
    &quot; Ajout du Template du Cadriciel
    &quot; -----------------------------------------------------------

    &quot; Ajout du Cadriciel
    APPEND LINES OF me-&gt;ms_source_code-t_template_task TO ct_source_code.

  ENDMETHOD.

  METHOD template_selscreen_output_add.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Ajout modification Ecran via Evènement AT-SELECTION-SCREEN-OUTPUT
    &quot; -----------------------------------------------------------

    &quot; Recherche position de l&apos;évènement
    FIND &apos;AT SELECTION-SCREEN OUTPUT&apos; IN TABLE ct_source_code &quot;#EC NOTEXT
                                    MATCH LINE DATA(lv_line).
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; Ajout à la fin
      APPEND &apos;AT SELECTION-SCREEN OUTPUT.&apos; TO ct_source_code. &quot;#EC NOTEXT
      lv_line = sy-tabix.

    ENDIF.

    &quot; Ajout de l&apos;Appel de la Méthode
    INSERT LINES OF VALUE stringtab(
      ( |&quot; Modification affichage paramètre de parallélisation | ) &quot;#EC NOTEXT
      ( CONV string( |{ me-&gt;mv_task_classname }=&gt;AT_SELECTION_SCREEN_OUTPUT( ).| )  ) &quot;#EC NOTEXT
      ( )
    ) INTO ct_source_code INDEX lv_line + 1.

  ENDMETHOD.

  METHOD template_apply.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_source_code_selscreen TYPE REF TO stringtab,
      lo_source_code_framework TYPE REF TO stringtab.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    IF  me-&gt;ms_task_wizard_data-target_selscreen_add EQ abap_true
    AND me-&gt;ms_task_wizard_data-target_selscreen_incl_use EQ abap_true.
      &quot; Ajout Ecran de Sélection dans un Include
      &quot;&quot;  --&gt; Initialisation Référence sur l&apos;Include
      lo_source_code_selscreen = REF #( me-&gt;ms_source_code-t_target_incl_selscreen ).

    ELSE.
      &quot; Ajout Ecran de Sélection dans le Programme Cadre
      &quot;&quot;  --&gt; Initialisation Référence sur le Programme Cadre
      lo_source_code_selscreen = REF #( me-&gt;ms_source_code-t_target_repid ).

    ENDIF.

    IF me-&gt;ms_task_wizard_data-target_framework_incl_use EQ abap_true.
      &quot; Ajout Ecran de Sélection dans un Include
      &quot;&quot;  --&gt; Initialisation Référence sur l&apos;Include
      lo_source_code_framework = REF #( me-&gt;ms_source_code-t_target_incl_framework ).

    ELSE.
      &quot; Ajout Ecran de Sélection dans le Programme Cadre
      &quot;&quot;  --&gt; Initialisation Référence sur le Programme Cadre
      lo_source_code_framework = REF #( me-&gt;ms_source_code-t_target_repid ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Sélection des données
    &quot; -----------------------------------------------------------

    IF me-&gt;ms_task_wizard_data-target_selscreen_add EQ abap_true.
      &quot; -----------------------------------------------------------
      &quot; Ecran de Sélection
      &quot; -----------------------------------------------------------

      &quot; Ajout de l&apos;Ecran de Sélection
      me-&gt;template_selscreen_add( CHANGING ct_source_code = lo_source_code_selscreen-&gt;* ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Cadriciel
    &quot; -----------------------------------------------------------

    &quot; Ajout du Template de Tâche
    me-&gt;template_task_add( CHANGING ct_source_code = lo_source_code_framework-&gt;* ).

    IF me-&gt;ms_task_wizard_data-target_selscreen_add EQ abap_true.
      &quot; -----------------------------------------------------------
      &quot; Evènement Modification Ecran de Sélection
      &quot; -----------------------------------------------------------

      &quot; Ajout du Template Modification Ecran de Sélection
      me-&gt;template_selscreen_output_add( CHANGING ct_source_code = me-&gt;ms_source_code-t_target_repid ).

    ENDIF.

  ENDMETHOD.

  METHOD template_task_inject.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA:
      lv_answer       TYPE c LENGTH 1,
      lv_include_used TYPE xsdboolean.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Ajout du Template
    &quot; -----------------------------------------------------------

    &quot; Application du Template
    me-&gt;template_apply( ).

    &quot; -----------------------------------------------------------
    &quot; Contrôle Code Source
    &quot; -----------------------------------------------------------

    &quot; Contrôle Code Source
    DATA(ls_check) = me-&gt;template_source_code_check( IMPORTING ev_include_used = lv_include_used ).
    IF  lv_include_used    EQ abap_false
    AND NOT ls_check-subrc IS INITIAL.
      &quot; Erreur syntaxique &amp; Pas d&apos;utilisation d&apos;Include
      &quot;&quot;  --&gt; Propose l&apos;Ajout malgré l&apos;erreur
      CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
        EXPORTING
          text_question         = &apos;Erreur syntaxe présente. Appliquer le Template ?&apos;(q01) &quot;#EC NOTEXT
          text_button_1         = &apos;Oui&apos;(r01)                &quot;#EC NOTEXT
          text_button_2         = &apos;Non&apos;(r02)                &quot;#EC NOTEXT
          display_cancel_button = abap_false
        IMPORTING
          answer                = lv_answer
        EXCEPTIONS
          text_not_found        = 1
          OTHERS                = 2.
      IF sy-subrc NE 0.
        &quot; Erreur
        &quot;&quot; --&gt; Réinitialisation réponse utilisateur
        CLEAR : lv_answer.

      ENDIF.

      &quot; Suivant la réponse utilisateur
      CASE lv_answer.

        WHEN 1.
          &quot; L&apos;utilisateur souhaite poursuivre malgré l&apos;erreur syntaxique

        WHEN OTHERS.
          &quot; L&apos;utilisateur n&apos;a pas validé l&apos;injection
          &quot;&quot;  --&gt; Arrêt du traitement
          RETURN.

      ENDCASE.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Injection du Code Source
    &quot; -----------------------------------------------------------

    &quot; Injection du Code Source
    me-&gt;template_source_code_inject( ).

  ENDMETHOD.

  METHOD template_source_code_check.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : ev_include_used.

    &quot; -----------------------------------------------------------
    &quot; Sélection des données
    &quot; -----------------------------------------------------------

    &quot; Contrôle Code Source Programme Cadre
    DATA(ls_check) = lcl_source_code=&gt;source_code_check(
      iv_repid       = me-&gt;mv_repid_target
      it_source_code = me-&gt;ms_source_code-t_target_repid
    ).
    IF NOT ls_check IS INITIAL.
      &quot; Une erreur de syntaxe est présente
      &quot;&quot;  --&gt; Initialisation de l&apos;erreur en retour
      rs_check = ls_check.

    ENDIF.

    IF  me-&gt;ms_task_wizard_data-target_selscreen_add      EQ abap_true
    AND me-&gt;ms_task_wizard_data-target_selscreen_incl_use EQ abap_true.
      &quot; Ajout de l&apos;Ecran de Sélection dans un Include à part
      &quot;&quot;  --&gt; Contrôle Code Source Include Ecran de Sélection
      ls_check = lcl_source_code=&gt;source_code_check(
        iv_repid       = me-&gt;mv_repid_target
        iv_include     = me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
        it_source_code = me-&gt;ms_source_code-t_target_incl_selscreen
      ).
      IF NOT ls_check IS INITIAL.
        &quot; Une erreur de syntaxe est présente
        &quot;&quot;  --&gt; Initialisation de l&apos;erreur en retour
        rs_check = ls_check.

      ENDIF.

      &quot;&quot;  --&gt; Initialisation Indicateur utilisation Include
      ev_include_used = abap_true.

    ENDIF.

    IF me-&gt;ms_task_wizard_data-target_framework_incl_use EQ abap_true.
      &quot; Ajout du Cadriciel dans un Include
      &quot;&quot;  --&gt; Contrôle Code Source Include Ecran de Sélection
      ls_check = lcl_source_code=&gt;source_code_check(
        iv_repid       = me-&gt;mv_repid_target
        iv_include     = me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
        it_source_code = me-&gt;ms_source_code-t_target_incl_framework
      ).
      IF NOT ls_check IS INITIAL.
        &quot; Une erreur de syntaxe est présente
        &quot;&quot;  --&gt; Initialisation de l&apos;erreur en retour
        rs_check = ls_check.

      ENDIF.

      &quot;&quot;  --&gt; Initialisation Indicateur utilisation Include
      ev_include_used = abap_true.

    ENDIF.

  ENDMETHOD.

  METHOD template_source_code_inject.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Modification du Programme Cadre
    &quot; -----------------------------------------------------------

    &quot; Modification du Code Source du programme Cadre
    lcl_source_code=&gt;source_code_set(
      iv_repid       = me-&gt;mv_repid_target
      it_source_code = me-&gt;ms_source_code-t_target_repid
    ).

    IF  me-&gt;ms_task_wizard_data-target_selscreen_add      EQ abap_true
    AND me-&gt;ms_task_wizard_data-target_selscreen_incl_use EQ abap_true.
      &quot; Modification du Code Source de l&apos;Include Ecran de Sélection
      lcl_source_code=&gt;source_code_set(
        iv_repid       = me-&gt;ms_task_wizard_data-target_selscreen_incl_data-include_name
        it_source_code = me-&gt;ms_source_code-t_target_incl_selscreen
      ).

    ENDIF.

    IF me-&gt;ms_task_wizard_data-target_framework_incl_use EQ abap_true.
      &quot; Modification du Code Source de l&apos;Include Cadriciel
      lcl_source_code=&gt;source_code_set(
        iv_repid       = me-&gt;ms_task_wizard_data-target_framework_incl_data-include_name
        it_source_code = me-&gt;ms_source_code-t_target_incl_framework
      ).

    ENDIF.

  ENDMETHOD.

  METHOD transport_request_create.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : me-&gt;ms_transport_request.

    &quot; -----------------------------------------------------------
    &quot; Création nouvel OT
    &quot; -----------------------------------------------------------

    me-&gt;transport_request_add(
      iv_repid    = iv_repid
      iv_creation = iv_creation
    ).

  ENDMETHOD.

  METHOD transport_request_add.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_tadir TYPE tadir,
      ls_e071k TYPE e071k,
      ls_ko200 TYPE ko200.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Génération des Clefs à transporter
    &quot; -----------------------------------------------------------

    &quot; Initialisation des données interface CTS
    ls_ko200-pgmid = ls_e071k-pgmid = ls_tadir-object = SWITCH string( iv_creation
      WHEN abap_true THEN &apos;R3TR&apos;                            &quot;#EC NOTEXT
      ELSE &apos;LIMU&apos;                                           &quot;#EC NOTEXT
    ).
    ls_ko200-object = ls_e071k-object = ls_tadir-object = SWITCH string( iv_creation
      WHEN abap_true THEN &apos;PROG&apos;                            &quot;#EC NOTEXT
      ELSE &apos;REPS&apos;                                           &quot;#EC NOTEXT
    ).
    ls_ko200-lockflag = SWITCH string( iv_creation
      WHEN abap_true THEN abap_true
      ELSE &apos;3&apos;                                              &quot;#EC NOTEXT
    ).
    ls_ko200-operation = SWITCH string( iv_creation
      WHEN abap_true THEN &apos;I&apos;                               &quot;#EC NOTEXT
      ELSE space
    ).
    ls_ko200-author     = ls_tadir-author     = sy-uname.
    ls_ko200-as4pos     = ls_e071k-as4pos     = lines( me-&gt;ms_transport_request-t_ko200 ).
    ls_ko200-obj_name   = ls_e071k-objname    = ls_tadir-obj_name   = iv_repid.
    ls_ko200-masterlang = ls_tadir-masterlang = sy-langu.

    &quot; Initialisation données Programme
    ls_tadir-korrnum   = me-&gt;ms_transport_request-corrnum.
    ls_tadir-devclass  = me-&gt;ms_transport_request-devclass.
    ls_tadir-srcsystem = sy-sysid.

    &quot; Ajout dans les tables de Transport
    APPEND ls_ko200 TO me-&gt;ms_transport_request-t_ko200.
    APPEND ls_e071k TO me-&gt;ms_transport_request-t_e071k.
    APPEND ls_tadir TO me-&gt;ms_transport_request-t_tadir.

    &quot; -----------------------------------------------------------
    &quot; Création / Sélection de l&apos;OT
    &quot; -----------------------------------------------------------

    &quot; Contrôle les élèments
    CALL FUNCTION &apos;TR_OBJECTS_CHECK&apos;
      EXPORTING
        iv_no_show_option = abap_true
      IMPORTING
*        we_order          = me-&gt;ms_transport_request-corrnum
*        we_task           = me-&gt;ms_transport_request-ordernum
        we_order          = me-&gt;ms_transport_request-ordernum
        we_task           = me-&gt;ms_transport_request-corrnum
      TABLES
        wt_ko200          = me-&gt;ms_transport_request-t_ko200
        wt_e071k          = me-&gt;ms_transport_request-t_e071k
      EXCEPTIONS
        OTHERS            = 1.
    IF sy-subrc EQ 0.
      &quot; Sélection / Création de l&apos;OT
      CALL FUNCTION &apos;TR_OBJECTS_INSERT&apos;
        EXPORTING
          wi_order          = me-&gt;ms_transport_request-corrnum
*          wi_order          = me-&gt;ms_transport_request-ordernum
          iv_no_show_option = abap_true
        IMPORTING
*          we_order          = me-&gt;ms_transport_request-corrnum
*          we_task           = me-&gt;ms_transport_request-ordernum
          we_order          = me-&gt;ms_transport_request-ordernum
          we_task           = me-&gt;ms_transport_request-corrnum
        TABLES
          wt_ko200          = me-&gt;ms_transport_request-t_ko200
          wt_e071k          = me-&gt;ms_transport_request-t_e071k
          tt_tadir          = me-&gt;ms_transport_request-t_tadir
        EXCEPTIONS
          OTHERS            = 1.

    ENDIF.
    IF sy-subrc NE 0.
      &quot; Erreur ajout dans l&apos;OT

    ENDIF.

  ENDMETHOD.

ENDCLASS.</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool>
   <language SPRAS="F">
    <textElement ID="I" KEY="I01" ENTRY="Ajouté par l&apos;Assistant" LENGTH="44 "/>
    <textElement ID="I" KEY="Q01" ENTRY="Erreur syntaxe présente. Appliquer le Template ?" LENGTH="96 "/>
    <textElement ID="I" KEY="R01" ENTRY="Oui" LENGTH="13 "/>
    <textElement ID="I" KEY="R02" ENTRY="Non" LENGTH="3 "/>
   </language>
  </textPool>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~GET_CURRENT_WB_OBJECT_STATE">
   <source>METHOD if_wb_program~get_current_wb_object_state.&quot;#EC NEEDED
 ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~GET_ENQUEUE_OBJECT">
   <source>METHOD if_wb_program~get_enqueue_object.&quot;#EC NEEDED
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~GET_REQUEST_FROM_TOOL_ACCESS">
   <source>METHOD if_wb_program~get_request_from_tool_access.  &quot;#EC NEEDED
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~GET_RESTORE_WB_PROGRAM_STATE">
   <source>METHOD if_wb_program~get_restore_wb_program_state.&quot;#EC NEEDED
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~GET_RESTORE_WB_REQUEST">
   <source>METHOD if_wb_program~get_restore_wb_request.&quot;#EC NEEDED
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~PREPARE_FOR_REINVOCATION">
   <source>METHOD if_wb_program~prepare_for_reinvocation.&quot;#EC NEEDED
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~PREPARE_FOR_TERMINATION">
   <source>METHOD if_wb_program~prepare_for_termination.&quot;#EC NEEDED
ENDMETHOD.</source>
  </interfaceMethod>
  <interfaceMethod CLSNAME="ZCL_TASK_WIZARD" CPDNAME="IF_WB_PROGRAM~PROCESS_WB_REQUEST">
   <source>METHOD if_wb_program~process_wb_request.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : IF_WB_PROGRAM~PROCESS_WB_REQUEST                  *
*&amp; Classe          : ZCL_TASK_WIZARD                                   *
*&amp; Description     : Traitement évènement Menu Contextuel              *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Gestion Action Utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant le Code Fonction
  CASE p_wb_request-&gt;operation.

    WHEN zcl_im_wb_obj_ctmenu=&gt;mc_fc_task_wz.
      &quot;Tâche - Assistant Cadriciel
      me-&gt;task_wizard(
        EXPORTING
          io_wb_request           = p_wb_request
          io_wb_program_state     = p_wb_program_state
          iv_window_id            = p_window_id
        CHANGING
          co_wb_data_container    = p_wb_data_container
        EXCEPTIONS
          operation_not_supported = 1
          wrong_program_state     = 2
          action_cancelled        = 3
          error_occured           = 4
          object_not_found        = 5
          permission_failure      = 6
          OTHERS                  = 7
      ).

    WHEN OTHERS.
      &quot; Autres
      &quot;&quot;  --&gt; Non géré
      RETURN.

  ENDCASE.

  &quot; -----------------------------------------------------------
  &quot; Suivant le Code Retour
  &quot; -----------------------------------------------------------

  CASE sy-subrc.

    WHEN 0.
      &quot; Traitement correctement effectuée

    WHEN 3.
      &quot; Annulé par l&apos;utilisateur
      &quot;&quot;  --&gt; Affiche message
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                          WITH sy-msgv1 sy-msgv2
                               sy-msgv3 sy-msgv4
                       RAISING action_cancelled.

    WHEN OTHERS.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Affichage message d&apos;erreur
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                          WITH sy-msgv1 sy-msgv2
                               sy-msgv3 sy-msgv4
                       RAISING error_occured.

  ENDCASE.

ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_TEMPLATE_INJECT" VERSION="1" LANGU="F" DESCRIPT="Tâche - Template - Injection dans le Programme Cadre" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_TEMPLATE_INJECT" SCONAME="IS_TASK_WIZARD_DATA" VERSION="1" LANGU="F" DESCRIPT="Tâche - Données Assistant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_S_TASK_WIZARD_DATA"/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_TEMPLATE_INJECT" SCONAME="ZCX_TASK_WIZARD" VERSION="1" LANGU="F" DESCRIPT="Exceptions with Dynamic Check Only of the RAISING Clause" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD task_template_inject.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : TASK_TEMPLATE_INJECT                              *
*&amp; Classe          : ZCL_TASK_WIZARD                                   *
*&amp; Description     : Application du Template dans le Prg. Cadre        *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Injection du Template dans le Programme Cadre
      &quot; -----------------------------------------------------------

      &quot; Création de l&apos;Instance
      DATA(lo_task_injector) = NEW lcl_injector( is_task_wizard_data ).

      &quot; Injection du Template avec les paramètres défini par l&apos;utilisateur
      lo_task_injector-&gt;main( ).

    CATCH lcx_injector INTO DATA(lo_cx_exception).
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Lève l&apos;Exception
      RAISE EXCEPTION TYPE zcx_task_wizard
        EXPORTING
          previous = lo_cx_exception.

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" VERSION="1" LANGU="F" DESCRIPT="Tâche - Assistant" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="IO_WB_REQUEST" VERSION="1" LANGU="F" DESCRIPT="Workbench Manager: Request" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_WB_REQUEST"/>
   <parameter CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="IO_WB_PROGRAM_STATE" VERSION="1" LANGU="F" DESCRIPT="Workbench Manager: State of a Tool or Browser" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_WB_PROGRAM_STATE"/>
   <parameter CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="IV_WINDOW_ID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I"/>
   <parameter CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="CO_WB_DATA_CONTAINER" VERSION="1" LANGU="F" DESCRIPT="Data Container for Passing Values" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_WB_DATA_CONTAINER" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="OPERATION_NOT_SUPPORTED" VERSION="1" LANGU="F" DESCRIPT="Tool Does Not Support Operation" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="WRONG_PROGRAM_STATE" VERSION="1" LANGU="F" DESCRIPT="Program state does not match tool" MTDTYPE="0" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="ACTION_CANCELLED" VERSION="1" LANGU="F" DESCRIPT="Activity Terminated" MTDTYPE="0" EDITORDER="3 "/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="ERROR_OCCURED" VERSION="1" LANGU="F" DESCRIPT="Error occurred while processing request" MTDTYPE="0" EDITORDER="4 "/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="OBJECT_NOT_FOUND" VERSION="1" LANGU="F" DESCRIPT="Object Not Found" MTDTYPE="0" EDITORDER="5 "/>
   <exception CLSNAME="ZCL_TASK_WIZARD" CMPNAME="TASK_WIZARD" SCONAME="PERMISSION_FAILURE" VERSION="1" LANGU="F" DESCRIPT="Missing authorization" MTDTYPE="0" EDITORDER="6 "/>
   <source>METHOD task_wizard.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : TASK_WIZARD                                       *
*&amp; Classe          : ZCL_TASK_WIZARD                                   *
*&amp; Description     : Lancement Assistant Cadriciel                     *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
        ls_task_wizard_data TYPE ztec_s_task_wizard_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_exception TYPE REF TO cx_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***


  &quot; -----------------------------------------------------------
  &quot; Lancement de l&apos;Assistant
  &quot; -----------------------------------------------------------

  &quot; Lancement de l&apos;Assistant de configuration
  CALL FUNCTION &apos;WZ_ZTASK_WIZARD_START&apos;
    EXPORTING
      iv_repid_default    = CONV repid( io_wb_request-&gt;object_name )
    IMPORTING
      es_task_wizard_data = ls_task_wizard_data
    EXCEPTIONS
      cancelled_by_user   = 1
      error               = 2
      OTHERS              = 3.

  &quot; -----------------------------------------------------------
  &quot; Gestion code retour
  &quot; -----------------------------------------------------------

  &quot; Suivant le code retour
  CASE sy-subrc.

    WHEN 0.
      &quot; Aucune erreur
      TRY.
          &quot;&quot;  --&gt; Applique le Template du cadriciel au Programme Cadre
          me-&gt;task_template_inject( ls_task_wizard_data ).

        CATCH zcx_task_wizard INTO lo_cx_exception.
          &quot; Une erreur est survenue
          &quot;&quot;  --&gt; Affiche l&apos;Exception
          WHILE lo_cx_exception-&gt;previous IS BOUND.
            lo_cx_exception ?= lo_cx_exception-&gt;previous.
          ENDWHILE.
          DATA(lv_message) = lo_cx_exception-&gt;get_text( ).
          MESSAGE ID &apos;00&apos; TYPE &apos;E&apos; NUMBER 368 &quot;#EC NOTEXT
                          WITH lv_message
                       RAISING error_occured.

      ENDTRY.

    WHEN 1.
      &quot; Annulé par l&apos;utilisateur
      &quot;&quot;  --&gt; Affiche message
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                          WITH sy-msgv1 sy-msgv2
                               sy-msgv3 sy-msgv4
                       RAISING action_cancelled.

    WHEN OTHERS.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Affichage message d&apos;erreur
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                          WITH sy-msgv1 sy-msgv2
                               sy-msgv3 sy-msgv4
                       RAISING error_occured.

  ENDCASE.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_TASK_WIZARD" VERSION="1" LANGU="F" DESCRIPT="Tâche - Exception Assistant" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CX_DYNAMIC_CHECK">
  <implementing CLSNAME="ZCX_TASK_WIZARD" REFCLSNAME="IF_T100_MESSAGE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="0 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZCX_TASK_WIZARD" REFCLSNAME="CX_DYNAMIC_CHECK" VERSION="1" STATE="1"/>
 </CLAS>
 <FUGR AREA="ZTASK_WIZARD" SPRAS="F" AREAT="ZTASK_WIZARD">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZTASK_WIZARD" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="000" RLOAD="F" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool>
    <language SPRAS="F">
     <textElement ID="I" KEY="001" ENTRY="Commencer" LENGTH="60 "/>
     <textElement ID="I" KEY="002" ENTRY="Sélection programme" LENGTH="60 "/>
     <textElement ID="I" KEY="003" ENTRY="Sélection Traitement à paralléliser - MF" LENGTH="60 "/>
     <textElement ID="I" KEY="004" ENTRY="Sélection Traitement à paralléliser - Méthode" LENGTH="60 "/>
     <textElement ID="I" KEY="005" ENTRY="Configuration de la parallélisation" LENGTH="60 "/>
     <textElement ID="I" KEY="006" ENTRY="Terminer" LENGTH="18 "/>
     <textElement ID="I" KEY="TTL" ENTRY="Tâche - Assistant de création" LENGTH="60 "/>
    </language>
   </textPool>
   <dynpros>
    <dynpro PROG="SAPLZTASK_WIZARD" DNUM="0200" TYPE="I" FNUM="0000" BZMX="12 " BZBR="64 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="12 " NOCO="64 " VALP="0 " CUAN="G" SPRA="F" DTEXT="Sélection du programme cadre">
     <dynprofield FNAM="TITLE_REPID_TARGET" DIDX="0008" FLG1="00" FLG2="00" FLG3="00" FILL="R" FMB1="30" FMB2="00" LENG="40" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="Sélection programme cadre"/>
     <dynprofield FNAM="TARGET_REPID_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="02" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Programme cadre" RES1="                                                                                                                                                                                                                                                        X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_REPID" DIDX="0000" FLG1="80" FLG2="00" FLG3="A0" FMB1="08" FMB2="08" LENG="1E" LINE="02" COLN="13" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" DMAC="PROGNAME" ITYP="C" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_FRAMEWORK_INCL_USE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="03" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" GRP1="100" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PTASK_INCL_U"/>
     <dynprofield FNAM="TARGET_INCLUDE_USE_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="12" LINE="03" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" ITYP="0" AGLT="00" ADEZ="00" STXT="Cadriciel Incl. :" RES1="                                                                                                                                                                                                                                                        XX"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_FRAMEWORK_INCL_DATA-INCLUDE_NAME" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="03" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="110" ITYP="C" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_FRAMEWORK_INCL_DATA-INCLUDE_CREATE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="03" COLN="37" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" GRP1="100" GRP2="110" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PTASK_INCL_R"/>
     <dynprofield FNAM="FRAMEWORK_INCL_CREATE_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="05" LINE="03" COLN="39" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="110" ITYP="0" AGLT="00" ADEZ="00" STXT="Créer" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_FRAMEWORK_INCL_DATA-INCLUDE_CHANGE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="04" COLN="37" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" GRP1="100" GRP2="110" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PTASK_INCL_R"/>
     <dynprofield FNAM="FRAMEWORK_INCL_CHANGE_RB_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="08" LINE="04" COLN="39" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="110" ITYP="0" AGLT="00" ADEZ="00" STXT="Modifier" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_SELSCREEN_ADD" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="05" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" GRP1="100" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PSEL_ADD"/>
     <dynprofield FNAM="TARGET_SELSCREEN_USE_TILTLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="38" LINE="05" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" ITYP="0" AGLT="00" ADEZ="00" STXT="Ajout paramètres configuration dans l&apos;écran de sélection" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_SELSCREEN_INCL_USE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="06" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="105" GRP1="100" GRP2="120" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PSEL_INCL_U"/>
     <dynprofield FNAM="TARGET_SELSCREEN_ADD_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="10" LINE="06" COLN="07" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="120" GRP3="121" ITYP="0" AGLT="00" ADEZ="00" STXT="Utiliser Incl. :" RES1="                                                                                                                                                                                                                                                        XX"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_SELSCREEN_INCL_DATA-INCLUDE_NAME" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="06" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="120" GRP3="121" ITYP="C" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_SELSCREEN_INCL_DATA-INCLUDE_CREATE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="06" COLN="37" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="106" GRP1="100" GRP2="120" GRP3="121" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PSEL_INCL_R"/>
     <dynprofield FNAM="%#AUTOTEXT001" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="05" LINE="06" COLN="39" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="120" GRP3="121" ITYP="0" AGLT="00" ADEZ="00" STXT="Créer" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TARGET_SELSCREEN_INCL_DATA-INCLUDE_CHANGE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="07" COLN="37" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="106" GRP1="100" GRP2="120" GRP3="121" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PSEL_INCL_R"/>
     <dynprofield FNAM="TARGET_SELSCREEN_INCL_CHANGE_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="08" LINE="07" COLN="39" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="100" GRP2="120" GRP3="121" ITYP="0" AGLT="00" ADEZ="00" STXT="Modifier" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="TASK_TEMPLATE" DIDX="0004" FLG1="00" FLG2="00" FLG3="00" FILL="R" FMB1="30" FMB2="00" LENG="40" LINE="09" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="107" AGLT="00" ADEZ="00" STXT="Sélection Template Cadriciel Tâche"/>
     <dynprofield FNAM="TASK_TEMPLATE_REPID_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="15" LINE="0A" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Template Cadriciel" RES1="                                                                                                                                                                                                                                                        X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TASK_TEMPLATE_REPID" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="30" FMB2="00" LENG="1E" LINE="0A" COLN="19" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="TASK_CLASS_REPLACE_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="15" LINE="0B" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Nouveau Nom cadriciel" RES1="                                                                                                                                                                                                                                                        X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TASK_CLASS_REPLACE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="0B" COLN="19" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="______________________________" RES1="                                                                                                                                                                                                                                                             X"/>
     <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE pbo_0200.

PROCESS AFTER INPUT.
  MODULE wz_user_command_wizard.
* user defined modules

  MODULE usr_check_consistency_0200.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZTASK_WIZARD" DNUM="0300" TYPE="I" FNUM="0000" BZMX="11 " BZBR="64 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="11 " NOCO="64 " VALP="0 " CUAN="G" SPRA="F" DTEXT="Sélection des traitements à paralléliser - MF">
     <dynprofield FNAM="CC_ALV_0300" DIDX="000B" FLG1="00" FLG2="00" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="40" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="01" ADEZ="01"/>
     <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE pbo_0300.

PROCESS AFTER INPUT.
  MODULE wz_user_command_wizard.
* user defined modules

  MODULE usr_check_consistency_0300.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZTASK_WIZARD" DNUM="0400" TYPE="I" FNUM="0000" BZMX="11 " BZBR="64 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="11 " NOCO="64 " VALP="0 " CUAN="G" SPRA="F" DTEXT="Sélection des traitements à paralléliser - Méthode">
     <dynprofield FNAM="CC_ALV_0400" DIDX="000B" FLG1="00" FLG2="00" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="40" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="01" ADEZ="01"/>
     <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE pbo_0400.

PROCESS AFTER INPUT.
  MODULE wz_user_command_wizard.
* user defined modules

  MODULE usr_check_consistency_0400.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZTASK_WIZARD" DNUM="0500" TYPE="I" FNUM="0000" BZMX="12 " BZBR="48 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="12 " NOCO="64 " VALP="0 " CUAN="G" SPRA="F" DTEXT="Configuration de la parallélisation">
     <dynprofield FNAM="CADRE_GRFC" DIDX="0006" FLG1="00" FLG2="00" FLG3="00" FILL="R" FMB1="30" FMB2="00" LENG="30" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="Groupe de Serveur"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-SERVER_DEFAULT" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="02" COLN="04" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PGRFC_SEL"/>
     <dynprofield FNAM="SERVER_DEFAULT_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="25" LINE="02" COLN="06" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Utiliser Groupe de Serveur par défaut" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-SERVER_USER" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="03" COLN="04" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PGRFC_SEL"/>
     <dynprofield FNAM="SERVER_USER_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="1E" LINE="03" COLN="06" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Sélectionner Groupe de Serveur" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GRFC_TITLE" DIDX="0015" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="30" LINE="04" COLN="06" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="@X9@ Groupe de Serveur" RES1="                                                                                                                                                                                                                                                        X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-GRFC" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="12" LINE="04" COLN="1C" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" DMAC="SWESRVGRP" GRP1="100" ITYP="C" AGLT="00" ADEZ="00" STXT="__________________" RES1="                                                                                                                                                                                                                                                             X"/>
     <dynprofield FNAM="TASK_MAX_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="05" COLN="04" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Nombre de Tâche" RES1="                                                                                                                                                                                                                                                        X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TASK_MAX" DIDX="0007" FLG1="80" FLG2="00" FLG3="A0" FMB1="00" FMB2="00" LENG="07" LINE="05" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="INT4" ITYP="C" AGLT="00" ADEZ="00" STXT="_______" RES1="                                       00"/>
     <dynprofield FNAM="PARAMETER_TASK_MANAGER" DIDX="0006" FLG1="00" FLG2="00" FLG3="00" FILL="R" FMB1="30" FMB2="00" LENG="30" LINE="07" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="Options supplémentaires"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-COMPRESS_ACTIV" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="08" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PCOMP_SEL"/>
     <dynprofield FNAM="COMPRESS_ACTIV_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="16" LINE="08" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Activer la Compression" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-COMPRESS_MODE-DATA_COMPRESS_LINE_BY_LINE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="09" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="105" GRP1="200" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PCOMP_M_SEL"/>
     <dynprofield FNAM="COMPRESS_MODE_LINE_BY_LINE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="19" LINE="09" COLN="07" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Compression Ligne-à-Ligne" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-COMPRESS_MODE-DATA_COMPRESS_GLOBAL" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="A" FMB1="00" FMB2="00" LENG="01" LINE="0A" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="105" GRP1="200" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PCOMP_M_SEL"/>
     <dynprofield FNAM="COMPRESS_MODE_GLOBAL_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="13" LINE="0A" COLN="07" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Compression Globale" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-SHM_MANAGEMENT" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="0B" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="106" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PSHM_SEL"/>
     <dynprofield FNAM="SHM_MANAGEMENT_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="17" LINE="0B" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Gestion auto. de la SHM" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield FNAM="GS_GLOBAL_DATA-S_TASK_WIZARD_DATA-TRACE_ACTIV" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="0B" COLN="21" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="107" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                       PTRACE_SEL"/>
     <dynprofield FNAM="TRACE_ACTIV_TITLE" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0D" LINE="0B" COLN="23" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Activer Trace" RES1="                                                                                                                                                                                                                                                         X"/>
     <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE pbo_0500.

PROCESS AFTER INPUT.
  MODULE wz_user_command_wizard.
* user defined modules

  MODULE usr_check_consistency_0500.</dynproflowsource>
    </dynpro>
   </dynpros>
   <pfstatus>
    <pfstatus_sta CODE="CTX_MENU_WZ_TASK" MODAL="C" INT_NOTE="Tâche - Wizard - Menu contextuel" CTXCODE="000001"/>
    <pfstatus_fun CODE="WZ_TASK_C" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Implémenter Tâche"/>
    <pfstatus_men CODE="000001" NO="01" REF_TYPE="F" REF_CODE="WZ_TASK_C" REF_NO="001"/>
    <pfstatus_mtx CODE="000001" TEXT_TYPE="S" TEXT="Wizard" INT_NOTE="Tâche - Wizard - Menu contextuel"/>
    <pfstatus_set STATUS="CTX_MENU_WZ_TASK" FUNCTION="WZ_TASK_C"/>
   </pfstatus>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZTASK_WIZARDTOP.                     &quot; Global Data
  INCLUDE LZTASK_WIZARDUXX.                     &quot; Function Mod

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************

INCLUDE lztask_wizardd01.
INCLUDE lztask_wizardp01.
INCLUDE lztask_wizardo01.

INCLUDE LZTASK_WIZARDFWZ.
*INCLUDE LSBPT_WIZARD_TEMPLATEFWZ.
*INCLUDE LSWZ_WIZARD_TEMPLATEFWZ.
*INCLUDE LSTB_WZ_WIZARD_TEMPLATEFWZ.

INCLUDE LZTASK_WIZARDFCB.
*INCLUDE LSBPT_WIZARD_TEMPLATEFCB.
*INCLUDE LSWZ_WIZARD_TEMPLATEFCB.
*INCLUDE LSTB_WZ_WIZARD_TEMPLATEFCB.


*&amp;WZ_PATTERN_INCLUDE_PROCESS_SUBSCREEN&amp;

INCLUDE LZTASK_WIZARDUSR.
*INCLUDE LSBPT_WIZARD_TEMPLATEUSR.
*INCLUDE LSWZ_WIZARD_TEMPLATEUSR.</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZTASK_WIZARDD01" VARCL="X" SUBC="I" APPL="S" RMAND="200" RLOAD="F" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LZTASK_WIZARDD01.
*----------------------------------------------------------------------*


*----------------------------------------------------------------------*
*       CLASS LCL_ALV_HANDLER_GENERIC DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv_handler_generic DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        io_alv_grid      TYPE REF TO cl_gui_alv_grid
        iot_display_data TYPE REF TO data.

    &quot; Handler Aide à la recherche
    METHODS handler_onf4
      FOR EVENT onf4
          OF cl_gui_alv_grid
      IMPORTING
          e_display e_fieldname e_fieldvalue er_event_data es_row_no et_bad_cells. &quot;#EC NEEDED

    &quot; Handler clique bouton
    METHODS handler_button_click
      FOR EVENT button_click
          OF cl_gui_alv_grid
      IMPORTING
          es_col_id es_row_no.                              &quot;#EC NEEDED

    &quot; Handler évènement double clique
    METHODS handler_double_click
      FOR EVENT double_click
                  OF cl_gui_alv_grid
      IMPORTING e_row e_column es_row_no.                   &quot;#EC NEEDED

    &quot; Handler Sélection HotSpot
    METHODS handler_hotspot_click
      FOR EVENT hotspot_click
                  OF cl_gui_alv_grid
      IMPORTING e_column_id e_row_id es_row_no.             &quot;#EC NEEDED

    &quot; Handler Toolbar
    METHODS handler_toolbar
      FOR EVENT toolbar
                  OF cl_gui_alv_grid
      IMPORTING e_interactive e_object sender.              &quot;#EC NEEDED

    &quot; Handler Action utilisateur
    METHODS handler_user_command
      FOR EVENT user_command
                  OF cl_gui_alv_grid
      IMPORTING e_ucomm sender.                             &quot;#EC NEEDED

    &quot; Handler modification données
    METHODS handler_data_changed
      FOR EVENT data_changed
                  OF cl_gui_alv_grid
      IMPORTING er_data_changed e_ucomm e_onf4 e_onf4_after e_onf4_before. &quot;#EC NEEDED

    &quot; Handler fin modification données
    METHODS handler_data_changed_finished
      FOR EVENT data_changed_finished
          OF cl_gui_alv_grid
      IMPORTING
          e_modified et_good_cells.                         &quot;#EC NEEDED

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


*-- Privée
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Souscriptions aux évènements
    METHODS event_register.

    &quot; Contrôle - MF
    METHODS __funcname_check
      IMPORTING
                !is_mod_cells    TYPE lvc_s_modi
      RETURNING VALUE(rs_return) TYPE bapiret2.

    &quot; Contrôle - Méthode
    METHODS __methodname_check
      IMPORTING
                !is_mod_cells    TYPE lvc_s_modi
                !ir_data_changed TYPE REF TO cl_alv_changed_data_protocol
      RETURNING VALUE(rs_return) TYPE bapiret2.


***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs

    DATA : mo_alv_grid TYPE REF TO cl_gui_alv_grid.
    DATA : mot_display_data TYPE REF TO data.

ENDCLASS.             &quot;LCL_ALV_HANDLER_GENERIC DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_ALV_GENERIC DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv_generic DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        iv_container_name TYPE clike
      RAISING
        cx_create_error.

    &quot; Contrôle données saisies
    METHODS check
      RETURNING VALUE(rv_error) TYPE sy-input.

    &quot; Affichage
    METHODS display
      IMPORTING
        it_fieldcatalog TYPE lvc_t_fcat OPTIONAL
      CHANGING
        ct_display_data TYPE STANDARD TABLE
      RAISING
        cx_salv_call_after_1st_display.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


*-- Privée
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

    &quot; ALV Generic - Container de Données
    TYPES :
      BEGIN OF ts_container_data,
        t_display_data TYPE REF TO data,
      END OF   ts_container_data.

    &quot; ALV Generic - Elèments pour l&apos;Affichage
    TYPES :
      BEGIN OF ts_display_element,
        s_layout            TYPE        lvc_s_layo,
        t_fieldcatalog      TYPE        lvc_t_fcat,
        t_toolbar_excluding TYPE ui_functions,
        o_event             TYPE REF TO lcl_alv_handler_generic,
        o_alv_grid          TYPE REF TO cl_gui_alv_grid,
        o_ccontainer        TYPE REF TO cl_gui_custom_container,
      END OF   ts_display_element.

    &quot; ALV Generic - Ensemble des composantes
    TYPES :
      BEGIN OF ts_alv_generic,
        data            TYPE ts_container_data,
        display_element TYPE ts_display_element,
      END OF   ts_alv_generic.

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Initialisation Toolbar
    METHODS toolbar_set.

    &quot; Affichage
    METHODS __display
      RAISING
        cx_salv_call_after_1st_display.

    &quot; Initialisation des élèments d&apos;Affichage
    METHODS display_element_set
      IMPORTING
        it_fieldcatalog TYPE lvc_t_fcat OPTIONAL
      CHANGING
        ct_display_data TYPE STANDARD TABLE.

    &quot; Initialisation FC
    METHODS fieldcatalog_generic_set
      IMPORTING
        it_display_data TYPE STANDARD TABLE.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs

    DATA : mv_first_display_done TYPE xsdboolean.
    DATA : ms_display_element TYPE ts_alv_generic.

ENDCLASS.             &quot;LCL_ALV_GENERIC DEFINITION</include_source>
   </include>
   <include NAME="LZTASK_WIZARDFCB" VARCL="X" SUBC="I" LEVL="740" RMAND="000" RLOAD="D" LDBNAME="D$S" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LWZ_WIZARDFCB .
*----------------------------------------------------------------------*
*&amp;WZ_PATTERN_WIZARD_CALLBACK&amp;
*&amp;---------------------------------------------------------------
*&amp;      FORM  CB_PROCESS_STEP_START
*&amp;---------------------------------------------------------------
FORM cb_process_step_start                                  &quot;#EC CALLED
        TABLES
           container
        USING
           command.
* begin of local data definition
  DATA:
    l_wizard    TYPE swf_wizard.
* end of local data definition

* first screen (button &apos;back&apos; will be automatically switched off
* and there will be NO popup &apos;you will lose data&apos;...)
  l_wizard-screen_typ = wizard_screen_start.

* initialize wizard step
* the wizard has one unique title while it is running
  l_wizard-title      = text-ttl.
  l_wizard-descobject = &apos;ZTASK_WIZARD_001&apos;
  . &quot;this is a text in dialog (SE61)
* call wizard screen
  CALL FUNCTION &apos;SWF_WIZARD_CALL&apos;
    EXPORTING
      wizard_data                 = l_wizard
    EXCEPTIONS
      operation_cancelled_by_user = 01
      back                        = 02.
  swf_evaluate command.


ENDFORM.                    &quot; CB_PROCESS_STEP_START
*&amp;---------------------------------------------------------------
*&amp;      FORM  CB_PROCESS_STEP_0200
*&amp;---------------------------------------------------------------
FORM cb_process_step_0200                                   &quot;#EC CALLED
        TABLES
           container
        USING
           command.
* begin of local data definition
  DATA:
    l_wizard    TYPE swf_wizard.
* end of local data definition

* initialize wizard step
* the wizard has one unique title while it is running
  l_wizard-title      = text-ttl.
  l_wizard-descobject = &apos;ZTASK_WIZARD_002&apos;
  . &quot;this is a text in dialog (SE61)
  l_wizard-subscreen1 = &apos;0200&apos;.
  l_wizard-subscpool1 = &apos;SAPLZTASK_WIZARD&apos;.

* set subscreen data (transport data out of global wizard data
* to global screen data )
  PERFORM usr_set_subscreen_data_0200.

* call wizard screen
  CALL FUNCTION &apos;SWF_WIZARD_CALL&apos;
    EXPORTING
      wizard_data                 = l_wizard
    EXCEPTIONS
      operation_cancelled_by_user = 01
      back                        = 02.
  swf_evaluate command.

* set subscreen data from global screen data back to the global
* wizard area
  PERFORM usr_get_subscreen_data_0200.


ENDFORM.                    &quot; CB_PROCESS_STEP_0200
*&amp;---------------------------------------------------------------
*&amp;      FORM  CB_PROCESS_STEP_0300
*&amp;---------------------------------------------------------------
FORM cb_process_step_0300                                   &quot;#EC CALLED
        TABLES
           container
        USING
           command.
* begin of local data definition
  DATA:
    l_wizard    TYPE swf_wizard.
* end of local data definition

* initialize wizard step
* the wizard has one unique title while it is running
  l_wizard-title      = text-ttl.
  l_wizard-descobject = &apos;ZTASK_WIZARD_003&apos;
  . &quot;this is a text in dialog (SE61)
  l_wizard-subscreen1 = &apos;0300&apos;.
  l_wizard-subscpool1 = &apos;SAPLZTASK_WIZARD&apos;.

* set subscreen data (transport data out of global wizard data
* to global screen data )
  PERFORM usr_set_subscreen_data_0300.

* call wizard screen
  CALL FUNCTION &apos;SWF_WIZARD_CALL&apos;
    EXPORTING
      wizard_data                 = l_wizard
    EXCEPTIONS
      operation_cancelled_by_user = 01
      back                        = 02.
  swf_evaluate command.

* set subscreen data from global screen data back to the global
* wizard area
  PERFORM usr_get_subscreen_data_0300.


ENDFORM.                    &quot; CB_PROCESS_STEP_0300

*&amp;---------------------------------------------------------------
*&amp;      FORM  CB_PROCESS_STEP_0400
*&amp;---------------------------------------------------------------
FORM cb_process_step_0400                                   &quot;#EC CALLED
        TABLES
           container
        USING
           command.
* begin of local data definition
  DATA:
    l_wizard    TYPE swf_wizard.
* end of local data definition

* initialize wizard step
* the wizard has one unique title while it is running
  l_wizard-title      = text-ttl.
  l_wizard-descobject = &apos;ZTASK_WIZARD_004&apos;
  . &quot;this is a text in dialog (SE61)
  l_wizard-subscreen1 = &apos;0400&apos;.
  l_wizard-subscpool1 = &apos;SAPLZTASK_WIZARD&apos;.

* set subscreen data (transport data out of global wizard data
* to global screen data )
  PERFORM usr_set_subscreen_data_0400.

* call wizard screen
  CALL FUNCTION &apos;SWF_WIZARD_CALL&apos;
    EXPORTING
      wizard_data                 = l_wizard
    EXCEPTIONS
      operation_cancelled_by_user = 01
      back                        = 02.
  swf_evaluate command.

* set subscreen data from global screen data back to the global
* wizard area
  PERFORM usr_get_subscreen_data_0400.


ENDFORM.                    &quot; CB_PROCESS_STEP_0400


*&amp;---------------------------------------------------------------
*&amp;      FORM  CB_PROCESS_STEP_0500
*&amp;---------------------------------------------------------------
FORM cb_process_step_0500                                   &quot;#EC CALLED
        TABLES
           container
        USING
           command.
* begin of local data definition
  DATA:
    l_wizard    TYPE swf_wizard.
* end of local data definition

* initialize wizard step
* the wizard has one unique title while it is running
  l_wizard-title      = text-ttl.
  l_wizard-descobject = &apos;ZTASK_WIZARD_005&apos;
  . &quot;this is a text in dialog (SE61)
  l_wizard-subscreen1 = &apos;0500&apos;.
  l_wizard-subscpool1 = &apos;SAPLZTASK_WIZARD&apos;.

* set subscreen data (transport data out of global wizard data
* to global screen data )
  PERFORM usr_set_subscreen_data_0500.

* call wizard screen
  CALL FUNCTION &apos;SWF_WIZARD_CALL&apos;
    EXPORTING
      wizard_data                 = l_wizard
    EXCEPTIONS
      operation_cancelled_by_user = 01
      back                        = 02.
  swf_evaluate command.

* set subscreen data from global screen data back to the global
* wizard area
  PERFORM usr_get_subscreen_data_0500.


ENDFORM.                    &quot; CB_PROCESS_STEP_0400

*&amp;---------------------------------------------------------------
*&amp;      FORM  CB_PROCESS_STEP_FINISH
*&amp;---------------------------------------------------------------
FORM cb_process_step_finish                                 &quot;#EC CALLED
        TABLES
           container
        USING
           command.
* begin of local data definition
  DATA:
    l_wizard    TYPE swf_wizard.
* end of local data definition

* initialize wizard step
* the wizard has one unique title while it is running
  l_wizard-title      = text-ttl.
  l_wizard-descobject = &apos;ZTASK_WIZARD_007&apos;
  . &quot;this is a text in dialog (SE61)
* last screen (button &apos;continue&apos; will be called &apos;done&apos;)
  l_wizard-screen_typ = wizard_screen_end.

* call wizard screen
  CALL FUNCTION &apos;SWF_WIZARD_CALL&apos;
    EXPORTING
      wizard_data                 = l_wizard
    EXCEPTIONS
      operation_cancelled_by_user = 01
      back                        = 02.
  swf_evaluate command.

* process data collected by wizard
  PERFORM usr_process_wizard_data.

ENDFORM.                    &quot; CB_PROCESS_STEP_FINISH</include_source>
   </include>
   <include NAME="LZTASK_WIZARDFWZ" VARCL="X" SUBC="I" LEVL="740" RMAND="000" RLOAD="D" LDBNAME="D$S" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LWZ_WIZARDFWZ .
*----------------------------------------------------------------------*
************************************************************************
* Wizard data:
*   All data collected by the wizard
************************************************************************



************************************************************************
* FORM-Routines
************************************************************************
*&amp;---------------------------------------------------------------------*
*&amp;      Form  WZ_DEFINE_WIZARD_STEPS
*&amp;---------------------------------------------------------------------*
FORM wz_define_wizard_steps
        TABLES
           p_wizard_steps   STRUCTURE swf_wizdef.
  DATA:
    l_wizard_step   TYPE swf_wizdef.

*&amp;WZ_PATTERN_WIZARD_STEPS_START&amp;
  l_wizard_step-program   = &apos;SAPLZTASK_WIZARD&apos;.             &quot;#EC NOTEXT

  l_wizard_step-form      = &apos;CB_PROCESS_STEP_START&apos;.        &quot;#EC NOTEXT
  l_wizard_step-text      = text-001.
  APPEND l_wizard_step TO p_wizard_steps.

  l_wizard_step-form      = &apos;CB_PROCESS_STEP_0200&apos;.         &quot;#EC NOTEXT
  l_wizard_step-text      = text-002.
  APPEND l_wizard_step TO p_wizard_steps.

  l_wizard_step-form      = &apos;CB_PROCESS_STEP_0300&apos;.         &quot;#EC NOTEXT
  l_wizard_step-text      = text-003.
  APPEND l_wizard_step TO p_wizard_steps.

  l_wizard_step-form      = &apos;CB_PROCESS_STEP_0400&apos;.         &quot;#EC NOTEXT
  l_wizard_step-text      = text-004.
  APPEND l_wizard_step TO p_wizard_steps.

  l_wizard_step-form      = &apos;CB_PROCESS_STEP_0500&apos;.         &quot;#EC NOTEXT
  l_wizard_step-text      = text-005.
  APPEND l_wizard_step TO p_wizard_steps.

  l_wizard_step-form      = &apos;CB_PROCESS_STEP_FINISH&apos;.       &quot;#EC NOTEXT
  l_wizard_step-text      = text-006.
  APPEND l_wizard_step TO p_wizard_steps.

*&amp;WZ_PATTERN_WIZARD_STEPS_END&amp;
ENDFORM.                    &quot; WZ_DEFINE_WIZARD_STEPS

*&amp;---------------------------------------------------------------------*
*&amp;      Form  WZ_WIZARD_PROCESS
*&amp;---------------------------------------------------------------------*
FORM wz_wizard_process
        TABLES
           p_wizard_steps   STRUCTURE  swf_wizdef
        CHANGING
           p_subrc          TYPE       sy-subrc.

  CALL FUNCTION &apos;SWF_WIZARD_PROCESS&apos;
    EXPORTING
      container_compensation      = wizard_true
      process_logging             = wizard_true
      roadmap                     = wizard_true
      start_column                = 10
      start_row                   = 5
    TABLES
      definition                  = p_wizard_steps
    EXCEPTIONS
      operation_cancelled_by_user = 1
      process_in_error            = 2
      OTHERS                      = 3.
  p_subrc = sy-subrc.

ENDFORM.                    &quot; WZ_WIZARD_PROCESS

************************************************************************
* MODULES
************************************************************************
*&amp;---------------------------------------------------------------------*
*&amp;      Module  WZ_USER_COMMAND_WIZARD  INPUT
*&amp;---------------------------------------------------------------------*
MODULE wz_user_command_wizard INPUT.
  swf_okcode_get g_ok_code.
  g_save_ok_code = g_ok_code.
  CLEAR g_ok_code.
ENDMODULE.                 &quot; WZ_USER_COMMAND_WIZARD  INPUT</include_source>
   </include>
   <include NAME="LZTASK_WIZARDO01" VARCL="X" SUBC="I" APPL="S" RMAND="200" RLOAD="F" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LZTASK_WIZARDO01.
*----------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO_0200  OUTPUT
*&amp;---------------------------------------------------------------------*
*       Module Affichage Ecran 0200
*----------------------------------------------------------------------*
MODULE pbo_0200 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Modification de l&apos;Affichage
  &quot; -----------------------------------------------------------

  LOOP AT SCREEN.

    &quot; Suivant le Groupe d&apos;élèment de niveau 1
    CASE screen-group1.

      WHEN &apos;100&apos;.                                           &quot;#EC NOTEXT
        &quot;&quot;  --&gt; Suivant le type de Programme cible
        CASE gs_global_data-v_subc.

          WHEN &apos;1&apos;.                                         &quot;#EC NOTEXT
            &quot; Programme Exécutable
            &quot;&quot;  --&gt; Active les Zones dépéndantes
            screen-input  = 1.

          WHEN OTHERS.
            &quot; Autres
            &quot;&quot;  --&gt; Désactive les Zones dépéndantes
            screen-input = 0.

        ENDCASE.

        &quot;&quot;  --&gt; Suivant le Groupe d&apos;élèment de niveau 2
        CASE screen-group2.

          WHEN &apos;110&apos;.                                       &quot;#EC NOTEXT
            &quot; Groupe 110 - Sous-Groupe du Niveau 1
            &quot;&quot;  --&gt; (Dés)Active le groupe en fonction de la coche d&apos;utilisation Include Prg Cadre
            screen-input = SWITCH int1( gs_global_data-s_task_wizard_data-target_framework_incl_use
              WHEN abap_true THEN 1   &quot;Zone cochée &quot;&quot; --&gt; Active la saisie
              ELSE 0                  &quot;Zone vide &quot;&quot; --&gt; Désactive la saisie
            ).

          WHEN &apos;120&apos;.
            &quot; Groupe 120 - Sous-Groupe du Niveau 1
            &quot;&quot;  --&gt; (Dés)Active le groupe en fonction de la coche d&apos;Ajout de l&apos;Ecran de Sélection
            screen-input = SWITCH int1( gs_global_data-s_task_wizard_data-target_selscreen_add
              WHEN abap_true THEN 1   &quot;Zone cochée &quot;&quot; --&gt; Active la saisie
              ELSE 0                  &quot;Zone vide &quot;&quot; --&gt; Désactive la saisie
            ).

          WHEN OTHERS.
            &quot; Autres

        ENDCASE.

        &quot;&quot;  --&gt; Suivant le Groupe d&apos;élèment de niveau 3
        CASE screen-group3.

          WHEN &apos;121&apos;.
            &quot; Groupe 121 - Sous-Groupe du Groupe 120
            &quot;&quot;  --&gt; (Dés)Active le groupe en fonction de la coche de l&apos;Utilisation Include Ecran de Sélection
            screen-input = SWITCH int1( gs_global_data-s_task_wizard_data-target_selscreen_incl_use
              WHEN abap_true THEN 1   &quot;Zone cochée &quot;&quot; --&gt; Active la saisie
              ELSE 0                  &quot;Zone vide &quot;&quot; --&gt; Désactive la saisie
            ).

          WHEN OTHERS.
            &quot; Autres

        ENDCASE.

      WHEN OTHERS.
        &quot; Autre groupe
        &quot;&quot;  --&gt; Passe à l&apos;itération suivante
        CONTINUE.

    ENDCASE.

    &quot; Modification des propriétées d&apos;affichage
    MODIFY SCREEN.

  ENDLOOP.

ENDMODULE.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO_0300  OUTPUT
*&amp;---------------------------------------------------------------------*
*       Module Affichage Ecran 0300
*----------------------------------------------------------------------*
MODULE pbo_0300 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Affichage de l&apos;ALV
  &quot; -----------------------------------------------------------

  PERFORM 0300_alv_display.

ENDMODULE.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO_0400  OUTPUT
*&amp;---------------------------------------------------------------------*
*       Module Affichage Ecran 0400
*----------------------------------------------------------------------*
MODULE pbo_0400 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Affichage de l&apos;ALV
  &quot; -----------------------------------------------------------

  PERFORM 0400_alv_display.

ENDMODULE.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  PBO_0500  OUTPUT
*&amp;---------------------------------------------------------------------*
*       Module Affichage Ecran 0500
*----------------------------------------------------------------------*
MODULE pbo_0500 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Modification de l&apos;Affichage
  &quot; -----------------------------------------------------------

  LOOP AT SCREEN.

    &quot; Suivant le Groupe d&apos;élèment de niveau 1
    CASE screen-group1.

      WHEN &apos;100&apos;.
        &quot; Groupe 100
        &quot;&quot;  --&gt; Suivant le Groupe de Serveur
        screen-input = SWITCH int1( gs_global_data-s_task_wizard_data-server_default
          WHEN abap_false THEN 1   &quot;Désactive la zone si sélection Groupe de Serveur par défaut
          ELSE 0                   &quot;Active la zone si sélection manuel du Groupe de Serveur
        ).

      WHEN &apos;200&apos;.
        &quot; Groupe 200
        &quot;&quot;  --&gt; Suivant l&apos;Activation de la Compression
        screen-input = SWITCH int1( gs_global_data-s_task_wizard_data-compress_activ
          WHEN abap_true THEN 1   &quot;Compression Activée
          ELSE 0                  &quot;Compression Désactivée
        ).

      WHEN OTHERS.
        &quot; Autres
        &quot;&quot;  --&gt; Passe à l&apos;itération suivante
        CONTINUE.

    ENDCASE.

    &quot; Modification des propriétées d&apos;affichage
    MODIFY SCREEN.

  ENDLOOP.

ENDMODULE.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  0300_ALV_DISPLAY
*&amp;---------------------------------------------------------------------*
*       Affichage de l&apos;ALV
*----------------------------------------------------------------------*
FORM 0300_alv_display .

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Affichage de l&apos;ALV
  &quot; -----------------------------------------------------------

  IF NOT gs_global_data-s_alv_container-s_alv_container_0300-o_alv IS BOUND.
    TRY.
        &quot; -----------------------------------------------------------
        &quot; Initialisation de l&apos;ALV
        &quot; -----------------------------------------------------------

        &quot; Création de l&apos;instance de l&apos;ALV
        CREATE OBJECT gs_global_data-s_alv_container-s_alv_container_0300-o_alv
          EXPORTING
            iv_container_name = &apos;CC_ALV_0300&apos;.  &quot;#EC NOTEXT

      CATCH cx_create_error.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Arrêt du traitement
        RETURN.

    ENDTRY.

    &quot; -----------------------------------------------------------
    &quot; Initialisation du FC
    &quot; -----------------------------------------------------------

    PERFORM 0300_fieldcatalog_set.

  ENDIF.

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Affichage de l&apos;ALV
      &quot; -----------------------------------------------------------

      &quot; Affichage des données
      gs_global_data-s_alv_container-s_alv_container_0300-o_alv-&gt;display(
        EXPORTING
          it_fieldcatalog = gs_global_data-s_alv_container-s_alv_container_0300-t_fieldcatalog
        CHANGING
          ct_display_data = gs_global_data-s_alv_container-s_alv_container_0300-t_data
      ).

    CATCH cx_salv_call_after_1st_display.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

  ENDTRY.


ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  0300_FIELDCATALOG_SET
*&amp;---------------------------------------------------------------------*
*       Initialisation du FC
*----------------------------------------------------------------------*
FORM 0300_fieldcatalog_set.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
        ls_fieldcatalog TYPE lvc_s_fcat.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_tabledescr  TYPE REF TO cl_abap_tabledescr,
    lo_structdescr TYPE REF TO cl_abap_structdescr.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Sélection des données
  &quot; -----------------------------------------------------------

  lo_tabledescr ?= cl_abap_structdescr=&gt;describe_by_data( gs_global_data-s_alv_container-s_alv_container_0300-t_data ).
  lo_structdescr ?= lo_tabledescr-&gt;get_table_line_type( ).

  &quot;&quot;  --&gt; Initialisation du FC
  LOOP AT cl_salv_data_descr=&gt;read_structdescr( lo_structdescr )
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_dfies&gt;).

    CLEAR : ls_fieldcatalog.

    &quot; Initialisation des données
    MOVE-CORRESPONDING &lt;lfs_s_dfies&gt; TO ls_fieldcatalog.

    &quot; Initialisation de la Position
    ls_fieldcatalog-col_pos = sy-tabix.

    &quot; Initialisatino Indicateur Aide à la Recherche Disponible
    ls_fieldcatalog-f4availabl = abap_true.

    &quot; Initialisation Référence DDIC
    ls_fieldcatalog-ref_table = &apos;SRM_S_QUEUE_DEL&apos;.          &quot;#EC NOTEXT
    ls_fieldcatalog-ref_field = &apos;FUNCNAME&apos;.                 &quot;#EC NOTEXT

    &quot; Ajout de l&apos;entrée
    APPEND ls_fieldcatalog TO gs_global_data-s_alv_container-s_alv_container_0300-t_fieldcatalog.

  ENDLOOP.

ENDFORM.


*&amp;---------------------------------------------------------------------*
*&amp;      Form  0400_ALV_DISPLAY
*&amp;---------------------------------------------------------------------*
*       Affichage de l&apos;ALV
*----------------------------------------------------------------------*
FORM 0400_alv_display .

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Affichage de l&apos;ALV
  &quot; -----------------------------------------------------------

  IF NOT gs_global_data-s_alv_container-s_alv_container_0400-o_alv IS BOUND.
    TRY.
        &quot; -----------------------------------------------------------
        &quot; Initialisation de l&apos;ALV
        &quot; -----------------------------------------------------------

        &quot; Création de l&apos;instance de l&apos;ALV
        CREATE OBJECT gs_global_data-s_alv_container-s_alv_container_0400-o_alv
          EXPORTING
            iv_container_name = &apos;CC_ALV_0400&apos;.  &quot;#EC NOTEXT

      CATCH cx_create_error.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Arrêt du traitement
        RETURN.

    ENDTRY.

    &quot; -----------------------------------------------------------
    &quot; Initialisation du FC
    &quot; -----------------------------------------------------------

    PERFORM 0400_fieldcatalog_set.

  ENDIF.

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Affichage de l&apos;ALV
      &quot; -----------------------------------------------------------

      &quot; Affichage des données
      gs_global_data-s_alv_container-s_alv_container_0400-o_alv-&gt;display(
        EXPORTING
          it_fieldcatalog = gs_global_data-s_alv_container-s_alv_container_0400-t_fieldcatalog
        CHANGING
          ct_display_data = gs_global_data-s_alv_container-s_alv_container_0400-t_data
      ).

    CATCH cx_salv_call_after_1st_display.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

  ENDTRY.


ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  0400_FIELDCATALOG_SET
*&amp;---------------------------------------------------------------------*
*       Initialisation du FC
*----------------------------------------------------------------------*
FORM 0400_fieldcatalog_set.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
        ls_fieldcatalog TYPE lvc_s_fcat.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_tabledescr  TYPE REF TO cl_abap_tabledescr,
    lo_structdescr TYPE REF TO cl_abap_structdescr.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Sélection des données
  &quot; -----------------------------------------------------------

  lo_tabledescr ?= cl_abap_structdescr=&gt;describe_by_data( gs_global_data-s_alv_container-s_alv_container_0400-t_data ).
  lo_structdescr ?= lo_tabledescr-&gt;get_table_line_type( ).

  &quot;&quot;  --&gt; Initialisation du FC
  LOOP AT cl_salv_data_descr=&gt;read_structdescr( lo_structdescr )
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_dfies&gt;).

    CLEAR : ls_fieldcatalog.

    &quot; Initialisation des données
    MOVE-CORRESPONDING &lt;lfs_s_dfies&gt; TO ls_fieldcatalog.

    &quot; Initialisation de la Position
    ls_fieldcatalog-col_pos = sy-tabix.

    &quot; Initialisatino Indicateur Aide à la Recherche Disponible
    ls_fieldcatalog-f4availabl = abap_true.

    CASE &lt;lfs_s_dfies&gt;-fieldname.

      WHEN &apos;CLASSNAME&apos;.                                     &quot;#EC NOTEXT
        &quot; Classe
        &quot;&quot;  -&gt; Initialisation Référence DDIC
        ls_fieldcatalog-ref_table = &apos;EWA_EL_CLASSNAME&apos;.     &quot;#EC NOTEXT
        ls_fieldcatalog-ref_field = &apos;CLASSNAME&apos;.            &quot;#EC NOTEXT

      WHEN &apos;METHODNAME&apos;.                                    &quot;#EC NOTEXT
        &quot; Méthode
        &quot;&quot;  -&gt; Initialisation Référence DDIC
        ls_fieldcatalog-ref_table = &apos;J_3RVATDSFIGV&apos;.        &quot;#EC NOTEXT
        ls_fieldcatalog-ref_field = &apos;METHOD_VAL&apos;.           &quot;#EC NOTEXT

      WHEN OTHERS.
        &quot; Autres

    ENDCASE.

    &quot; Ajout de l&apos;entrée
    APPEND ls_fieldcatalog TO gs_global_data-s_alv_container-s_alv_container_0400-t_fieldcatalog.

  ENDLOOP.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  USR_WIZARD_RETURN_DATA_SET
*&amp;---------------------------------------------------------------------*
*       Initialisation données de sortie
*----------------------------------------------------------------------*
*      &lt;-- ES_TASK_WIZARD_DATA        Données Wizard
*----------------------------------------------------------------------*
FORM usr_wizard_return_data_set CHANGING es_task_wizard_data TYPE ztec_s_task_wizard_data.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
        ls_task_call_process TYPE ztec_s_task_call_process.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_task_wizard_data.

  &quot; -----------------------------------------------------------
  &quot; Initialisation données de sortie
  &quot; -----------------------------------------------------------

  &quot; Initialisation données communes
  es_task_wizard_data = gs_global_data-s_task_wizard_data.

  &quot; Réconfiguration données liées au Radio-Boutton
  IF gs_global_data-s_task_wizard_data-compress_activ EQ abap_false.
    &quot; Compression Inactive
    &quot;&quot;  --&gt; Réinitialisation Mode de Compression
    CLEAR : es_task_wizard_data-compress_mode.

  ENDIF.

  &quot; Alimentation table des traitements MF
  LOOP AT gs_global_data-s_alv_container-s_alv_container_0300-t_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_data_0300&gt;).

    CLEAR : ls_task_call_process.

    &quot; Initialisation
    ls_task_call_process-function_name = &lt;lfs_s_data_0300&gt;-funcname.

    &quot; Ajout de l&apos;entrée
    APPEND ls_task_call_process TO es_task_wizard_data-t_task_call_process.

  ENDLOOP.

  &quot; Alimentation table des traitements Méthode
  LOOP AT gs_global_data-s_alv_container-s_alv_container_0400-t_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_data_0400&gt;).

    CLEAR : ls_task_call_process.

    &quot; Initialisation
    ls_task_call_process-class_name  = &lt;lfs_s_data_0400&gt;-classname.
    ls_task_call_process-method_name = &lt;lfs_s_data_0400&gt;-methodname.

    &quot; Ajout de l&apos;entrée
    APPEND ls_task_call_process TO es_task_wizard_data-t_task_call_process.

  ENDLOOP.

ENDFORM.</include_source>
   </include>
   <include NAME="LZTASK_WIZARDP01" VARCL="X" SUBC="I" APPL="S" RMAND="200" RLOAD="F" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LZTASK_WIZARDP01.
*----------------------------------------------------------------------*


*----------------------------------------------------------------------*
*       CLASS LCL_ALV_HANDLER_GENERIC IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv_handler_generic IMPLEMENTATION.

  METHOD constructor.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------

    &quot; Initialisation attribut
    me-&gt;mo_alv_grid      = io_alv_grid.
    me-&gt;mot_display_data = iot_display_data.

    &quot; -----------------------------------------------------------
    &quot; Souscription aux évènements
    &quot; -----------------------------------------------------------

    me-&gt;event_register( ).

  ENDMETHOD.

  METHOD event_register.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Souscription aux évènement
    &quot; -----------------------------------------------------------

    &quot; Handler  Aide à la recherche
    SET HANDLER me-&gt;handler_onf4 FOR me-&gt;mo_alv_grid.

    &quot; Handler Toolbar
    SET HANDLER me-&gt;handler_toolbar FOR me-&gt;mo_alv_grid.

    &quot; Handler Clique bouton
    SET HANDLER me-&gt;handler_button_click FOR me-&gt;mo_alv_grid.

    &quot; Handler Double clique
    SET HANDLER me-&gt;handler_double_click FOR me-&gt;mo_alv_grid.

    &quot; Handler Action Utilisateur
    SET HANDLER me-&gt;handler_user_command FOR me-&gt;mo_alv_grid.

    &quot; Handler clique HotSpot
    SET HANDLER me-&gt;handler_hotspot_click FOR me-&gt;mo_alv_grid.

    &quot; Handler Modification des données
    SET HANDLER me-&gt;handler_data_changed FOR me-&gt;mo_alv_grid.

    &quot; Handler Fin modification des données
    SET HANDLER me-&gt;handler_data_changed_finished FOR me-&gt;mo_alv_grid.

    &quot; -----------------------------------------------------------
    &quot; Modification de l&apos;évèment d&apos;Edition
    &quot; -----------------------------------------------------------

    &quot; A chaque modification
    CALL METHOD me-&gt;mo_alv_grid-&gt;register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=&gt;mc_evt_modified.

    &quot; Lors de l&apos;Appui sur Entrée
    CALL METHOD me-&gt;mo_alv_grid-&gt;register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=&gt;mc_evt_enter.

  ENDMETHOD.

  METHOD handler_user_command.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Sélection des données
    &quot; -----------------------------------------------------------



  ENDMETHOD.

  METHOD handler_toolbar.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Sélection des données
    &quot; -----------------------------------------------------------



  ENDMETHOD.

  METHOD handler_button_click.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------

  ENDMETHOD.

  METHOD handler_data_changed.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
          lt_row_id TYPE SORTED TABLE OF sy-tabix WITH UNIQUE KEY table_line.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_bapiret2 TYPE bapiret2.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_protocol_display TYPE xsdboolean.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Contrôle saisie
    &quot; -----------------------------------------------------------

    LOOP AT er_data_changed-&gt;mt_mod_cells
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_mod_cells&gt;).

      CLEAR : ls_bapiret2.

      &quot; Suivant le champ modifié
      CASE &lt;lfs_s_mod_cells&gt;-fieldname.

        WHEN &apos;FUNCNAME&apos;.                                    &quot;#EC NOTEXT
          &quot; Module Fonction
          IF NOT &lt;lfs_s_mod_cells&gt;-value IS INITIAL.
            &quot;&quot;  --&gt; Contrôle sur MF saisis
            ls_bapiret2 = me-&gt;__funcname_check( &lt;lfs_s_mod_cells&gt; ).

          ENDIF.

        WHEN &apos;CLASSNAME&apos; OR &apos;METHODNAME&apos;.                   &quot;#EC NOTEXT
          &quot; Classe / Méthode
          IF NOT line_exists( lt_row_id[ &lt;lfs_s_mod_cells&gt;-row_id ] ).
            &quot; Ligne non contrôlée
            &quot;&quot;  --&gt; Contrôle sur Classe / Méthode (les deux sont dépendants l&apos;un de l&apos;autre)
            ls_bapiret2 = me-&gt;__methodname_check(
              is_mod_cells    = &lt;lfs_s_mod_cells&gt;   &quot;Fourni
              ir_data_changed = er_data_changed
            ).

            &quot;&quot;  --&gt; Ajout de la ligne
            INSERT &lt;lfs_s_mod_cells&gt;-row_id INTO TABLE lt_row_id.

          ENDIF.

        WHEN OTHERS.
          &quot; Autres

      ENDCASE.

      IF NOT ls_bapiret2 IS INITIAL.
        &quot; Message initialisé
        &quot;&quot;  --&gt; Ajout du message dans le Protocole
        er_data_changed-&gt;add_protocol_entry(
          EXPORTING
            i_msgid     = ls_bapiret2-id
            i_msgty     = ls_bapiret2-type
            i_msgno     = ls_bapiret2-number
            i_msgv1     = ls_bapiret2-message_v1
            i_msgv2     = ls_bapiret2-message_v2
            i_msgv3     = ls_bapiret2-message_v3
            i_msgv4     = ls_bapiret2-message_v4
            i_fieldname = &lt;lfs_s_mod_cells&gt;-fieldname
            i_row_id    = ls_bapiret2-row
            i_tabix     = ls_bapiret2-row
        ).

        &quot;&quot;  --&gt; Initialisation indicateur Affichage Protocole
        lv_protocol_display = abap_true.

      ENDIF.

    ENDLOOP.

  ENDMETHOD.

  METHOD __funcname_check.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_count TYPE sy-dbcnt.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Contrôle sur le MF
    &quot; -----------------------------------------------------------

    &quot; Pour être éligible le MF doit remplir les Conditions suivantes :
    &quot;   - Exister
    &quot;   - Pas de paramètre de type &quot;REF TO&quot;

    &quot; -----------------------------------------------------------
    &quot; Contrôle l&apos;existence du MF
    &quot; -----------------------------------------------------------

    &quot; Contrôle existence du MF
    SELECT SINGLE funcname FROM tfdir   &quot;Entrée bufférisée
                          WHERE funcname EQ @is_mod_cells-value
                           INTO @DATA(lv_funcname).
    IF sy-subrc NE 0.
      &quot; Le MF n&apos;existe pas
      &quot;&quot;  --&gt; Retourne le message
      rs_return-id         = &apos;3G&apos;.                          &quot;#EC NOTEXT
      rs_return-row        = is_mod_cells-row_id.
      rs_return-type       = gc_display_like.               &quot;#EC NOTEXT
      rs_return-number     = 733.
      rs_return-message_v1 = is_mod_cells-value.

      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Contrôle des paramètres du MF
    &quot; -----------------------------------------------------------

    &quot; Contrôle présence de paramètre non éligible
    SELECT COUNT( * ) FROM fupararef
     WHERE funcname  EQ @lv_funcname
       AND ref_class EQ @abap_true
      INTO @lv_count.
    IF lv_count GT 0.
      &quot; Au moins un paramètre Référence
      &quot;&quot;  --&gt; Retourne le message
      rs_return-id     = &apos;FL&apos;.                              &quot;#EC NOTEXT
      rs_return-row    = is_mod_cells-row_id.
      rs_return-type   = gc_display_like.                   &quot;#EC NOTEXT
      rs_return-number = 393.

      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

  ENDMETHOD.

  METHOD __methodname_check.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_cmpname TYPE seocompodf-cmpname,
      lv_clsname TYPE seocompodf-clsname.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
    FIELD-SYMBOLS :
      &lt;lfs_s_mod_cells&gt;    TYPE lvc_s_modi,
      &lt;lfs_t_display_data&gt; TYPE tt_alv_display_data_0400.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Contrôle la Méthode saisie
    &quot; -----------------------------------------------------------

    &quot; Pour être éligible la méthode doit remplir les Conditions suivantes :
    &quot;   - Exister
    &quot;   - Être public
    &quot;   - Être Statique
    &quot;   - Pas de paramètre de type &quot;REF TO&quot;

    &quot; -----------------------------------------------------------
    &quot; Initialisation des variables
    &quot; -----------------------------------------------------------

    &quot; Suivant le champ modifié
    CASE is_mod_cells-fieldname.

      WHEN &apos;CLASSNAME&apos;.                                     &quot;#EC NOTEXT
        &quot; Modification de la Classe
        &quot;&quot;  --&gt; Initialisation Nom de la Classe
        lv_clsname = is_mod_cells-value.

        &quot;&quot;  --&gt; Récupération de la Méthode associée
        READ TABLE ir_data_changed-&gt;mt_mod_cells WITH KEY row_id    = is_mod_cells-row_id
                                                          fieldname = &apos;METHODNAME&apos; &quot;#EC NOTEXT
                                                ASSIGNING &lt;lfs_s_mod_cells&gt;.
        IF sy-subrc EQ 0.
          &quot; Correspondance trouvée
          &quot;&quot;  --&gt; Initialisation Nom de la Méthode
          lv_cmpname = &lt;lfs_s_mod_cells&gt;-value.

        ELSE.
          &quot; Pas dans les données modifiées
          &quot;&quot;  --&gt; Récupération dans les données déjà saisies
          ASSIGN ir_data_changed-&gt;mp_mod_rows-&gt;* TO &lt;lfs_t_display_data&gt;.
          IF sy-subrc EQ 0.
            TRY.
                &quot; Récupération Nom de la Méthode dans données validées
                lv_cmpname = &lt;lfs_t_display_data&gt;[ is_mod_cells-row_id ]-methodname.

              CATCH cx_sy_itab_line_not_found.
                &quot; Entrée non trouvée

            ENDTRY.

          ENDIF.

        ENDIF.

      WHEN &apos;METHODNAME&apos;.                                    &quot;#EC NOTEXT
        &quot; Modification de la Méthode
        &quot;&quot;  --&gt; Initialisation Nom de la Méthode
        lv_cmpname = is_mod_cells-value.

        &quot;&quot;  --&gt; Récupération de la Classe associée
        READ TABLE ir_data_changed-&gt;mt_mod_cells WITH KEY row_id    = is_mod_cells-row_id
                                                          fieldname = &apos;CLASSNAME&apos; &quot;#EC NOTEXT
                                                ASSIGNING &lt;lfs_s_mod_cells&gt;.
        IF sy-subrc EQ 0.
          &quot; Correspondance trouvée
          &quot;&quot;  --&gt; Initialisation Nom de la Classe
          lv_clsname = &lt;lfs_s_mod_cells&gt;-value.

        ELSE.
          &quot; Pas dans les données modifiées
          &quot;&quot;  --&gt; Récupération dans les données déjà saisies
          ASSIGN ir_data_changed-&gt;mp_mod_rows-&gt;* TO &lt;lfs_t_display_data&gt;.
          IF sy-subrc EQ 0.
            TRY.
                &quot; Récupération Nom de la Méthode dans données validées
                lv_clsname = &lt;lfs_t_display_data&gt;[ is_mod_cells-row_id ]-classname.

              CATCH cx_sy_itab_line_not_found.
                &quot; Entrée non trouvée

            ENDTRY.

          ENDIF.

        ENDIF.

      WHEN OTHERS.
        &quot; Autre

    ENDCASE.

    &quot; Contrôle données récupérées
    IF lv_clsname IS INITIAL AND lv_cmpname IS INITIAL.
      &quot; Aucune saisie
      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ELSE.
      IF lv_clsname IS INITIAL
      OR lv_cmpname IS INITIAL.
        &quot; Pas de Méthode saisie ou pas de Classe
        &quot;&quot;  --&gt; Initialisation message de retour
        rs_return-type = gc_display_like.
        rs_return-row  = is_mod_cells-row_id.

        IF lv_clsname IS INITIAL.
          &quot; Classe non saisie
          &quot;&quot;  --&gt; Initialisation variable dépendante
          rs_return-id     = &apos;ZTASK&apos;.                       &quot;#EC NOTEXT
          rs_return-number = 602.

        ELSE.
          &quot; Méthode non saisie
          &quot;&quot;  --&gt; Initialisation variable dépendante
          rs_return-id     = &apos;ZTASK&apos;.                       &quot;#EC NOTEXT
          rs_return-number = 603.

        ENDIF.

        &quot;&quot;  --&gt; Arrêt du traitement
        RETURN.

      ENDIF.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Contrôle existence de la Méthode
    &quot; -----------------------------------------------------------

    &quot; Contrôle existence Méthode
    SELECT SINGLE version  FROM seocompodf
            WHERE clsname    EQ @lv_clsname
              AND cmpname    EQ @lv_cmpname
              AND version    EQ &apos;1&apos; &quot;Actif &quot;#EC NOTEXT
              AND exposure   EQ &apos;2&apos; &quot;Publique &quot;#EC NOTEXT
              AND mtddecltyp EQ &apos;1&apos; &quot;Statique &quot;#EC NOTEXT
             INTO @DATA(lv_version).
    IF sy-subrc NE 0.
      &quot; Méthode non éligible
      &quot;&quot;  --&gt; Retourne message d&apos;erreur
      rs_return-id         = &apos;ZTASK&apos;.                       &quot;#EC NOTEXT
      rs_return-number     = 601.
      rs_return-message_v1 = lv_clsname.
      rs_return-message_v2 = lv_cmpname.

      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Contrôle les paramètres de la Méthode
    &quot; -----------------------------------------------------------

    &quot; Contrôle les paramètres de la Méthode
    SELECT COUNT( * ) FROM seosubcodf
                     WHERE clsname EQ @lv_clsname
                       AND cmpname EQ @lv_cmpname
                       AND typtype EQ &apos;3&apos;  &quot;Type REF To &quot;#EC NOTEXT
                      INTO @DATA(lv_count).
    IF lv_count GT 0.
      &quot; Au moins un paramètre Référence
      &quot;&quot;  --&gt; Retourne le message
      rs_return-id     = &apos;UBD_REMOTE&apos;.                      &quot;#EC NOTEXT
      rs_return-row    = is_mod_cells-row_id.
      rs_return-type   = gc_display_like.                   &quot;#EC NOTEXT
      rs_return-number = 003.

      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

  ENDMETHOD.

  METHOD handler_data_changed_finished.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------


  ENDMETHOD.

  METHOD handler_double_click.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------

  ENDMETHOD.

  METHOD handler_hotspot_click.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------


  ENDMETHOD.

  METHOD handler_onf4.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_ALV_GENERIC IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_alv_generic IMPLEMENTATION.

  METHOD constructor.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_textid TYPE scx_t100key.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------

    &quot; Initialisation Toolbar
    me-&gt;toolbar_set( ).

    &quot; Initialisation du Layout
    me-&gt;ms_display_element-display_element-s_layout-edit  = abap_true.
    me-&gt;ms_display_element-display_element-s_layout-zebra = abap_true.

    &quot; Création du Custom Container
    CREATE OBJECT me-&gt;ms_display_element-display_element-o_ccontainer
      EXPORTING
        container_name              = iv_container_name
      EXCEPTIONS
        cntl_error                  = 1
        cntl_system_error           = 2
        create_error                = 3
        lifetime_error              = 4
        lifetime_dynpro_dynpro_link = 5
        OTHERS                      = 6.
    IF sy-subrc EQ 0.
      &quot; Création de la Grille ALV
      CREATE OBJECT me-&gt;ms_display_element-display_element-o_alv_grid
        EXPORTING
          i_parent          = me-&gt;ms_display_element-display_element-o_ccontainer
          i_appl_events     = abap_true
        EXCEPTIONS
          error_cntl_create = 1
          error_cntl_init   = 2
          error_cntl_link   = 3
          error_dp_create   = 4
          OTHERS            = 5.

    ENDIF.

    IF sy-subrc NE 0.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Lève une Exception
      ls_textid-msgid = sy-msgid. ls_textid-msgno = sy-msgno.
      ls_textid-attr1 = sy-msgv1. ls_textid-attr2 = sy-msgv2.
      ls_textid-attr3 = sy-msgv3. ls_textid-attr4 = sy-msgv4.
      RAISE EXCEPTION TYPE cx_create_error
        EXPORTING
          textid = ls_textid.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Gestion des évènements
    &quot; -----------------------------------------------------------

    &quot; Création de l&apos;Instance Handler d&apos;Evènement
    CREATE OBJECT me-&gt;ms_display_element-display_element-o_event
      EXPORTING
        io_alv_grid      = me-&gt;ms_display_element-display_element-o_alv_grid
        iot_display_data = me-&gt;ms_display_element-data-t_display_data.

  ENDMETHOD.

  METHOD check.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; ---------------------------------------------------- -------
    &quot; Affichage de l&apos;ALV
    &quot; -----------------------------------------------------------

    &quot; Contrôle les données saisies
    me-&gt;ms_display_element-display_element-o_alv_grid-&gt;check_changed_data(
      IMPORTING
        e_valid = rv_error
    ).

    &quot; Inverse le booléen
    rv_error = boolc( rv_error EQ abap_false ).

  ENDMETHOD.

  METHOD toolbar_set.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Exclusion des Fonctions de la Toolbar
    &quot; -----------------------------------------------------------

    APPEND cl_gui_alv_grid=&gt;mc_fc_sum             TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_info            TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_sort            TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_find            TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_print           TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_graph           TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_check           TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_count           TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_detail          TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_subtot          TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_filter          TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_refresh         TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_refresh         TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_pc_file         TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_call_xxl        TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_sort_asc        TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_sort_dsc        TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_find_more       TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_view_excel      TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_print_prev      TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_print_back      TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_call_report     TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
    APPEND cl_gui_alv_grid=&gt;mc_fc_current_variant TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.

  ENDMETHOD.

  METHOD display.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    IF me-&gt;mv_first_display_done EQ abap_false.
      &quot; -----------------------------------------------------------
      &quot; Initialisation des élèments d&apos;Affichage
      &quot; -----------------------------------------------------------

      me-&gt;display_element_set(
        EXPORTING
          it_fieldcatalog = it_fieldcatalog
        CHANGING
          ct_display_data = ct_display_data
      ).

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Affichage des données
        &quot; -----------------------------------------------------------

        &quot; Affichage de l&apos;ALV
        me-&gt;__display( ).

      CATCH cx_salv_call_after_1st_display INTO DATA(lo_cx_exception).
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Lève l&apos;Exception
        RAISE EXCEPTION TYPE cx_salv_call_after_1st_display
          EXPORTING
            previous = lo_cx_exception.

    ENDTRY.

  ENDMETHOD.

  METHOD __display.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_textid TYPE scx_t100key.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
    FIELD-SYMBOLS :
                   &lt;lfs_t_outtab&gt; TYPE STANDARD TABLE.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Affichage de l&apos;ALV
    &quot; -----------------------------------------------------------

    IF me-&gt;mv_first_display_done EQ abap_false.
      &quot; Premier Affichage
      &quot;&quot;  --&gt; Initialisation pointeur sur données à Afficher
      ASSIGN me-&gt;ms_display_element-data-t_display_data-&gt;* TO &lt;lfs_t_outtab&gt;.
      IF sy-subrc NE 0.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Arrêt du traitement
        RETURN.

      ENDIF.

      &quot;&quot;  --&gt; Affichage de l&apos;ALV
      me-&gt;ms_display_element-display_element-o_alv_grid-&gt;set_table_for_first_display(
        EXPORTING
          is_layout                     = me-&gt;ms_display_element-display_element-s_layout
          it_toolbar_excluding          = me-&gt;ms_display_element-display_element-t_toolbar_excluding
        CHANGING
          it_outtab                     = &lt;lfs_t_outtab&gt;
          it_fieldcatalog               = me-&gt;ms_display_element-display_element-t_fieldcatalog
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4
      ).
      IF sy-subrc NE 0.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Lève une Exception
        ls_textid-msgid = sy-msgid. ls_textid-msgno = sy-msgno.
        ls_textid-attr1 = sy-msgv1. ls_textid-attr2 = sy-msgv2.
        ls_textid-attr3 = sy-msgv3. ls_textid-attr4 = sy-msgv4.
        RAISE EXCEPTION TYPE cx_salv_call_after_1st_display
          EXPORTING
            textid = ls_textid.

      ENDIF.

      &quot;&quot;  --&gt; Initialisation Indicateur First Display fait
      me-&gt;mv_first_display_done = abap_true.

    ENDIF.

    &quot; Active l&apos;édition
    me-&gt;ms_display_element-display_element-o_alv_grid-&gt;set_ready_for_input( 1 ).

  ENDMETHOD.

  METHOD display_element_set.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation du FieldCatalog
    &quot; -----------------------------------------------------------

    IF it_fieldcatalog      IS SUPPLIED
    AND NOT it_fieldcatalog IS INITIAL.
      &quot; FieldCatalog fourni
      &quot;&quot;  --&gt; Utilisation de ce FC
      me-&gt;ms_display_element-display_element-t_fieldcatalog[] = it_fieldcatalog[].

    ELSE.
      &quot; FieldCatalog non fourni
      &quot;&quot;  --&gt; Récupération structure d&apos;affichage
      me-&gt;fieldcatalog_generic_set( ct_display_data ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Initialisation Table
    &quot; -----------------------------------------------------------

    me-&gt;ms_display_element-data-t_display_data = REF #( ct_display_data ).

  ENDMETHOD.

  METHOD fieldcatalog_generic_set.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_fieldcatalog TYPE lvc_s_fcat.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_tabledescr  TYPE REF TO cl_abap_tabledescr,
      lo_structdescr TYPE REF TO cl_abap_structdescr.

***==================================================================***
**                             TRAITEMENT                             **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Sélection des données
    &quot; -----------------------------------------------------------

    lo_tabledescr ?= cl_abap_structdescr=&gt;describe_by_data( it_display_data ).
    lo_structdescr ?= lo_tabledescr-&gt;get_table_line_type( ).

    &quot;&quot;  --&gt; Initialisation du FC
    LOOP AT cl_salv_data_descr=&gt;read_structdescr( lo_structdescr )
        ASSIGNING FIELD-SYMBOL(&lt;lfs_s_dfies&gt;).

      CLEAR : ls_fieldcatalog.

      &quot; Initialisation des données
      MOVE-CORRESPONDING &lt;lfs_s_dfies&gt; TO ls_fieldcatalog.

      &quot; Initialisation de la Position
      ls_fieldcatalog-col_pos = sy-tabix.

      &quot; Ajout de l&apos;entrée
      APPEND ls_fieldcatalog TO me-&gt;ms_display_element-display_element-t_fieldcatalog.

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.</include_source>
   </include>
   <include NAME="LZTASK_WIZARDTOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="200" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ztask_wizard.                    &quot;MESSAGE-ID ..

* wizard system include (do not remove)
INCLUDE &lt;wizard&gt;.

************************************************************************
* Wizard:
*   general data
************************************************************************
DATA:
  g_ok_code      TYPE sy-ucomm,
  g_save_ok_code TYPE sy-ucomm,
  g_error        TYPE sy-input.



************************************************************************
* Userdefined wizard data
************************************************************************
*&amp;WZ_PATTERN_INCLUDE_USER_DATA&amp;

CLASS lcl_alv_generic DEFINITION DEFERRED.
CLASS lcl_alv_handler_generic DEFINITION DEFERRED.

TYPES :
  BEGIN OF ts_alv_display_data_0300,
    funcname TYPE rs38l_fnam,
  END OF   ts_alv_display_data_0300.

TYPES : tt_alv_display_data_0300 TYPE STANDARD TABLE OF ts_alv_display_data_0300
        WITH NON-UNIQUE KEY primary_key COMPONENTS funcname.

TYPES :
  BEGIN OF ts_alv_display_data_0400,
    classname  TYPE seoclsname,
    methodname TYPE seocpdname,
  END OF   ts_alv_display_data_0400.

TYPES : tt_alv_display_data_0400 TYPE STANDARD TABLE OF ts_alv_display_data_0400
        WITH NON-UNIQUE KEY primary_key COMPONENTS classname methodname.

TYPES :
  BEGIN OF ts_alv_container_0300,
    o_alv          TYPE REF TO lcl_alv_generic,
    t_data         TYPE tt_alv_display_data_0300,
    t_fieldcatalog TYPE lvc_t_fcat,
  END OF   ts_alv_container_0300.

TYPES :
  BEGIN OF ts_alv_container_0400,
    o_alv          TYPE REF TO lcl_alv_generic,
    t_data         TYPE tt_alv_display_data_0400,
    t_fieldcatalog TYPE lvc_t_fcat,
  END OF   ts_alv_container_0400.

TYPES :
  BEGIN OF ts_alv_container,
    s_alv_container_0300 TYPE ts_alv_container_0300,
    s_alv_container_0400 TYPE ts_alv_container_0400,
  END OF   ts_alv_container.

TYPES :
  BEGIN OF ts_global_data,
    v_subc              TYPE reposrc-subc,
    v_target_repid_last TYPE sy-repid,
    s_alv_container     TYPE ts_alv_container,
    s_task_wizard_data  TYPE ztec_s_task_wizard_data,
  END OF   ts_global_data.

DATA : gs_global_data TYPE ts_global_data.


CONSTANTS : gc_display_like TYPE sy-msgty VALUE &apos;E&apos;. &quot;#EC NOTEXT</include_source>
   </include>
   <include NAME="LZTASK_WIZARDUSR" VARCL="X" SUBC="I" LEVL="740" RMAND="000" RLOAD="D" LDBNAME="D$S" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LSWZ_WIZARD_TEMPLATEUSR .
*----------------------------------------------------------------------*

*&amp;---------------------------------------------------------------------*
*&amp;      FORM  USR_INITIALIZA_WIZARD_DATA
*&amp;---------------------------------------------------------------------*
*     --&gt; IV_TARGET_REPID       Programme Cadre
*     &lt;-- ES_GLOBAL_DATA        Données Globales
*&amp;---------------------------------------------------------------------*
FORM usr_initialize_wizard_data USING iv_target_repid TYPE sy-repid
                             CHANGING es_global_data  TYPE ts_global_data.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_error TYPE sy-input.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

  CLEAR : es_global_data.

  &quot; -----------------------------------------------------------
  &quot; Initialisation valeur par défaut
  &quot; -----------------------------------------------------------

  &quot; Initialisation Programme Cadre par défaut
  es_global_data-s_task_wizard_data-target_repid = iv_target_repid.
  IF iv_target_repid(1) EQ &apos;Z&apos;.                             &quot;#EC NOTEXT
    &quot; Programme spécifique
    &quot;&quot;  --&gt; Modification des variables dépéndantes du Programme
    SELECT SINGLE subc FROM tadir
                 INNER JOIN reposrc
                         ON reposrc~progname EQ tadir~obj_name
                      WHERE pgmid    EQ &apos;R3TR&apos;              &quot;#EC NOTEXT
                        AND object   EQ &apos;PROG&apos;              &quot;#EC NOTEXT
                        AND obj_name EQ @iv_target_repid
                       INTO @es_global_data-v_subc.

  ENDIF.

  &quot; Sélection du Groupe de Serveur manuel
  es_global_data-s_task_wizard_data-server_user    = abap_true.
  es_global_data-s_task_wizard_data-server_default = abap_false.

  &quot; Initialisation Nombre de Tâche
  es_global_data-s_task_wizard_data-task_max = 5.

  &quot; Initialisation Mode Gestion Include Cadriciel
  es_global_data-s_task_wizard_data-target_selscreen_incl_data-include_create = abap_true.
  es_global_data-s_task_wizard_data-target_selscreen_incl_data-include_change = abap_false.

  &quot; Initialisation Mode Gestion Include Ecran de Sélection
  es_global_data-s_task_wizard_data-target_framework_incl_data-include_create = abap_true.
  es_global_data-s_task_wizard_data-target_framework_incl_data-include_change = abap_false.

  &quot; Initialisation Options Supplémentaires
  es_global_data-s_task_wizard_data-shm_management = abap_true.
  es_global_data-s_task_wizard_data-compress_activ = abap_true.
  es_global_data-s_task_wizard_data-compress_mode-data_compress_line_by_line = abap_true.

  &quot; Initialisation Programme Template
  es_global_data-s_task_wizard_data-task_class_replace  = &apos;LCL_TASK&apos;. &quot;#EC NOTEXT
  es_global_data-s_task_wizard_data-task_template_repid = &apos;ZTASK_TEMPLATE&apos;. &quot;#EC NOTEXT

ENDFORM.                    &quot; USR_INITIALIZE_WIZARD_DATA
*&amp;---------------------------------------------------------------------*
*&amp;      FORM  USR_PROCESS_WIZARD_DATA
*&amp;---------------------------------------------------------------------*
FORM usr_process_wizard_data.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

*** process global data collected by wizard

ENDFORM.                    &quot; USR_PROCESS_WIZARD_DATA

***==================================================================***
**                              0200                                  **
***==================================================================***

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_SET_SUBSCREEN_DATA_0200
*&amp;--------------------------------------------------------------*
FORM usr_set_subscreen_data_0200.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_SET_SUBSCREEN_DATA_0200
*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_GET_SUBSCREEN_DATA_0200
*&amp;--------------------------------------------------------------*
FORM usr_get_subscreen_data_0200.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_GET_SUBSCREEN_DATA_0200
*&amp;--------------------------------------------------------------*
*&amp;      Module  USR_CHECK_CONSISTENCY_0200
*&amp;--------------------------------------------------------------*
MODULE usr_check_consistency_0200 INPUT.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

  &quot; -----------------------------------------------------------
  &quot; Traitement après Action Utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;Action utilisateur
  CASE g_save_ok_code.

    WHEN wizard_command_continue.
      &quot; L&apos;utilisateur appuie sur &quot;Continuer&quot;
      &quot;&quot;  --&gt; Contrôle saisie utilisateur
      PERFORM usr_check_consistency_0200 CHANGING g_error.

    WHEN &apos;SEL_ADD&apos;                                          &quot;#EC NOTEXT
      OR &apos;SEL_INCL_U&apos;.                                      &quot;#EC NOTEXT
      &quot; Ajout des paramètres dans l&apos;Ecran de Sélection
      &quot;&quot;  --&gt; Modification des variables dépéndantes du Programme
      PERFORM target_selscreen_data_set USING gs_global_data-s_task_wizard_data-target_repid
                                     CHANGING g_error.

    WHEN &apos;TASK_INCL_U&apos;.                                     &quot;#EC NOTEXT
      &quot; Utilisation Include Cadriciel
      &quot;&quot;  --&gt; Modification des variables dépéndantes du Programme
      PERFORM target_framework_data_set USING gs_global_data-s_task_wizard_data-target_repid
                                     CHANGING g_error.

    WHEN &apos;SEL_INCL_R&apos;.                                      &quot;#EC NOTEXT
      &quot; Modif. Radio-Boutton Include Ecran de Sélection
      &quot;&quot;  --&gt; Contrôle cohérence sur Include Ecran de Sélection
      PERFORM target_selscreen_incl_check CHANGING g_error.

    WHEN &apos;TASK_INCL_R&apos;.                                     &quot;#EC NOTEXT
      &quot; Modif. Radio-Boutton Include Cadriciel
      &quot;&quot;  --&gt; Contrôle cohérence sur Include Cadriciel
      PERFORM target_framework_incl_check CHANGING g_error.

    WHEN OTHERS.
      &quot; Autres commande
      IF gs_global_data-s_task_wizard_data-target_repid NE gs_global_data-v_target_repid_last.
        &quot; -----------------------------------------------------------
        &quot; Traitement après modification du Programme Cadre
        &quot; -----------------------------------------------------------

        &quot; Modification du Programme Cadre
        &quot;&quot;  --&gt; Contrôle Programme Cadre
        PERFORM target_repid_check USING gs_global_data-s_task_wizard_data-target_repid
                                CHANGING gs_global_data-v_subc
                                         g_error.

        IF g_error IS INITIAL.
          &quot; Modification des variables dépéndantes du Programme
          PERFORM repid_dependent_var_set USING gs_global_data-s_task_wizard_data-target_repid
                                       CHANGING g_error.

        ENDIF.

        &quot;&quot;  --&gt; Modification du dernier Programme Cadre saisie
        gs_global_data-v_target_repid_last = gs_global_data-s_task_wizard_data-target_repid.

      ENDIF.

  ENDCASE.

  &quot; -----------------------------------------------------------
  &quot; Traitement de Fin
  &quot; -----------------------------------------------------------

  IF NOT g_error IS INITIAL.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; ??
    swf_refresh.

  ENDIF.

ENDMODULE.                  &quot; USR_CHECK_CONSISTENCY_0200 INPUT

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_CHECK_CONSISTENCY_0200
*&amp;--------------------------------------------------------------*
FORM usr_check_consistency_0200 CHANGING p_error TYPE sy-input.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

* here we check if all entries on this screen are consistent
* (field checks have to be done on the screen, not here)

* initialize error indicator
  CLEAR: p_error, gs_global_data-v_subc.

  &quot; -----------------------------------------------------------
  &quot; Contrôle saisie utilisateur sur Programme Cadre
  &quot; -----------------------------------------------------------

  &quot; Contrôle Programme Cadre
  PERFORM target_repid_check USING gs_global_data-s_task_wizard_data-target_repid
                          CHANGING gs_global_data-v_subc
                                   p_error.

  IF  p_error IS INITIAL
  AND gs_global_data-s_task_wizard_data-target_selscreen_add EQ abap_true
  AND gs_global_data-s_task_wizard_data-target_selscreen_incl_use EQ abap_true.
    &quot; -----------------------------------------------------------
    &quot; Contrôle cohérence Include Ecran de Sélection
    &quot; -----------------------------------------------------------

    &quot; Contrôle Cohérence Include Ecran de Sélection
    PERFORM target_selscreen_incl_check CHANGING p_error.

  ENDIF.

  IF p_error IS INITIAL
  AND gs_global_data-s_task_wizard_data-target_framework_incl_use EQ abap_true.
    &quot; -----------------------------------------------------------
    &quot; Contrôle cohérence Include Cadriciel
    &quot; -----------------------------------------------------------

    &quot; Contrôle Cohérence Include Cadriciel
    PERFORM target_framework_incl_check CHANGING p_error.

  ENDIF.

  IF p_error IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Contrôle programme Template
    &quot; -----------------------------------------------------------

    &quot; Contrôle existence programme Template
    PERFORM task_template_repid_check USING gs_global_data-s_task_wizard_data-task_template_repid
                                   CHANGING p_error.

  ENDIF.

  IF p_error EQ abap_true.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; Arrêt du traitemtn
    RETURN.

  ENDIF.

ENDFORM.                    &quot; USR_CHECK_CONSISTENCY_0200

***==================================================================***
**                              0300                                  **
***==================================================================***

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_SET_SUBSCREEN_DATA_0300
*&amp;--------------------------------------------------------------*
FORM usr_set_subscreen_data_0300.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_SET_SUBSCREEN_DATA_0300
*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_GET_SUBSCREEN_DATA_0300
*&amp;--------------------------------------------------------------*
FORM usr_get_subscreen_data_0300.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_GET_SUBSCREEN_DATA_0300
*&amp;--------------------------------------------------------------*
*&amp;      Module  USR_CHECK_CONSISTENCY_0300
*&amp;--------------------------------------------------------------*
MODULE usr_check_consistency_0300 INPUT.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

  &quot; -----------------------------------------------------------
  &quot; Traitement après Action Utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;Action utilisateur
  CASE g_save_ok_code.

    WHEN wizard_command_continue.
      &quot; L&apos;utilisateur appuie sur &quot;Continuer&quot;
      &quot;&quot;  --&gt; Contrôle saisie utilisateur
      PERFORM usr_check_consistency_0300 CHANGING g_error.

    WHEN OTHERS.
      &quot; Autres commande

  ENDCASE.

  &quot; -----------------------------------------------------------
  &quot; Traitement de Fin
  &quot; -----------------------------------------------------------

  IF NOT g_error IS INITIAL.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; Reste sur l&apos;écran actuel
    swf_refresh.

  ENDIF.

ENDMODULE.                  &quot; USR_CHECK_CONSISTENCY_0300 INPUT
*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_CHECK_CONSISTENCY_0300
*&amp;--------------------------------------------------------------*
FORM usr_check_consistency_0300 CHANGING p_error TYPE sy-input.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

* here we check if all entries on this screen are consistent
* (field checks have to be done on the screen, not here)

* initialize error indicator
  CLEAR: p_error.

  &quot; -----------------------------------------------------------
  &quot; Contrôle sur les données saisies
  &quot; -----------------------------------------------------------

  p_error = gs_global_data-s_alv_container-s_alv_container_0300-o_alv-&gt;check( ).

ENDFORM.                    &quot; USR_CHECK_CONSISTENCY_0300

***==================================================================***
**                              0400                                  **
***==================================================================***

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_SET_SUBSCREEN_DATA_0400
*&amp;--------------------------------------------------------------*
FORM usr_set_subscreen_data_0400.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_SET_SUBSCREEN_DATA_0400
*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_GET_SUBSCREEN_DATA_0400
*&amp;--------------------------------------------------------------*
FORM usr_get_subscreen_data_0400.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_GET_SUBSCREEN_DATA_0400
*&amp;--------------------------------------------------------------*
*&amp;      Module  USR_CHECK_CONSISTENCY_0400
*&amp;--------------------------------------------------------------*
MODULE usr_check_consistency_0400 INPUT.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

  &quot; -----------------------------------------------------------
  &quot; Traitement après Action Utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;Action utilisateur
  CASE g_save_ok_code.

    WHEN wizard_command_continue.
      &quot; L&apos;utilisateur appuie sur &quot;Continuer&quot;
      &quot;&quot;  --&gt; Contrôle saisie utilisateur
      PERFORM usr_check_consistency_0400 CHANGING g_error.

    WHEN OTHERS.
      &quot; Autres commande

  ENDCASE.

  &quot; -----------------------------------------------------------
  &quot; Traitement de Fin
  &quot; -----------------------------------------------------------

  IF NOT g_error IS INITIAL.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; Reste sur l&apos;écran actuel
    swf_refresh.

  ENDIF.

ENDMODULE.                  &quot; USR_CHECK_CONSISTENCY_0400 INPUT
*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_CHECK_CONSISTENCY_0400
*&amp;--------------------------------------------------------------*
FORM usr_check_consistency_0400 CHANGING p_error TYPE sy-input.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

* here we check if all entries on this screen are consistent
* (field checks have to be done on the screen, not here)

* initialize error indicator
  CLEAR: p_error.

ENDFORM.                    &quot; USR_CHECK_CONSISTENCY_0400

***==================================================================***
**                              0500                                  **
***==================================================================***

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_SET_SUBSCREEN_DATA_0500
*&amp;--------------------------------------------------------------*
FORM usr_set_subscreen_data_0500.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_SET_SUBSCREEN_DATA_0500

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_GET_SUBSCREEN_DATA_0500
*&amp;--------------------------------------------------------------*
FORM usr_get_subscreen_data_0500.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

ENDFORM.                    &quot; USR_GET_SUBSCREEN_DATA_0500

*&amp;--------------------------------------------------------------*
*&amp;      Module  USR_CHECK_CONSISTENCY_0500
*&amp;--------------------------------------------------------------*
MODULE usr_check_consistency_0500 INPUT.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

  &quot; -----------------------------------------------------------
  &quot; Traitement après Action Utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;Action utilisateur
  CASE g_save_ok_code.

    WHEN wizard_command_continue.
      &quot; L&apos;utilisateur appuie sur &quot;Continuer&quot;
      &quot;&quot;  --&gt; Contrôle saisie utilisateur
      PERFORM usr_check_consistency_0500 CHANGING g_error.

    WHEN OTHERS.
      &quot; Autres commande

  ENDCASE.

  &quot; -----------------------------------------------------------
  &quot; Traitement de Fin
  &quot; -----------------------------------------------------------

  IF NOT g_error IS INITIAL.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; Reste sur l&apos;écran actuel
    swf_refresh.

  ENDIF.

ENDMODULE.                  &quot; USR_CHECK_CONSISTENCY_0500 INPUT

*&amp;--------------------------------------------------------------*
*&amp;      Form  USR_CHECK_CONSISTENCY_0500
*&amp;--------------------------------------------------------------*
FORM usr_check_consistency_0500 CHANGING p_error TYPE sy-input.

***===========================================================***
**                       TRAITEMENT                            **
***===========================================================***

* here we check if all entries on this screen are consistent
* (field checks have to be done on the screen, not here)

* initialize error indicator
  CLEAR: p_error.

  IF gs_global_data-s_task_wizard_data-server_user EQ abap_true.
    &quot; Groupe de Serveur choisi manuellement
    &quot;&quot;  --&gt; Contrôle Groupe de Serveur saisie
    PERFORM grfc_check CHANGING p_error.

  ENDIF.

ENDFORM.                    &quot; USR_CHECK_CONSISTENCY_0500

*&amp;---------------------------------------------------------------------*
*&amp;      Form  GRFC_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle Groupe de Serveur
*----------------------------------------------------------------------*
*      &lt;-- EV_ERROR             Erreur
*----------------------------------------------------------------------*
FORM grfc_check CHANGING ev_error TYPE sy-input.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : ev_error.

  IF gs_global_data-s_task_wizard_data-grfc IS INITIAL.
    &quot; Serveur choisi par l&apos;Utilisateur mais non renseigné
    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE i122(b1) DISPLAY LIKE gc_display_like.

    &quot;&quot;  --&gt; Retourne Code en erreur
    ev_error = abap_true.

  ELSE.
    &quot; Contrôle existence et statut du Groupe de Serveur
    SELECT SINGLE classname
             FROM rzllitab
            WHERE classname EQ @gs_global_data-s_task_wizard_data-grfc
             INTO @DATA(lv_classname).
    IF sy-subrc NE 0.
      &quot; Aucune Correspondance
      &quot;&quot;  --&gt; Affiche message d&apos;erreur
      MESSAGE i063(8z) WITH gs_global_data-s_task_wizard_data-grfc DISPLAY LIKE gc_display_like.

      &quot;&quot;  --&gt; Retourne Code en erreur
      ev_error = abap_true.

    ENDIF.

  ENDIF.

ENDFORM.


*&amp;---------------------------------------------------------------------*
*&amp;      Form  TARGET_REPID_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle Programme Cadre
*----------------------------------------------------------------------*
*      --&gt; IV_TARGET_REPID      Programme Cible
*      &lt;-- EV_ERROR             Erreur
*      &lt;-- EV_SUBC              Type de Programme
*----------------------------------------------------------------------*
FORM target_repid_check USING iv_target_repid TYPE sy-repid
                     CHANGING ev_subc         TYPE reposrc-subc
                              ev_error        TYPE sy-input.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_subrc TYPE sy-subrc.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : ev_error, ev_subc.

  &quot; -----------------------------------------------------------
  &quot; Contrôle saisie utilisateur sur Programme Cadre
  &quot; -----------------------------------------------------------

  IF |{ iv_target_repid(1) CASE = UPPER }| NE &apos;Z&apos;.          &quot;#EC NOTEXT
    &quot; Pas un programme spécifique
    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE i074(bt) WITH iv_target_repid DISPLAY LIKE gc_display_like. &quot;#EC NOTEXT

    &quot;&quot;  --&gt; Initialisation code retour en erreur
    ev_error = abap_true.

    &quot;&quot; --&gt; Arrêt du traitement
    RETURN.

  ELSE.
    &quot; Programme spécifique
    &quot;&quot;  --&gt; Contrôle existence
    SELECT SINGLE subc FROM tadir
                 INNER JOIN reposrc
                         ON reposrc~progname EQ tadir~obj_name
                      WHERE pgmid    EQ &apos;R3TR&apos;              &quot;#EC NOTEXT
                        AND object   EQ &apos;PROG&apos;              &quot;#EC NOTEXT
                        AND obj_name EQ @iv_target_repid
                       INTO @ev_subc.
    IF sy-subrc NE 0.
      &quot; Programme inexistant
      &quot;&quot;  --&gt; Affiche message d&apos;erreur
      MESSAGE i541(00) WITH iv_target_repid DISPLAY LIKE gc_display_like. &quot;#EC NOTEXT

      &quot;&quot;  --&gt; Initialisation code retour en erreur
      ev_error = abap_true.

      &quot;&quot; --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

    IF iv_target_repid EQ gs_global_data-s_task_wizard_data-task_template_repid.
      &quot; Programme Cadre = Template Cadriciel
      &quot;&quot;  --&gt; Affiche message d&apos;erreur
      MESSAGE i604(ztask) DISPLAY LIKE gc_display_like.

      &quot;&quot;  --&gt; Initialisation code retour en erreur
      ev_error = abap_true.

      &quot;&quot; --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

  ENDIF.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  TASK_TEMPLATE_REPID_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle saisie Programme Template
*----------------------------------------------------------------------*
*      --&gt; IV_TASK_TEMPLATE_REPID   Programme contenant le Template
*      &lt;-- EV_ERROR                 Erreur ?
*----------------------------------------------------------------------*
FORM task_template_repid_check USING iv_task_template_repid TYPE sy-repid
                            CHANGING ev_error               TYPE sy-input.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : ev_error.

  &quot; -----------------------------------------------------------
  &quot; Contrôle programme Template
  &quot; -----------------------------------------------------------

  &quot; Contrôle existence programme Template
  SELECT SINGLE obj_name FROM tadir
                        WHERE pgmid    EQ &apos;R3TR&apos;            &quot;#EC NOTEXT
                          AND object   EQ &apos;PROG&apos;            &quot;#EC NOTEXT
                          AND obj_name EQ @iv_task_template_repid
                         INTO @DATA(lv_obj_name).
  IF sy-subrc NE 0.
    &quot; Programme inexistant
    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE a541(00) WITH iv_task_template_repid.    &quot;Aborted

    &quot;&quot;  --&gt; Initialisation code retour en erreur
    ev_error = abap_true.

  ENDIF.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  TARGET_SELSCREEN_DATA_SET
*&amp;---------------------------------------------------------------------*
*       Modification des données liées à l&apos;Include Ecran de Sélection
*----------------------------------------------------------------------*
*      --&gt; IV_TARGET_REPID      Programme Cadre
*      &lt;-- EV_ERROR             Erreur ?
*----------------------------------------------------------------------*
FORM target_selscreen_data_set USING iv_target_repid TYPE sy-repid
                            CHANGING ev_error        TYPE sy-input.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_subc      TYPE reposrc-subc,
    lv_iteration TYPE numc2.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF gs_global_data-s_task_wizard_data-target_selscreen_add EQ abap_false.
    &quot; Pas d&apos;Ajout Ecran de Sélection
    &quot;&quot;  --&gt; Réinitialisation données liées
    CLEAR : gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name,
            gs_global_data-s_task_wizard_data-target_selscreen_incl_use.

  ELSEIF gs_global_data-s_task_wizard_data-target_selscreen_incl_use EQ abap_false.
    &quot; Pas d&apos;Utilisation d&apos;Include
    &quot;&quot;  --&gt; Réinitialisation données liées
    CLEAR : gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name.

  ELSE.
    &quot; Utilisation d&apos;Include
    IF gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_create EQ abap_true.
      &quot;&quot;  --&gt; Récupération Nombre d&apos;Itération d&apos;Include Ecran de Sélection
      DATA(lv_progname) = |{ iv_target_repid }_SEL%|.       &quot;#EC NOTEXT
      SELECT COUNT( * ) FROM reposrc WHERE progname LIKE @lv_progname
                                      INTO @DATA(lv_count).
      IF sy-subrc NE 0.
        &quot; Include inexistant
        &quot;&quot;  --&gt; Initialisation Nom par défaut
        lv_progname = |{ iv_target_repid }_SEL|.            &quot;#EC NOTEXT

      ELSE.
        &quot; Include Existant
        &quot;&quot;  --&gt; Initialisation Nom Incrémenter
        lv_iteration = lv_count + 1.
        lv_progname  = |{ iv_target_repid }_SEL{ lv_iteration WIDTH = 2 }|.        &quot;#EC NOTEXT

      ENDIF.

      &quot; Initialisation Nom de l&apos;Include à utiliser
      gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name = lv_progname.

      IF strlen( gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name ) GT 30.
        &quot; Nom généré supérieur à la limite standard
        &quot;&quot;  --&gt; Tronque la racine du Programme
        gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name =
          |{ iv_target_repid(24) }_SEL{ lv_iteration WIDTH = 2 }|. &quot;#EC NOTEXT

      ENDIF.

      &quot;&quot;  --&gt; Contrôle Nom du Programme généré
      PERFORM repid_name_check USING gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name
                            CHANGING ev_error.

    ELSE.
      &quot; Utilisation Include existant
      &quot;&quot;  --&gt; Contrôle existence de l&apos;Include
      PERFORM target_repid_check USING gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name
                              CHANGING lv_subc
                                       ev_error.

    ENDIF.

  ENDIF.

ENDFORM.


*&amp;---------------------------------------------------------------------*
*&amp;      Form  TARGET_FRAMEWORK_DATA_SET
*&amp;---------------------------------------------------------------------*
*       Modification des données liées à l&apos;Include Cadriciel
*----------------------------------------------------------------------*
*      --&gt; IV_TARGET_REPID      Programme Cadre
*      &lt;-- EV_ERROR             Erreur ?
*----------------------------------------------------------------------*
FORM target_framework_data_set USING iv_target_repid TYPE sy-repid
                            CHANGING ev_error        TYPE sy-input.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_subc      TYPE reposrc-subc,
    lv_iteration TYPE numc2.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Gestion de l&apos;Include Cadriciel
  &quot; -----------------------------------------------------------

  IF gs_global_data-s_task_wizard_data-target_framework_incl_use EQ abap_false.
    &quot; Pas d&apos;utilisation d&apos;Include
    &quot;&quot;  --&gt; Réinitialisation données liées
    CLEAR : gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name.

  ELSE.
    &quot; Utilisation d&apos;Include
    IF gs_global_data-s_task_wizard_data-target_framework_incl_data-include_create EQ abap_true.
      &quot; Création d&apos;Include
      &quot;&quot;  --&gt; Récupération Nombre d&apos;Itération d&apos;Include Classe
      DATA(lv_progname) = |{ iv_target_repid }_C%|.         &quot;#EC NOTEXT
      SELECT COUNT( * ) FROM reposrc WHERE progname LIKE @lv_progname
                                      INTO @DATA(lv_count).

      &quot;&quot;  --&gt; Incrément du numéro d&apos;Include
      lv_iteration = lv_count + 1.

      &quot;&quot;  --&gt; Modification Nom par défaut nouvel Include
      gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name =
        |{ iv_target_repid }_C{ lv_iteration WIDTH = 2 }|.  &quot;#EC NOTEXT
      IF strlen( gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name ) GT 30.
        &quot; Nom généré supérieur à la limite standard
        &quot;&quot;  --&gt; Tronque la racine du Programme
        gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name =
           |{ iv_target_repid(26) }_C{ lv_iteration WIDTH = 2 }|. &quot;#EC NOTEXT

      ENDIF.

      &quot;&quot;  --&gt; Contrôle Nom du Programme généré
      PERFORM repid_name_check USING gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name
                            CHANGING ev_error.

    ELSE.
      &quot; Utilisation Include existant
      &quot;&quot;  --&gt; Contrôle existence de l&apos;Include
      PERFORM target_repid_check USING gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name
                              CHANGING lv_subc
                                       ev_error.

    ENDIF.

  ENDIF.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  TARGET_FRAMEWORK_INCL_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle données liées à l&apos;Include Cadriciel
*----------------------------------------------------------------------*
*      &lt;-- EV_ERROR             Erreur ?
*----------------------------------------------------------------------*
FORM target_framework_incl_check CHANGING ev_error TYPE sy-input.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : ev_error.

  &quot; -----------------------------------------------------------
  &quot; Contrôle Include Cadriciel
  &quot; -----------------------------------------------------------

  IF gs_global_data-s_task_wizard_data-target_framework_incl_use EQ abap_true
  AND gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name
      IS INITIAL.
    &quot; Include à utiliser mais non renseigné
    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE i607(ztask) DISPLAY LIKE gc_display_like.       &quot;#EC NOTEXT

  ENDIF.

  &quot; Contrôle Cohérence Include Cadriciel
  PERFORM target_incl_check USING gs_global_data-s_task_wizard_data-target_framework_incl_data
                         CHANGING ev_error.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  TARGET_SELSCREEN_INCL_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle données liées à l&apos;Include Cadriciel
*----------------------------------------------------------------------*
*      &lt;-- EV_ERROR             Erreur ?
*----------------------------------------------------------------------*
FORM target_selscreen_incl_check CHANGING ev_error TYPE sy-input.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : ev_error.

  &quot; -----------------------------------------------------------
  &quot; Contrôle Include Ecran de Sélection
  &quot; -----------------------------------------------------------

  IF gs_global_data-s_task_wizard_data-target_selscreen_incl_use EQ abap_true
  AND gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name
      IS INITIAL.
    &quot; Include à utiliser mais non renseigné
    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE i607(ztask) DISPLAY LIKE gc_display_like.       &quot;#EC NOTEXT

    &quot;&quot;  --&gt; Initialisation code retour en erreur
    ev_error = abap_true.

  ENDIF.

  &quot; Contrôle Cohérence Include Ecran de Sélection
  PERFORM target_incl_check USING gs_global_data-s_task_wizard_data-target_selscreen_incl_data
                         CHANGING ev_error.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  TARGET_INCL_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle cohérence de l&apos;Include
*----------------------------------------------------------------------*
*      &lt;-- EV_ERROR             Erreur ?
*----------------------------------------------------------------------*
FORM target_incl_check USING is_include_data TYPE ztec_s_task_wizard_incl
                    CHANGING ev_error   TYPE sy-input.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : ev_error.

  &quot; -----------------------------------------------------------
  &quot; Contrôle Include
  &quot; -----------------------------------------------------------

  IF is_include_data-include_name IS INITIAL.
    &quot; Pas de programme
    &quot;&quot;  --&gt; Arrêt du traitement
    RETURN.

  ELSEIF is_include_data-include_name(1) NE &apos;Z&apos;.            &quot;#EC NOTEXT
    &quot; Include non spécifique
    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE i074(bt) WITH is_include_data-include_name DISPLAY LIKE gc_display_like. &quot;#EC NOTEXT

    &quot;&quot;  --&gt; Initialisation code retour en erreur
    ev_error = abap_true.

    &quot;&quot;  --&gt; Arrêt du traitement
    RETURN.

  ENDIF.

  &quot; Recherche présence de l&apos;Include en DB
  SELECT SINGLE progname FROM reposrc
                        WHERE progname EQ @is_include_data-include_name
                         INTO @DATA(lv_progname).

  IF is_include_data-include_create EQ abap_true.
    &quot; Création de l&apos;Include
    IF NOT lv_progname IS INITIAL.
      &quot; L&apos;Include existe déjà
      &quot;&quot;  --&gt; Affiche message d&apos;erreur
      MESSAGE i608(ztask) WITH lv_progname DISPLAY LIKE gc_display_like. &quot;#EC NOTEXT

      &quot;&quot;  --&gt; Initialisation code retour en erreur
      ev_error = abap_true.

      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

  ELSE.
    &quot; Ajout de l&apos;Include
    IF lv_progname IS INITIAL.
      &quot; L&apos;include n&apos;existe pas
      &quot;&quot;  --&gt; Affiche message d&apos;erreur
      MESSAGE i609(ztask) WITH is_include_data-include_name DISPLAY LIKE gc_display_like. &quot;#EC NOTEXT

      &quot;&quot;  --&gt; Initialisation code retour en erreur
      ev_error = abap_true.

      &quot;&quot;  --&gt; Arrêt du traitement
      RETURN.

    ENDIF.

  ENDIF.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  REPID_DEPENDENT_VAR_SET
*&amp;---------------------------------------------------------------------*
*       Modification des variables dépendantes du Programme Cadre
*----------------------------------------------------------------------*
*      --&gt; IV_TARGET_REPID      Programme Cadre
*      &lt;-- EV_ERROR             Erreur ?
*----------------------------------------------------------------------*
FORM repid_dependent_var_set USING iv_target_repid TYPE sy-repid
                          CHANGING ev_error        TYPE sy-input.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_progname  TYPE reposrc-progname,
    lv_iteration TYPE numc2.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR :
    gs_global_data-s_task_wizard_data-target_framework_incl_data-include_name,
    gs_global_data-s_task_wizard_data-target_selscreen_incl_data-include_name,
    ev_error.

  &quot; -----------------------------------------------------------
  &quot; Gestion de l&apos;Include Cadriciel
  &quot; -----------------------------------------------------------

  &quot; Initialisation données Include Cadriciel
  PERFORM target_framework_data_set USING iv_target_repid
                                 CHANGING ev_error.

  &quot; -----------------------------------------------------------
  &quot; Gestion de l&apos;Include Ecran de Sélection
  &quot; -----------------------------------------------------------

  &quot; Initialisation données Include Ecran de Sélection
  PERFORM target_selscreen_data_set USING iv_target_repid
                                 CHANGING ev_error.

ENDFORM.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  REPID_NAME_CHECK
*&amp;---------------------------------------------------------------------*
*       Contrôle Programme
*----------------------------------------------------------------------*
*      --&gt; IV_REPID     Programme à contrôler
*      &lt;-- EV_ERROR     Erreur ?
*----------------------------------------------------------------------*
FORM repid_name_check USING iv_repid TYPE sy-repid
                   CHANGING ev_error TYPE sy-input.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Contrôle Nom du Programme
  &quot; -----------------------------------------------------------

  &quot; Contrôle Nom Programme spécifié
  CALL FUNCTION &apos;RS_PROGRAM_CHECK_NAME&apos;
    EXPORTING
      check_string_only            = abap_true
      progname                     = iv_repid
    EXCEPTIONS
      database                     = 1
      database_selections          = 2
      function_group               = 3
      function_include             = 4
      no_customer_function_group   = 5
      no_customer_function_include = 6
      reserved_name                = 7
      reserved_name_customer       = 8
      string_error                 = 9
      string_warning               = 10
      string_length_error          = 11
      types_program                = 12
      reserved_name_menu           = 13
      OTHERS                       = 14.
  IF sy-subrc NE 0.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; Retourne Code d&apos;erreur
    ev_error = boolc( NOT sy-subrc IS INITIAL ). &quot;Vrai si Erreur surveue

    &quot;&quot;  --&gt; Affiche message d&apos;erreur
    MESSAGE ID sy-msgid TYPE &apos;W&apos; NUMBER sy-msgno            &quot;#EC NOTEXT
                                   WITH sy-msgv1 sy-msgv2
                                        sy-msgv3 sy-msgv4
                                DISPLAY LIKE gc_display_like. &quot;#EC NOTEXT

  ENDIF.

ENDFORM.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="WZ_ZTASK_WIZARD_START" STEXT="Start Wizard">
    <importing PARAMETER="IV_REPID_DEFAULT" OPTIONAL="X" TYP="SY-REPID"/>
    <exporting PARAMETER="ES_TASK_WIZARD_DATA" REFERENCE="X" TYP="ZTEC_S_TASK_WIZARD_DATA"/>
    <exceptions EXCEPTION="CANCELLED_BY_USER"/>
    <exceptions EXCEPTION="ERROR"/>
    <documentation PARAMETER="IV_REPID_DEFAULT" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="ES_TASK_WIZARD_DATA" KIND="P" STEXT="Tâche - Données Assistant" INDEX=" 002"/>
    <documentation PARAMETER="CANCELLED_BY_USER" KIND="X" INDEX=" 003"/>
    <documentation PARAMETER="ERROR" KIND="X" STEXT="Error occurred while performing wizard transactions" INDEX=" 004"/>
    <fm_source>***------------------------------------------------------------------***
**                             INCLUDE                                **
***------------------------------------------------------------------***

*----------------- do not remove this include --------------------------
  INCLUDE &lt;sbpt_wizard&gt;.
*----------------- do not remove this include --------------------------

* begin of local data definition
  DATA:
    l_wizard_steps TYPE STANDARD TABLE OF swf_wizdef,
    l_subrc        TYPE sy-subrc.
* end of local data definition

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_task_wizard_data.
  CLEAR : gs_global_data.

  &quot; -----------------------------------------------------------
  &quot; Initialisation des Etapes
  &quot; -----------------------------------------------------------

  &quot; Initialisation des Etapes de traitement
  PERFORM wz_define_wizard_steps TABLES l_wizard_steps.

  &quot; -----------------------------------------------------------
  &quot; Initialisation des données
  &quot; -----------------------------------------------------------

  &quot; Initialisation des données
  PERFORM usr_initialize_wizard_data USING iv_repid_default
                                  CHANGING gs_global_data.

  &quot; -----------------------------------------------------------
  &quot; Déroulement des Etapes
  &quot; -----------------------------------------------------------

  &quot; Déroulement des Etapes
  PERFORM wz_wizard_process TABLES l_wizard_steps
                          CHANGING l_subrc.

  &quot; Suivant le code retour
  CASE l_subrc.

    WHEN 0.
      &quot; Fin de l&apos;utilisation
      &quot;&quot;  --&gt; Initialisation données de sortie
      PERFORM usr_wizard_return_data_set CHANGING es_task_wizard_data.

    WHEN 1.
      &quot; Interruption
      MESSAGE ID sy-msgid TYPE &apos;I&apos; NUMBER sy-msgno          &quot;#EC NOTEXT
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
              RAISING cancelled_by_user.
    WHEN 2.
      &quot; Une erreur est survenue
      MESSAGE ID sy-msgid TYPE &apos;I&apos; NUMBER sy-msgno          &quot;#EC NOTEXT
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
              RAISING error.

  ENDCASE.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <PROG NAME="ZTASK_TEMPLATE" VARCL="X" SUBC="I" RSTAT="T" RMAND="200" RLOAD="F" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="R" ENTRY="Tâche - Template" LENGTH="16 "/>
   </language>
  </textPool>
  <source>&quot;#ANCHOR-WIZARD_SIGN-INCLUDE-BEG#
*----------------------------------------------------------------------*
*   Include généré à partir de l&apos;Assistant
*   Le #DATUM#, par #UNAME#
*   Include a été généré avec l&apos;assistant de création
*   de parallélisation.
*----------------------------------------------------------------------*
&quot;#ANCHOR-WIZARD_SIGN-INCLUDE-END#
&quot;#ANCHOR-TASK_TEMPLATE-BEG#
*----------------------------------------------------------------------*
*       CLASS LCL_TASK_TEMPLATE DEFINIION
*----------------------------------------------------------------------*
*   Classe générée à partir de l&apos;Assistant
*   Le #DATUM#, par #UNAME#
*   Cette classe a été générée avec l&apos;assistant de création
*   de parallélisation.
*----------------------------------------------------------------------*
CLASS lcl_task_template DEFINITION FINAL CREATE PRIVATE.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-DEF-BEG#
    &quot; Modification Ecran de Sélection
    CLASS-METHODS at_selection_screen_output.
    &quot;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-DEF-END#

    &quot; Création Instance
    CLASS-METHODS factory
      RETURNING VALUE(ro_task) TYPE REF TO lcl_task_template
      RAISING   zcx_task_manager.

    &quot; Tâche - Lancement d&apos;une nouvelle Tâche
    METHODS task_start_new
      IMPORTING
        !is_task_call_process      TYPE ztec_s_task_call_process OPTIONAL
        !is_task_configuration     TYPE zcl_task_manager=&gt;ts_task_process_configuration OPTIONAL
        !io_task_container         TYPE REF TO zcl_task_container OPTIONAL
        !iv_overload_compress_conf TYPE xsdboolean OPTIONAL
      RAISING
        zcx_task_manager .

    &quot; Tâche - Traitement de fin
    METHODS task_finish_running.

    &quot; Container - Création
    METHODS task_container_get
      RETURNING VALUE(ro_task_container) TYPE REF TO zcl_task_container.

    &quot; Handler - Evènement Fin d&apos;une Tâche
    METHODS at_eot                                          &quot;#EC CALLED
      IMPORTING
        !is_task_call_process TYPE ztec_s_task_call_process
        !it_result            TYPE zif_task_constant=&gt;tt_function_parameters OPTIONAL
        !it_attached_data     TYPE zif_task_constant=&gt;tt_task_attached_data OPTIONAL
        !iv_error             TYPE xsdboolean OPTIONAL.

    &quot; Handler - Evènement Traitement avant début de lancement d&apos;une Tâche
    METHODS before_task                                     &quot;#EC CALLED
      IMPORTING
        !is_task_call_process TYPE ztec_s_task_call_process
        !io_task_container    TYPE REF TO zcl_task_container OPTIONAL.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs


*-- Privée
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   Déclaration de type

    TYPES :
      BEGIN OF ts_selection_criteria,
        parallel_activ       TYPE xsdboolean,
        server_default       TYPE xsdboolean,
        server_user          TYPE bdfields-rfcgr,
        task_number          TYPE int4,
        task_trace           TYPE xsdboolean,
        task_manage_shm      TYPE xsdboolean,
        task_compress_activ  TYPE xsdboolean,
        task_compress_line   TYPE xsdboolean,
        task_compress_global TYPE xsdboolean,
      END OF   ts_selection_criteria.

***------------------------------------------------------------------***
**                           MÉTHODES                                 **
***------------------------------------------------------------------***

*	Déclaration de méthodes

    &quot; Constructeur
    METHODS constructor
      RAISING
        zcx_task_manager.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	Déclaration d&apos;attributs

    DATA : mo_task_manager TYPE REF TO zcl_task_manager.
    DATA : ms_selection_criteria TYPE ts_selection_criteria.

ENDCLASS.             &quot;LCL_TASK_TEMPLATE DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_TASK_TEMPLATE IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_task_template IMPLEMENTATION.

  &quot;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-IMPL-BEG#
  METHOD at_selection_screen_output.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Sélection des données
    &quot; -----------------------------------------------------------

    LOOP AT SCREEN.

      &quot; Suivant le Groupe d&apos;élèment
      CASE screen-group1.

        WHEN &apos;ALL&apos;.                                         &quot;#EC NOTEXT
          &quot; Groupe &apos;TOUS&apos;
          &quot;&quot;  --&gt; (Dés)Active les paramètres de configuration de la parallélisation
          screen-input = SWITCH int1( p_tact
            WHEN abap_true THEN 1   &quot;Active la saisie  // Activation Parallélisation
            ELSE 0                  &quot;Désactive la saisie
          ).

          &quot; Suivant le Paramètre
          CASE screen-name.

            WHEN &apos;P_GRFC&apos;.                                  &quot;#EC NOTEXT
              &quot; Groupe de Serveur
              &quot;&quot;  --&gt; (Dés)Active la saisie de la zone Groupe de Serveur
              screen-input = SWITCH int1( boolc( p_tact EQ abap_true AND p_grfc_r EQ abap_true )
                WHEN abap_true THEN 1 &quot;Active la saisie  // Activation Parallélisation &amp; Groupe de Serveur spécifique
                ELSE 0                &quot;Désactive la saisie
              ).

            WHEN &apos;P_TCOMPL&apos;                                 &quot;#EC NOTEXT
              OR &apos;P_TCOMPG&apos;.                                &quot;#EC NOTEXT
              &quot; Méthode de Compression
              &quot;&quot;  --&gt; (Dés)Active la saisie de la Méthode de Compression
              screen-input = SWITCH int1( boolc( p_tact EQ abap_true AND p_tcomp EQ abap_true )
                WHEN abap_true THEN 1 &quot;Active la saisie  // Activation Parallélisation &amp; Compression Active
                ELSE 0                &quot;Désactive la saisie
              ).

            WHEN OTHERS.
              &quot; Autre

          ENDCASE.

        WHEN OTHERS.
          &quot; Autres
          &quot;&quot;  --&gt; Passe à l&apos;Itération Suivante
          CONTINUE.

      ENDCASE.

      MODIFY SCREEN.

    ENDLOOP.

  ENDMETHOD.
  &quot;#ANCHOR-AT_SELECTION_SCREEN_OUTPUT-IMPL-END#

  METHOD factory.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Création instance Manager de Tâche
        &quot; -----------------------------------------------------------

        &quot; Création instance du Manager de Tâche
        CREATE OBJECT ro_task.

      CATCH zcx_task_manager INTO DATA(lo_cx_exception).
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Lève l&apos;Exception
        RAISE EXCEPTION TYPE zcx_task_manager
          EXPORTING
            previous = lo_cx_exception.

    ENDTRY.

  ENDMETHOD.

  METHOD constructor.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_task_manager_configuration TYPE zcl_task_manager=&gt;ts_task_manager_configuration.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation paramètre de configuration
    &quot; -----------------------------------------------------------

    &quot; Initialisation données relatives aux ressources de parallélisation
    ls_task_manager_configuration-grfc               = #grfc#.
    ls_task_manager_configuration-task_max           = #task_max#.
    ls_task_manager_configuration-use_server_default = #use_server_default#.

    &quot; Initialisation données relatives aux traitements - Fin d&apos;une Tâche
    ls_task_manager_configuration-global_configuration-process_by_method-after-instance = me.
    ls_task_manager_configuration-global_configuration-process_by_method-after-method   = &apos;AT_EOT&apos;. &quot;#EC NOTEXT

    &quot; Initialisation données relatives aux traitements - Avant lancement d&apos;une Tâche
    ls_task_manager_configuration-global_configuration-process_by_method-before-instance = me.
    ls_task_manager_configuration-global_configuration-process_by_method-before-method   = &apos;BEFORE_TASK&apos;. &quot;#EC NOTEXT

    &quot; Initialisation données relatives à la configuration
    ls_task_manager_configuration-global_configuration-shm_management = #shm_management#.
    ls_task_manager_configuration-global_configuration-task_compress_activ = #compress_activ#.
    ls_task_manager_configuration-global_configuration-task_compress_param-data_compress_global       = #compress_g#.
    ls_task_manager_configuration-global_configuration-task_compress_param-data_compress_line_by_line = #compress_l#.

    &quot; Initialisation données relatives aux traces
    ls_task_manager_configuration-global_configuration-task_trace_param-trace_active = #task_trace#.
    ls_task_manager_configuration-global_configuration-task_trace_param-trace_memory = #task_trace#.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Création du Manager de Tâche
        &quot; -----------------------------------------------------------

        &quot; Création de l&apos;instance du Manager de Tâche
        CREATE OBJECT me-&gt;mo_task_manager
          EXPORTING
            is_task_manager_configuration = ls_task_manager_configuration.

      CATCH zcx_task_manager INTO DATA(lo_cx_exception).
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Lève une Exception
        RAISE EXCEPTION TYPE zcx_task_manager
          EXPORTING
            previous = lo_cx_exception.

    ENDTRY.

  ENDMETHOD.

  METHOD task_start_new.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Lancement d&apos;une Nouvelle Tâche
        &quot; -----------------------------------------------------------

        &quot; Lancement d&apos;une Tâche
        me-&gt;mo_task_manager-&gt;task_start_new(
            is_task_call_process      = is_task_call_process
            is_task_configuration     = is_task_configuration
            io_task_container         = io_task_container
            iv_overload_compress_conf = iv_overload_compress_conf
        ).

      CATCH zcx_task_manager INTO DATA(lo_cx_exception).
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Lève une Exception
        RAISE EXCEPTION TYPE zcx_task_manager
          EXPORTING
            previous = lo_cx_exception.

    ENDTRY.

  ENDMETHOD.

  METHOD task_finish_running.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Attente fin de toutes les Tâches
    &quot; -----------------------------------------------------------

    &quot; Traitement de Fin
    me-&gt;mo_task_manager-&gt;task_finish_running( ).

  ENDMETHOD.

  METHOD task_container_get.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Création instance Container de données
    &quot; -----------------------------------------------------------

    &quot; Création Container
    ro_task_container = me-&gt;mo_task_manager-&gt;container_task_create( ).

  ENDMETHOD.

  METHOD at_eot.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
    FIELD-SYMBOLS :
      &lt;lfs_value&gt;           TYPE any,
      &lt;lfs_t_value&gt;         TYPE ANY TABLE,
      &lt;lfs_s_result&gt;        TYPE zif_task_constant=&gt;ts_function_parameters,
      &lt;lfs_s_attached_data&gt; TYPE zif_task_constant=&gt;ts_task_attached_data.

***==================================================================***
**                           TRAITEMENT                               **

***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Traitement Présence d&apos;Erreur
    &quot; -----------------------------------------------------------

    IF iv_error EQ abap_true.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Récupération de l&apos;erreur
      ASSIGN it_result[ parameter_name = zif_task_constant=&gt;mc_parameter_name_error ]
          TO &lt;lfs_s_result&gt;.                                &quot;#EC NOTEXT

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Traitement Fin d&apos;une Tâche
    &quot; -----------------------------------------------------------

    &quot;#ANCHOR-AT_EOT#
  ENDMETHOD.

  METHOD before_task.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Traitement Avant Lancement de la Tâche
    &quot; -----------------------------------------------------------

    &quot;#ANCHOR-BEFORE_TASK#
  ENDMETHOD.

ENDCLASS.   &quot;ENDCLASS LCL_TASK_TEMPLATE
&quot;#ANCHOR-TASK_TEMPLATE-END#

&quot;#ANCHOR-SELECTION-SCREEN-BEG#
&quot; -----------------------------------------------------------
&quot; Paramètres Parallélisation
&quot; -----------------------------------------------------------

SELECTION-SCREEN BEGIN OF BLOCK ta WITH FRAME TITLE text-ta1.

&quot; Activation Parallélisation
PARAMETERS : p_tact AS CHECKBOX USER-COMMAND tu1.

&quot; -----------------------------------------------------------
&quot; Configuration Paraléllisation
&quot; -----------------------------------------------------------

SELECTION-SCREEN BEGIN OF BLOCK tc WITH FRAME TITLE text-tc1.

&quot; Groupe de Serveur
PARAMETERS : p_grfc_r RADIOBUTTON GROUP rfc USER-COMMAND rfc MODIF ID all #p_grfc_r_default#. &quot;#EC NOTEXT
PARAMETERS : p_grfc TYPE bdfields-rfcgr MODIF ID all #p_grfc_default#. &quot;#EC NOTEXT

&quot; Utilisation Groupe par défaut
PARAMETERS : p_dgrfc RADIOBUTTON GROUP rfc MODIF ID all #p_dgrfc_default#. &quot;#EC NOTEXT

SELECTION-SCREEN END OF BLOCK tc.

SELECTION-SCREEN SKIP 1.

&quot; Nombre de Tâche
PARAMETERS : p_ntask TYPE int4 MODIF ID all OBLIGATORY #p_ntask_default#. &quot;#EC NOTEXT

SELECTION-SCREEN SKIP 1.

&quot; -----------------------------------------------------------
&quot; Options supplémentaires
&quot; -----------------------------------------------------------

SELECTION-SCREEN BEGIN OF BLOCK tb WITH FRAME TITLE text-tb1.

&quot; -----------------------------------------------------------
&quot; Méthode de Compression
&quot; -----------------------------------------------------------

SELECTION-SCREEN BEGIN OF BLOCK toc WITH FRAME TITLE text-toc.

&quot; Activation de la Compression
PARAMETERS : p_tcomp AS CHECKBOX USER-COMMAND toc MODIF ID all #p_tcomp_default#. &quot;#EC NOTEXT

&quot; Méthode de Compression
SELECTION-SCREEN BEGIN OF LINE.

&quot; Compression Ligne-à-Ligne
SELECTION-SCREEN COMMENT 1(24) FOR FIELD p_tcompl.
PARAMETERS : p_tcompl RADIOBUTTON GROUP roc USER-COMMAND roc MODIF ID all #p_tcompl_default#. &quot;#EC NOTEXT

&quot; Compression Global
SELECTION-SCREEN COMMENT 35(18) FOR FIELD p_tcompg.
PARAMETERS : p_tcompg RADIOBUTTON GROUP roc MODIF ID all #p_tcompg_default#. &quot;#EC NOTEXT

SELECTION-SCREEN   END OF LINE.

SELECTION-SCREEN END OF BLOCK toc.

&quot; Trace
PARAMETERS : p_ttrace AS CHECKBOX USER-COMMAND tu4 MODIF ID all #p_ttrace_default#. &quot;#EC NOTEXT

&quot; Purge de la SHM
PARAMETERS : p_tshm AS CHECKBOX USER-COMMAND tu2 MODIF ID all #p_tshm_default#. &quot;#EC NOTEXT

SELECTION-SCREEN END OF BLOCK tb.

SELECTION-SCREEN END OF BLOCK ta.
&quot;#ANCHOR-SELECTION-SCREEN-END#</source>
 </PROG>
 <TABL TABNAME="ZTEC_S_TASK_WIZARD_INCL" DDLANGUAGE="F" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Tâche - Données Assistant - Pour Gestion Include" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_INCL" FIELDNAME="INCLUDE_NAME" DDLANGUAGE="F" POSITION="0001" ROLLNAME="PROGNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="PROGNAME" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom du programme ABAP" REPTEXT="Progr." SCRTEXT_S="Program." SCRTEXT_M="Nom de progr" SCRTEXT_L="Programme" DOMNAME3L="PROGNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_INCL" FIELDNAME="INCLUDE_CREATE" DDLANGUAGE="F" POSITION="0002" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_INCL" FIELDNAME="INCLUDE_CHANGE" DDLANGUAGE="F" POSITION="0003" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_S_TASK_WIZARD_DATA" DDLANGUAGE="F" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Tâche - Données Assistant" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="GRFC" DDLANGUAGE="F" POSITION="0001" ROLLNAME="RFCGR" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="RZLLI_ACN" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Groupe de serveurs RFC pour traitement parallèle" REPTEXT="Groupe de serveurs" SCRTEXT_S="Grp.srv." SCRTEXT_M="Groupe serveurs" SCRTEXT_L="Groupe de serveurs" DOMNAME3L="RZLLI_ACN" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="SERVER_USER" DDLANGUAGE="F" POSITION="0002" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="SERVER_DEFAULT" DDLANGUAGE="F" POSITION="0003" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TASK_MAX" DDLANGUAGE="F" POSITION="0004" ROLLNAME="INT4" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" DOMNAME="INT4" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Entier naturel" SCRTEXT_S="Nombre" SCRTEXT_M="Nombre" SCRTEXT_L="Entier naturel" DOMNAME3L="INT4" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TARGET_REPID" DDLANGUAGE="F" POSITION="0005" ROLLNAME="PROGNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="PROGNAME" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom du programme ABAP" REPTEXT="Progr." SCRTEXT_S="Program." SCRTEXT_M="Nom de progr" SCRTEXT_L="Programme" DOMNAME3L="PROGNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TARGET_FRAMEWORK_INCL_USE" DDLANGUAGE="F" POSITION="0006" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TARGET_FRAMEWORK_INCL_DATA" DDLANGUAGE="F" POSITION="0007" ROLLNAME="ZTEC_S_TASK_WIZARD_INCL" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Tâche - Données Assistant - Pour Gestion Include" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="INCLUDE_NAME" DDLANGUAGE="F" POSITION="0008" ROLLNAME="PROGNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="PROGNAME" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom du programme ABAP" REPTEXT="Progr." SCRTEXT_S="Program." SCRTEXT_M="Nom de progr" SCRTEXT_L="Programme" DOMNAME3L="PROGNAME" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="INCLUDE_CREATE" DDLANGUAGE="F" POSITION="0009" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="INCLUDE_CHANGE" DDLANGUAGE="F" POSITION="0010" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TARGET_SELSCREEN_ADD" DDLANGUAGE="F" POSITION="0011" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TARGET_SELSCREEN_INCL_USE" DDLANGUAGE="F" POSITION="0012" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TARGET_SELSCREEN_INCL_DATA" DDLANGUAGE="F" POSITION="0013" ROLLNAME="ZTEC_S_TASK_WIZARD_INCL" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Tâche - Données Assistant - Pour Gestion Include" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="INCLUDE_NAME" DDLANGUAGE="F" POSITION="0014" ROLLNAME="PROGNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="PROGNAME" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom du programme ABAP" REPTEXT="Progr." SCRTEXT_S="Program." SCRTEXT_M="Nom de progr" SCRTEXT_L="Programme" DOMNAME3L="PROGNAME" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="INCLUDE_CREATE" DDLANGUAGE="F" POSITION="0015" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="INCLUDE_CHANGE" DDLANGUAGE="F" POSITION="0016" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TASK_TEMPLATE_REPID" DDLANGUAGE="F" POSITION="0017" ROLLNAME="PROGNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="PROGNAME" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom du programme ABAP" REPTEXT="Progr." SCRTEXT_S="Program." SCRTEXT_M="Nom de progr" SCRTEXT_L="Programme" DOMNAME3L="PROGNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TASK_CLASS_REPLACE" DDLANGUAGE="F" POSITION="0018" ADMINFIELD="0" INTTYPE="g" INTLEN="000008" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRG" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRG" MASKLEN="0000" DEPTH="00" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="T_TASK_CALL_PROCESS" DDLANGUAGE="F" POSITION="0019" ROLLNAME="ZTEC_T_TASK_CALL_PROCESS" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="TTYP" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  TTYPL" MASKLEN="0000" DDTEXT="Tâche - Type de Table de Traitement à lancer" DEPTH="00" COMPTYPE="L" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="SHM_MANAGEMENT" DDLANGUAGE="F" POSITION="0020" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="TRACE_ACTIV" DDLANGUAGE="F" POSITION="0021" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="COMPRESS_ACTIV" DDLANGUAGE="F" POSITION="0022" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vérité XSD : vrai/faux [ext.]" REPTEXT="Val. vérité" SCRTEXT_S="Val.vérité" SCRTEXT_M="Val. de vérité" SCRTEXT_L="Valeur de vérité" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="COMPRESS_MODE" DDLANGUAGE="F" POSITION="0023" ROLLNAME="ZTEC_S_TASK_COMPRESS_PARAM" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="STRU" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  STRUS" MASKLEN="0000" DDTEXT="Tâche - Paramètres de compression" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="DATA_COMPRESS_LINE_BY_LINE" DDLANGUAGE="F" POSITION="0024" ROLLNAME="ZTASK_DATA_COMPRESS_LINE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Tâche - Données - Compression données (ligne)" REPTEXT="Compression données lignes / lignes" SCRTEXT_S="Comp." SCRTEXT_M="Comp. L/L" SCRTEXT_L="Compression données" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_TASK_WIZARD_DATA" FIELDNAME="DATA_COMPRESS_GLOBAL" DDLANGUAGE="F" POSITION="0025" ROLLNAME="ZTASK_DATA_COMPRESS_GLOBAL" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="28" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Tâche - Données - Compression données globales" REPTEXT="Compression données globales" SCRTEXT_S="Comp. glb" SCRTEXT_M="Comp. globale" SCRTEXT_L="Compression globale" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="01" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <CLAS CLSNAME="ZCL_IM_WB_OBJ_CTMENU" VERSION="1" LANGU="F" DESCRIPT="Classe d&apos;implémentation pour implémentation de Business Add-" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <implementing CLSNAME="ZCL_IM_WB_OBJ_CTMENU" REFCLSNAME="IF_EX_WB_OBJ_CTMENU" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool>
   <language SPRAS="F">
    <textElement ID="I" KEY="A01" ENTRY="Assistant" LENGTH="19 "/>
    <textElement ID="I" KEY="N01" ENTRY="Cadriciel Tâche" LENGTH="15 "/>
   </language>
  </textPool>
  <attribute CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="MC_FC_TASK_WZ" VERSION="1" LANGU="F" DESCRIPT="Code de fonction" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTVALUE="&apos;Z_WZ_TASK&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="UI_FUNC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="MO_TASK_CONTEXT_MENU" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_CTMENU" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <interfaceMethod CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CPDNAME="IF_EX_WB_OBJ_CTMENU~UPDATE_CONTEXT_MENU">
   <source>METHOD if_ex_wb_obj_ctmenu~update_context_menu.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Ajout Menu Contextuelle personnalisé
  &quot; -----------------------------------------------------------

  &quot; Suivant le Noeud séléctionné
  CASE flt_val.

    WHEN &apos;P&apos;.                                               &quot;#EC NOTEXT
      &quot; Programme
      &quot;&quot;  --&gt; Ajout Elèment Menu Contextuelle lié aux Tâches
      me-&gt;task_ctxt_menu_add( p_context_menu ).

    WHEN OTHERS.
      &quot; Autres

  ENDCASE.

ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD class_constructor.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : CLASS_CONSTRUCTOR                                 *
*&amp; Classe          : ZCL_IM_WB_OBJ_CTMENU                              *
*&amp; Description     : Constructeur Statique - Menu Contextuel           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation Attributs
  &quot; -----------------------------------------------------------

  IF NOT zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu IS BOUND.
    &quot; Menu Contextuel Tâche non créé
    &quot;&quot;  --&gt; Création du Menu Contextuel
    zcl_im_wb_obj_ctmenu=&gt;task_ctxt_menu_set( ).

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_IM_WB_OBJ_CTMENU                              *
*&amp; Description     : Constructeur BADI Modif. Menu Contextuel          *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation Attributs
  &quot; -----------------------------------------------------------

  IF NOT zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu IS BOUND.
    &quot; Menu Contextuel Tâche non créé
    &quot;&quot;  --&gt; Création du Menu Contextuel
    zcl_im_wb_obj_ctmenu=&gt;task_ctxt_menu_set( ).

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="TASK_CTXT_MENU_ADD" VERSION="1" LANGU="F" DESCRIPT="Tâche - Menu Contextuel - Ajout" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="TASK_CTXT_MENU_ADD" SCONAME="IO_CONTEXT_MENU" VERSION="1" LANGU="F" DESCRIPT="Context Menu" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_CTMENU"/>
   <source>METHOD task_ctxt_menu_add.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : TASK_CTXT_MENU_ADD                                *
*&amp; Classe          : ZCL_IM_WB_OBJ_CTMENU                              *
*&amp; Description     : Tâche - Menu Contextuel - Ajout au Standard       *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Ajout du Groupe Tâche dans le Menu Contextuel
  &quot; -----------------------------------------------------------

  IF NOT zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu IS BOUND.
    &quot; Menu Contextuel Tâche non créé
    &quot;&quot;  --&gt; Création du Menu Contextuel
    zcl_im_wb_obj_ctmenu=&gt;task_ctxt_menu_set( ).

  ENDIF.

  &quot; Ajout Sous-Menu Tâche
  io_context_menu-&gt;add_separator( ).
  io_context_menu-&gt;add_submenu(
      menu = zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu
      text = text-n01
  ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_IM_WB_OBJ_CTMENU" CMPNAME="TASK_CTXT_MENU_SET" VERSION="1" LANGU="F" DESCRIPT="Tâche - Menu Contextuel - Initialisation" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD task_ctxt_menu_set.
*&amp;---------------------------------------------------------------------*
*&amp; Méthode         : TASK_CTXT_MENU_SET                                *
*&amp; Classe          : ZCL_IM_WB_OBJ_CTMENU                              *
*&amp; Description     : Tâche - Menu Contextuel - Initialisation          *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Créé par     : Olivier Véhier                                       *
*                                                                      *
*&amp; Créé le      : 22/07/2015                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Tâche - Création du Menu Contextuel
  &quot; -----------------------------------------------------------

  IF zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu IS BOUND.
    &quot; Menu Contextuel déjà initialisé
    &quot;&quot;  --&gt; Arrêt du traitemetn
    RETURN.

  ENDIF.

  &quot; Création instance du Menu Contextuel
  zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu = NEW cl_ctmenu( ).

  &quot; -----------------------------------------------------------
  &quot; Ajout des Fonctions
  &quot; -----------------------------------------------------------

  &quot; Ajout Fonction - Assistant
  zcl_im_wb_obj_ctmenu=&gt;mo_task_context_menu-&gt;add_function(
      fcode             = mc_fc_task_wz
      text              = text-a01
  ).

ENDMETHOD.</source>
  </method>
 </CLAS>
</nugget>
